<?xml version="1.0"?>
<doc>
  <assembly>
    <name>LitDev</name>
  </assembly>
  <members>
    <member name="M:Bing.BingSearchContainer.Composite(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
      </summary>
      <param name="Sources">Bing search sources Sample Values : web+image+video+news+spell</param>
      <param name="Query">Bing search query Sample Values : xbox</param>
      <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
      <param name="WebSearchOptions">Specify options for a request to the Web SourceType. Valid values are: DisableHostCollapsing, DisableQueryAlterations. Sample Values : DisableQueryAlterations</param>
      <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
      <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
      <param name="Latitude">Latitude Sample Values : 47.603450</param>
      <param name="Longitude">Longitude Sample Values : -122.329696</param>
      <param name="WebFileType">File extensions to return Sample Values : XLS</param>
      <param name="ImageFilters">Array of strings that filter the response the API sends based on size, aspect, color, style, face or any combination thereof. Valid values are: Size:Small, Size:Medium, Size:Large, Size:Width:[Width], Size:Height:[Height], Aspect:Square, Aspect:Wide, Aspect:Tall, Color:Color, Color:Monochrome, Style:Photo, Style:Graphics, Face:Face, Face:Portrait, Face:Other. Sample Values : Size:Small+Aspect:Square</param>
      <param name="VideoFilters">Array of strings that filter the response the API sends based on size, aspect, color, style, face or any combination thereof. Valid values are: Duration:Short, Duration:Medium, Duration:Long, Aspect:Standard, Aspect:Widescreen, Resolution:Low, Resolution:Medium, Resolution:High. Sample Values : Duration:Short+Resolution:High</param>
      <param name="VideoSortBy">The sort order of results returned Sample Values : Date</param>
      <param name="NewsLocationOverride">Overrides Bing location detection. This parameter is only applicable in en-US market. Sample Values : US.WA</param>
      <param name="NewsCategory">The category of news for which to provide results Sample Values : rt_Business</param>
      <param name="NewsSortBy">The sort order of results returned Sample Values : Date</param>
    </member>
    <member name="M:Bing.BingSearchContainer.Web(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String)">
      <summary>
      </summary>
      <param name="Query">Bing search query Sample Values : xbox</param>
      <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
      <param name="WebSearchOptions">Specify options for a request to the Web SourceType. Valid values are: DisableHostCollapsing, DisableQueryAlterations. Sample Values : DisableQueryAlterations</param>
      <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
      <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
      <param name="Latitude">Latitude Sample Values : 47.603450</param>
      <param name="Longitude">Longitude Sample Values : -122.329696</param>
      <param name="WebFileType">File extensions to return Sample Values : XLS</param>
    </member>
    <member name="M:Bing.BingSearchContainer.Image(System.String,System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String)">
      <summary>
      </summary>
      <param name="Query">Bing search query Sample Values : xbox</param>
      <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
      <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
      <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
      <param name="Latitude">Latitude Sample Values : 47.603450</param>
      <param name="Longitude">Longitude Sample Values : -122.329696</param>
      <param name="ImageFilters">Array of strings that filter the response the API sends based on size, aspect, color, style, face or any combination thereof. Valid values are: Size:Small, Size:Medium, Size:Large, Size:Width:[Width], Size:Height:[Height], Aspect:Square, Aspect:Wide, Aspect:Tall, Color:Color, Color:Monochrome, Style:Photo, Style:Graphics, Face:Face, Face:Portrait, Face:Other. Sample Values : Size:Small+Aspect:Square</param>
    </member>
    <member name="M:Bing.BingSearchContainer.Video(System.String,System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String)">
      <summary>
      </summary>
      <param name="Query">Bing search query Sample Values : xbox</param>
      <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
      <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
      <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
      <param name="Latitude">Latitude Sample Values : 47.603450</param>
      <param name="Longitude">Longitude Sample Values : -122.329696</param>
      <param name="VideoFilters">Array of strings that filter the response the API sends based on size, aspect, color, style, face or any combination thereof. Valid values are: Duration:Short, Duration:Medium, Duration:Long, Aspect:Standard, Aspect:Widescreen, Resolution:Low, Resolution:Medium, Resolution:High. Sample Values : Duration:Short+Resolution:High</param>
      <param name="VideoSortBy">The sort order of results returned Sample Values : Date</param>
    </member>
    <member name="M:Bing.BingSearchContainer.News(System.String,System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double},System.String,System.String,System.String)">
      <summary>
      </summary>
      <param name="Query">Bing search query Sample Values : xbox</param>
      <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
      <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
      <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
      <param name="Latitude">Latitude Sample Values : 47.603450</param>
      <param name="Longitude">Longitude Sample Values : -122.329696</param>
      <param name="NewsLocationOverride">Overrides Bing location detection. This parameter is only applicable in en-US market. Sample Values : US.WA</param>
      <param name="NewsCategory">The category of news for which to provide results Sample Values : rt_Business</param>
      <param name="NewsSortBy">The sort order of results returned Sample Values : Date</param>
    </member>
    <member name="M:Bing.BingSearchContainer.RelatedSearch(System.String,System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>
      </summary>
      <param name="Query">Bing search query Sample Values : xbox</param>
      <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
      <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
      <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
      <param name="Latitude">Latitude Sample Values : 47.603450</param>
      <param name="Longitude">Longitude Sample Values : -122.329696</param>
    </member>
    <member name="M:Bing.BingSearchContainer.SpellingSuggestions(System.String,System.String,System.String,System.String,System.Nullable{System.Double},System.Nullable{System.Double})">
      <summary>
      </summary>
      <param name="Query">Bing search query Sample Values : xblox</param>
      <param name="Options">Specifies options for this request for all Sources. Valid values are: DisableLocationDetection, EnableHighlighting. Sample Values : EnableHighlighting</param>
      <param name="Market">Market. Note: Not all Sources support all markets. Sample Values : en-US</param>
      <param name="Adult">Adult setting is used for filtering sexually explicit content Sample Values : Moderate</param>
      <param name="Latitude">Latitude Sample Values : 47.603450</param>
      <param name="Longitude">Longitude Sample Values : -122.329696</param>
    </member>
    <member name="T:LitDev.LDFastArray">
      <summary>
            This object provides another faster way of storing values in an Array.
            It can handle 1, 2, 3 and higher dimensional arrays and has methods to read and write arrays to files, including in CSV format.
            It is also possible for different rows in an array to have different dimensions or numbers of elements (jagged array), just like Small Basic arrays.
            Internally it uses lists that allow the sizes to grow so that the array dimension or size doesn't need to be set at the start.
            The indexing is by integer starting from 1.
            For 1D arrays it is recommended to use LDList since it has additional sort methods.
            Elements in arrays with dimension greater than 3 are indexed by a comma separated list of indices or index variable names.
            </summary>
    </member>
    <member name="M:LitDev.LDFastArray.Add">
      <summary>
            Create a new array.
            This is a general array that can be used as a 1D, 2D, 3D or higher dimension array, depending on the data set.
            </summary>
      <returns>The array name.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Set(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a value.
            Set1D, Set2D or Set3D methods are marginally faster for lower dimension arrays.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="indices">A comma (or space) separated list of index values (slower) or index variable names (faster).
            e.g. "3,2,6" or "i,j,k"
            If this is set to "", then previously set index variables are used.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:LitDev.LDFastArray.Set1D(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a 1D value.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="index1">The first dimension integer index.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:LitDev.LDFastArray.Set2D(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a 2D value.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="index1">The first dimension integer index.</param>
      <param name="index2">The second dimension integer index.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:LitDev.LDFastArray.Set3D(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a 3D value.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="index1">The first dimension integer index.</param>
      <param name="index2">The second dimension integer index.</param>
      <param name="index3">The third dimension integer index.</param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:LitDev.LDFastArray.Get(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a value.
            Get1D, Get2D or Get3D methods are marginally faster for lower dimension arrays.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="indices">A comma (or space) separated list of index values (slower) or index variable names (faster).
            e.g. "3,2,6" or "i,j,k"
            If this is set to "", then previously set index variables are used.</param>
      <returns>The array value or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Get1D(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a 1D value.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="index1">The first dimension integer index.</param>
      <returns>The array value or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Get2D(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a 2D value.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="index1">The first dimension integer index.</param>
      <param name="index2">The second dimension integer index.</param>
      <returns>The array value or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Get3D(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a 3D value.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="index1">The first dimension integer index.</param>
      <param name="index2">The second dimension integer index.</param>
      <param name="index3">The third dimension integer index.</param>
      <returns>The array value or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Size(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the current size of a dimension.
            Size1, Size2 or Size3 methods are marginally faster for lower dimension arrays.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="indices">A comma (or space) separated list of indices.
            e.g. "" for first dimension or "3" for second dimension of 3rd element in first dimension.</param>
      <returns>The dimension size.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Size1(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the current size of the first dimension.
            </summary>
      <param name="arrayName">The array name.</param>
      <returns>The dimension size.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Size2(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the current size of the second dimension.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="index1">The first index to get the size of, may be 1 if all rows have the same size.</param>
      <returns>The dimension size.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Size3(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the current size of the third dimension.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="index1">The first index to get the size of, may be 1 if all rows have the same size.</param>
      <param name="index2">The second index to get the size of, may be 1 if all rows have the same size.</param>
      <returns>The dimension size.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Dimension(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the dimension of an array.
            </summary>
      <param name="arrayName">The array name.</param>
      <returns>The array dimension.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Remove(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Delete an array.
            </summary>
      <param name="arrayName">The array name.</param>
    </member>
    <member name="M:LitDev.LDFastArray.ReadCSV(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Read a CSV (comma separated values) file into a 2D FastArray array.
            The deliminator may be changed from a comma using Utilities.CSVDeliminator
            </summary>
      <param name="fileName">The full path of the CSV file.</param>
      <returns>A 2D FastArray with CSV file imported or "".</returns>
    </member>
    <member name="M:LitDev.LDFastArray.WriteCSV(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Write a 2D FastArray array to a CSV (comma separated values) file.
            The deliminator may be changed from a comma using Utilities.CSVDeliminator
            </summary>
      <param name="arrayName">The 2D array name.</param>
      <param name="fileName">The full path of the CSV file.</param>
    </member>
    <member name="M:LitDev.LDFastArray.CreateFromValues(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert a SmallBasic array to a FastArray array.
            All indices in the Small Basic array are replaced with consecutive integer indices.
            </summary>
      <param name="sbArray">The Small Basic array.</param>
      <returns>A new FastArray or "".</returns>
    </member>
    <member name="M:LitDev.LDFastArray.CreateFromIndices(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert a SmallBasic array (up to 3 dimensions) to a FastArray array.
            This method creates an array only containing the Small Basic array indices.
            </summary>
      <param name="sbArray">The Small Basic array.</param>
      <returns>A new FastArray or "".</returns>
    </member>
    <member name="M:LitDev.LDFastArray.ToArray(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert a FastArray array to a Small Basic array.
            </summary>
      <param name="arrayName">The array name.</param>
      <returns>A Small Basic array or "".</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Collapse(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove all empty "" entries in an array.
            Note that indices or even dimensions may change if internal entries are removed.
            </summary>
      <param name="arrayName">The array name.</param>
    </member>
    <member name="M:LitDev.LDFastArray.Read(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a new array and initialise it from a file.
            If the file is text based and doesn't have the same indexing format as Write, then a 1D array with each line is created.
            </summary>
      <param name="fileName">The full path of the file.</param>
      <param name="binary">Binary ("True") or text ("False") formatted file.</param>
      <returns>The array name.</returns>
    </member>
    <member name="M:LitDev.LDFastArray.Write(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save an array to a file.
            If the array is 1D and written as a text, then each entry is just written to a line with no indexing.
            </summary>
      <param name="arrayName">The array name.</param>
      <param name="fileName">The full path of the file.</param>
      <param name="binary">Binary ("True") or text ("False") formatted file.</param>
    </member>
    <member name="M:LitDev.LDFastArray.Copy(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy an array.
            </summary>
      <param name="arrayName">The array name.</param>
      <returns>A copy of the array.</returns>
    </member>
    <member name="T:LitDev.LDVector">
      <summary>
            3D vector algebra methods, useful for LD3DView manipulations.
            All vectors or points are a 3 element array indexed by 1,2,3.
            </summary>
    </member>
    <member name="M:LitDev.LDVector.Rotate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rotate one vector about a direction defined by a second vector.
            </summary>
      <param name="vector">The vector to rotate.</param>
      <param name="about">The vector axis direction to rotate about.</param>
      <param name="angle">The angle (in degrees) to rotate the vector by.</param>
      <returns>The rotated vector or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDVector.RotatePoint(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rotate a point about a specified center point and direction.
            </summary>
      <param name="point">The point to rotate.</param>
      <param name="center">The point to rotate about.</param>
      <param name="about">The vector axis direction to rotate about.</param>
      <param name="angle">The angle (in degrees) to rotate the point by.</param>
      <returns>The rotated point or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDVector.DotProduct(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the dot product of 2 vectors.
            </summary>
      <param name="vector1">The first vector.</param>
      <param name="vector2">The second vector.</param>
      <returns>The dot product or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDVector.CrossProduct(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the vector cross product of 2 vectors.
            </summary>
      <param name="vector1">The first vector.</param>
      <param name="vector2">The second vector.</param>
      <returns>The vector cross product or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDVector.AngleBetween(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the angle between 2 vectors.
            </summary>
      <param name="vector1">The first vector.</param>
      <param name="vector2">The second vector.</param>
      <returns>The angle (in degrees) between the vectors or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDVector.Normalise(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Normalise a vector to unit length.
            </summary>
      <param name="vector">The vector.</param>
      <returns>A rescaled vector of unit length or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDVector.Length(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the length of a vector.
            </summary>
      <param name="vector">The vector.</param>
      <returns>The vector length or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDVector.Multiply(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Multiply a vector by a scalar.
            </summary>
      <param name="vector">The vector.</param>
      <param name="scalar">A scalar number to resize the vector.</param>
      <returns>The rescaled vector or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDVector.Add(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add 2 vectors.
            </summary>
      <param name="vector1">The first vector.</param>
      <param name="vector2">The second vector.</param>
      <returns>The resulting vector or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDVector.Subtract(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Subtract one vector from another.
            </summary>
      <param name="vector1">The first vector.</param>
      <param name="vector2">The second vector (to subtract from the first).</param>
      <returns>The resulting vector or "" on failure.</returns>
    </member>
    <member name="T:LitDev.LDTimer">
      <summary>
            Additional timers.
            </summary>
    </member>
    <member name="M:LitDev.LDTimer.Add">
      <summary>
            Create a new timer.  All timers created with this method call the event subroutine defined by Tick.
            </summary>
      <returns>The timer name.</returns>
    </member>
    <member name="M:LitDev.LDTimer.AddTick(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a new timer.  This timer only calls its own event subroutine.
            </summary>
      <param name="tick">The event subroutine for this timer.</param>
      <returns>The timer name.</returns>
    </member>
    <member name="M:LitDev.LDTimer.Interval(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Starts or resumes a timer.
            </summary>
      <param name="timer">The timer name.</param>
      <param name="interval">Sets the interval (in milliseconds) specifying how often the timer should raise the Tick event.  This value can range from 10 to 100000000.</param>
    </member>
    <member name="M:LitDev.LDTimer.Pause(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Pauses a timer.  Tick events will not be raised.
            </summary>
      <param name="timer">The timer name.</param>
    </member>
    <member name="M:LitDev.LDTimer.Resume(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Resumes a timer from a paused state.  Tick events will now be raised.
            </summary>
      <param name="timer">The timer name.</param>
    </member>
    <member name="P:LitDev.LDTimer.LastTimer">
      <summary>
            The last timer created with Add that raised an event.
            </summary>
    </member>
    <member name="E:LitDev.LDTimer.Tick">
      <summary>
            Raises an event when a timer created with Add ticks.
            </summary>
    </member>
    <member name="T:LitDev.LDUnits">
      <summary>
            A general editable unit conversion system.
            All units and dimensions are case sensitive.
            A base unit consists of a single dimension and name, and are all independent.
            A derived unit consists of a description, name and units definition consisting of base or other derived units, and optional additive term, usually 0.
            A unit is parsed by separting . / + - and *, then recursively resolving derived unit conversions, bracketed () terms first.
            Values (especially those with a decimal point '.' or minus '-') should be contained in ().
            A unit may be prefixed by a prefix or number value (e.g. m is mili 0.001, K is kilo 1000 etc).
            Any unit may be postfixed by a power.
            A typical unit may be "mile/hr", "m/s2" or "MJ/day" etc and can be any combination of base and derived units.
            Any pair of unis that are dimensionally the same can be converted.
            An additive value is only used for non-compound unit conversions (e.g. C to F).
            To avoid obscure prefix unit conflicts use a full prefix name (e.g. min could be 60 seconds or 0.001 inches, the latter should be milliin).  
            Currency conversions are updated daily.
            </summary>
    </member>
    <member name="M:LitDev.LDUnits.Convert(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert a value from one unit to another.
            </summary>
      <param name="value">The value to convert.</param>
      <param name="fromUnit">The units to convert from.</param>
      <param name="toUnit">The units to convert to.</param>
      <returns>
            The converted value or "FAILED" (usually non-existant unit or inconsistant dimensions).
            </returns>
    </member>
    <member name="M:LitDev.LDUnits.GetErrors">
      <summary>
            Get an array of error messages if a Convert fails or conflicts are found for added units or constants.
            </summary>
      <returns>Array of error messages or "".</returns>
    </member>
    <member name="M:LitDev.LDUnits.GetDimensions(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of dimensions for a unit.
            </summary>
      <param name="unit">The unit to get dimensins of.</param>
      <returns>
            An array indexed by dimension and value of the dimension power or "".
            </returns>
    </member>
    <member name="M:LitDev.LDUnits.GetBaseUnits">
      <summary>
            Get a list of current base units.
            </summary>
      <returns>
            An array of available base units, indexed by unit dimension.
            The array values are the base unit names.
            </returns>
    </member>
    <member name="M:LitDev.LDUnits.GetDerivedUnits">
      <summary>
            Get a list of current derived units.
            </summary>
      <returns>
            An array of available derived units, indexed by unit name with (description).
            The array values are the base (or derived units) used for conversion.
            </returns>
    </member>
    <member name="M:LitDev.LDUnits.GetConstants">
      <summary>
            Get a list of current constants.
            </summary>
      <returns>An array of available constants, indexed by constant name with (description).
            The array values are the constant values.
            </returns>
    </member>
    <member name="M:LitDev.LDUnits.GetPrefixes">
      <summary>
            Get a list of current prefixes.
            </summary>
      <returns>An array of available prefices, indexed by prefix name.
            The array value is the prefix value.
            </returns>
    </member>
    <member name="M:LitDev.LDUnits.AddBaseUnit(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a base unit to the system.
            </summary>
      <param name="dimension">The base unit dimension (e.g. TEMPERATURE).</param>
      <param name="name">The unit name (be careful it doesn't confict with existing unit names).</param>
    </member>
    <member name="M:LitDev.LDUnits.AddDerivedUnit(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a derived unit to the system.
            </summary>
      <param name="description">An optional long name or description of the derived unit.</param>
      <param name="name">The unit name (be careful it doesn't confict with existing unit names).</param>
      <param name="units">The derived unit definition.</param>
      <param name="add">An optional addition term.</param>
    </member>
    <member name="M:LitDev.LDUnits.AddConstant(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a dimensionless constant to the system.
            </summary>
      <param name="description">An optional long name or description of the constant.</param>
      <param name="name">The constant name (be careful it doesn't confict with existing constant names).</param>
      <param name="value">The derived constant value.</param>
    </member>
    <member name="M:LitDev.LDUnits.Export">
      <summary>
            Export the current unit system to a file (units.txt in the current program folder).
            </summary>
    </member>
    <member name="M:LitDev.LDUnits.Import">
      <summary>
            Import a unit system from a file (units.txt in the current program folder).
            </summary>
    </member>
    <member name="T:LitDev.LDFigures">
      <summary>
            Some additional shapes like callouts, arcs and arrows.
            </summary>
    </member>
    <member name="M:LitDev.LDFigures.AddArc(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add an arc shape.
            </summary>
      <param name="width">The width of the shape.</param>
      <param name="height">The height of the shape.</param>
      <param name="startAngle">The starting angle in degrees.</param>
      <param name="endAngle">The ending angle in degrees.</param>
      <param name="thickness">The thickness of the arc in pixels.</param>
      <returns>The shape name.</returns>
    </member>
    <member name="M:LitDev.LDFigures.AddBlockArrow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add an block arrow shape.
            </summary>
      <param name="width">The width of the shape.</param>
      <param name="height">The height of the shape.</param>
      <param name="thickness">The relative thickness of the arrow shaft, e.g. 0.25.</param>
      <param name="arrowAngle">The arrow head angle in degrees.</param>
      <param name="direction">The direction of the arrow: "Up", "Down", "Left" or "Right".</param>
      <returns>The shape name.</returns>
    </member>
    <member name="M:LitDev.LDFigures.AddCallout(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a callout shape.
            </summary>
      <param name="width">The width of the shape.</param>
      <param name="height">The height of the shape.</param>
      <param name="text">The callout text.</param>
      <param name="style">The callout style: "Cloud", "Oval", "Rectangle" or "RoundedRectangle".</param>
      <param name="anchor">Position of callout anchor relative to the callout size (e.g. "X=0;Y=1.25;")</param>
      <returns>The shape name.</returns>
    </member>
    <member name="M:LitDev.LDFigures.AddLineArrow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a line arrow shape.
            </summary>
      <param name="width">The width of the shape.</param>
      <param name="height">The height of the shape.</param>
      <param name="size">The size of the arrow head in pixels.</param>
      <param name="bend">The arrow bend amount (e.g. 0 is straight, 0.5 is smoothly bending).</param>
      <param name="startArrow">The start arrow type: "None", "Arrow", "Open", "Oval" or "Stealth".</param>
      <param name="endArrow">The end arrow type: "None", "Arrow", "Open", "Oval" or "Stealth".</param>
      <param name="startCorner">The start corner position: "BottomLeft", "BottomRight", "TopLeft" or "TopRight".  The arrow will terminate in the opposite corner.</param>
      <returns>The shape name.</returns>
    </member>
    <member name="M:LitDev.LDFigures.AddRegularPolygon(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a regular polygon shape.
            </summary>
      <param name="width">The width of the shape.</param>
      <param name="height">The height of the shape.</param>
      <param name="corners">The number of corners.</param>
      <param name="radius">A relative radius for star shapes (e.g. 1 for pentagon, 0.5 for 5 pointed star).</param>
      <returns>The shape name.</returns>
    </member>
    <member name="T:LitDev.LDEffect">
      <summary>
            Apply visual effects to any shape or control.
            </summary>
    </member>
    <member name="M:LitDev.LDEffect.Clear(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Clear effects.
            </summary>
      <param name="shapeName">The shape to clear the effects from.</param>
    </member>
    <member name="M:LitDev.LDEffect.DropShadow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a drop shadow effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            BlurRadius (default 5)
            Color (default "Black")
            Direction (default 315)
            Opacity (default 1)
            ShadowDepth (default 5)
            </param>
    </member>
    <member name="M:LitDev.LDEffect.Blur(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a blur effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            KernelType (default "Gaussian" or "Box")
            Radius (default 5)
            </param>
    </member>
    <member name="M:LitDev.LDEffect.Bloom(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a bloom effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            BaseIntensity (default 1)
            BaseSaturation (default 1)
            BloomIntensity (default 1.25)
            BloomSaturation (default 1)
            Threshold (default 0.25)
            </param>
    </member>
    <member name="M:LitDev.LDEffect.ColourTone(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a colour tone effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            Desaturation (default 0.5)
            ToneAmount (default 0.5)
            LightColor (default "#FFE580")
            DarkColor (default "#338000")
            </param>
    </member>
    <member name="M:LitDev.LDEffect.Embossed(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply an embossed effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            Amount (default 3)
            Color (default "Gray")
            Height (default 0.001)
            </param>
    </member>
    <member name="M:LitDev.LDEffect.Magnify(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a magnify effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            Amount (default 0.5)
            Center (default "X=0.5;Y=0.5;")
            InnerRadius (default 0.2)
            OuterRadius (default 0.4)
            </param>
    </member>
    <member name="M:LitDev.LDEffect.Monochrome(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a monochrome effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            Color (default "White")
            </param>
    </member>
    <member name="M:LitDev.LDEffect.Pixelate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a pixelate effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            Pixelation (default 0.75)
            </param>
    </member>
    <member name="M:LitDev.LDEffect.Ripple(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a ripple effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            Center (default "X=0.5;Y=0.5;")
            Frequency (default 40)
            Magnitude (default 0.1)
            Phase (default 10)
            </param>
    </member>
    <member name="M:LitDev.LDEffect.Sharpen(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a sharpen effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            Amount (default 2)
            Height (default 0.0005)
            </param>
    </member>
    <member name="M:LitDev.LDEffect.Swirl(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a swirl effect.
            </summary>
      <param name="shapeName">The shape to apply the effect to.</param>
      <param name="properties">An array of optional ("" for none) properties, indexed by the property name:
            AngleFrequency (default 45)
            Center (default "X=0.5;Y=0.5;")
            TwistAmount (default 10)
            </param>
    </member>
    <member name="T:LitDev.LDBits">
      <summary>
            Bitwise logic to store binary flags in a single number as bits.
            A 32 bit number is used internally.
            This is like a 32 dimension array of 1s and 0s stored in single number.
            The bits (1 to 32) are indexed from 1.
            </summary>
    </member>
    <member name="M:LitDev.LDBits.SetBit(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a bit in a number.
            </summary>
      <param name="var">The number to set the bit.</param>
      <param name="bit">A bit to set (1 to 32).</param>
      <returns>The modified number with bit set.</returns>
    </member>
    <member name="M:LitDev.LDBits.UnsetBit(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Unset a bit in a number.
            </summary>
      <param name="var">The number to unset the bit.</param>
      <param name="bit">A bit to unset (1 to 32).</param>
      <returns>The modified number with bit unset.</returns>
    </member>
    <member name="M:LitDev.LDBits.GetBit(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the bit value in a number.
            </summary>
      <param name="var">The number to test.</param>
      <param name="bit">A bit to test (1 to 32).</param>
      <returns>0 (unset) or 1 (set).</returns>
    </member>
    <member name="M:LitDev.LDBits.Not(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Logically Not a number.
            </summary>
      <param name="var">The number to Not.</param>
      <returns>The Not number (all bits reversed).</returns>
    </member>
    <member name="M:LitDev.LDBits.AndBits(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Logically And 2 numbers.
            </summary>
      <param name="var1">The first number.</param>
      <param name="var2">The second number.</param>
      <returns>The And number (where both input bits are set).</returns>
    </member>
    <member name="M:LitDev.LDBits.OrBits(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Logically Or 2 numbers.
            </summary>
      <param name="var1">The first number.</param>
      <param name="var2">The second number.</param>
      <returns>The Or number (where either input bits are set).</returns>
    </member>
    <member name="M:LitDev.LDBits.XOrBits(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Logically XOr 2 numbers.
            </summary>
      <param name="var1">The first number.</param>
      <param name="var2">The second number.</param>
      <returns>The XOr number (where exclusively either input bits are set).</returns>
    </member>
    <member name="M:LitDev.LDBits.GetBits(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of bit values.
            </summary>
      <param name="var">The number to get the bits.</param>
      <returns>A 32 dimension array of bits (0 or 1).</returns>
    </member>
    <member name="T:LitDev.LDLogic">
      <summary>
            Logic operations.
            To evaluate an expression for use with these options, use LDMath.Evaluate3.
            Example:
            input = 3.1
            result = LDLogic.Switch(LDMath.Evaluate3(input+"&lt;5"),"OK","New input required")
            </summary>
    </member>
    <member name="M:LitDev.LDLogic.Not(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The Not operator.
            Not("True") = "False"
            Not("False") = "True"
            </summary>
      <param name="value">The value to operate on ("True" or "False").</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDLogic.Or_(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The Or operator.  The trailing underscore is to keep SB parser happy not using reserved keyword OR.
            Or_("True","True") = "True"
            Or_("False","False") = "False"
            Or_("True","False") = "True"
            Or_("False","True") = "True"
            </summary>
      <param name="value1">The first value ("True" or "False").</param>
      <param name="value2">The second value ("True" or "False").</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDLogic.And_(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The And operator.  The trailing underscore is to keep SB parser happy not using reserved keyword AND.
            And_("True","True") = "True"
            And_("False","False") = "False"
            And_("True","False") = "False"
            And_("False","True") = "False"
            </summary>
      <param name="value1">The first value ("True" or "False").</param>
      <param name="value2">The second value ("True" or "False").</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDLogic.XOr(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The XOr (exclusive or) operator.
            XOr("True","True") = "False"
            XOr("False","False") = "False"
            XOr("True","False") = "True"
            XOr("False","True") = "True"
            </summary>
      <param name="value1">The first value ("True" or "False").</param>
      <param name="value2">The second value ("True" or "False").</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDLogic.LT(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The less than operator.
            Checks if value1 is less than value2.
            It also works for strings, where a lexical comparison is made.
            </summary>
      <param name="value1">The first value.</param>
      <param name="value2">The second value.</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDLogic.LE(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The less than or equal operator.
            Checks if value1 is less than or equal to value2.
            It also works for strings, where a lexical comparison is made.
            </summary>
      <param name="value1">The first value.</param>
      <param name="value2">The second value.</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDLogic.GT(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The greater than operator.
            Checks if value1 is greater than value2.
            It also works for strings, where a lexical comparison is made.
            </summary>
      <param name="value1">The first value.</param>
      <param name="value2">The second value.</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDLogic.GE(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The greater than or equal operator.
            Checks if value1 is greater than or equal to value2.
            It also works for strings, where a lexical comparison is made.
            </summary>
      <param name="value1">The first value.</param>
      <param name="value2">The second value.</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDLogic.EQ(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The equality operator.
            Checks if value1 is equal to value2.
            It also works for strings, where a lexical comparison is made.
            </summary>
      <param name="value1">The first value.</param>
      <param name="value2">The second value.</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDLogic.NE(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The inequality operator.
            Checks if value1 is not equal to value2.
            It also works for strings, where a lexical comparison is made.
            </summary>
      <param name="value1">The first value.</param>
      <param name="value2">The second value.</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDLogic.Switch(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            A sorthand conditional statement.
            </summary>
      <param name="condition">A condition or variable that evaluates to "True" or "False".</param>
      <param name="value1">The value to return if condition is "True".</param>
      <param name="value2">The value to return if condition is "False".</param>
      <returns>value1 or value2.</returns>
    </member>
    <member name="P:LitDev.LDLogic.CaseSensitive">
      <summary>
            Set if string comparisons are case sensitive ("True", default) or not ("False").
            </summary>
    </member>
    <member name="T:LitDev.LDClipboard">
      <summary>
            Clipboard methods.
            </summary>
    </member>
    <member name="M:LitDev.LDClipboard.Clear">
      <summary>
            Clear the clipboard;
            </summary>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDClipboard.GetImage">
      <summary>
            Load an image from the clipboard into ImageList.
            </summary>
      <returns>The ImageList name or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDClipboard.SetImage(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set an ImageList image to the clipboard.
            </summary>
      <param name="imageName">The ImageList image.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDClipboard.GetFileList">
      <summary>
            Get an array of file names from the clipboard.
            </summary>
      <returns>An array of files or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDClipboard.SetFileList(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a list of files to the clipboard.
            </summary>
      <param name="fileList">An array (or single file) of file names (full path).</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDClipboard.GetText">
      <summary>
            Get text from the clipboard.
            </summary>
      <returns>The clipboard text or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDClipboard.SetText(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set text to the clipboard.
            </summary>
      <param name="text">The text to add to the clipboard.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="P:LitDev.LDClipboard.ImageTransparency">
      <summary>
            Use an extended format for SetImage that includes transparency ("True" default or "False").
            This extended format may not be recognised by some applications when pasted.
            </summary>
    </member>
    <member name="E:LitDev.LDClipboard.ClipboardChanged">
      <summary>
            Event when the clipboard status changes.
            </summary>
    </member>
    <member name="T:LitDev.LDChart">
      <summary>
            Chart control.
            </summary>
    </member>
    <member name="M:LitDev.LDChart.AddChart(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a chart control.
            The current GraphicsWindow.BackgroundColor will be used for the background.
            The current GraphicsWindow.PenColor and Font properties will be used for the label text.
            For Example:
            GraphicsWindow.FontName = "Segoe UI"
            GraphicsWindow.FontBold = "False"
            </summary>
      <param name="width">The width of the chart.</param>
      <param name="height">The height of the chart.</param>
      <returns>The chart shape name.</returns>
    </member>
    <member name="M:LitDev.LDChart.SetData(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set data for a chart.
            </summary>
      <param name="chartName">The chart name.</param>
      <param name="data">The data to set, which is a 1D array, indices are item names.
            Example:
            data["Fred"] = 25
            data["Mary"] = 15
            data["John"] = 40
            </param>
    </member>
    <member name="M:LitDev.LDChart.Properties(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set chart properties.
            </summary>
      <param name="chartName">The chart name.</param>
      <param name="style">A style for the chart, options are:
            "Pie" (default)
            "Doughnut"
            "Bubble"
            "Bar"
            "Column"</param>
      <param name="scale">A scale factor for the chart, default 1.</param>
    </member>
    <member name="M:LitDev.LDChart.ColourMap(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set colour mapping for the chart.
            </summary>
      <param name="chartName">The chart name.</param>
      <param name="hue">A hue (colour 0 to 360), default 0 (red).</param>
      <param name="saturation">A saturation (intensity 0 to 1), default 0.5.</param>
      <param name="lightness">A lightness (brightness 0 to 1), default 0.5.</param>
      <param name="hsl">The parameter to change for different segments, options are:
            "Hue" (default) rainbow colours
            "Saturation" increasing intensity of colour
            "Lightness" increasing brightness</param>
      <param name="start">Starting value for colour variation in the range [0 to 1], default 0.</param>
      <param name="end">Ending value for colour variation in the range [0 to 1], default 1.</param>
      <param name="centralColour">An optional circular gradient color centered on chart, default "".</param>
    </member>
    <member name="M:LitDev.LDChart.Legend(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set legend properties.
            </summary>
      <param name="chartName">The chart name.</param>
      <param name="scale">A scale factor for the legend and text labels, default 1</param>
      <param name="legend">A legend style, options are:
            "None" no legend
            "Legend" separate legend
            "Overlay" names overlaying chart
            "Percent" percentages overlaying chart
            "Legend_Percent" (default) separate legend and percentages overlaying chart
            "</param>
      <param name="background">The legend label text background is coloured, "True" or "False" (default).</param>
    </member>
    <member name="M:LitDev.LDChart.Highlight(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Highlight a chart value (move segment out).
            </summary>
      <param name="chartName">The chart name.</param>
      <param name="label">The segment label.</param>
      <param name="fraction">A fraction of the radius to move segment out (0 to return it).</param>
    </member>
    <member name="M:LitDev.LDChart.Update(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Redraw (update) a chart.
            This restores any highlighted segments or applies any modified chart properties.
            </summary>
      <param name="chartName">The chart name.</param>
    </member>
    <member name="P:LitDev.LDChart.DoughnutFraction">
      <summary>
            Radius fraction removed for doughnut chart, default 0.7.
             </summary>
    </member>
    <member name="P:LitDev.LDChart.HighlightDuration">
      <summary>
            Time in ms for Highlight animations, default 100.
             </summary>
    </member>
    <member name="P:LitDev.LDChart.LastChart">
      <summary>
            The last clicked chart.
            </summary>
    </member>
    <member name="P:LitDev.LDChart.LastLabel">
      <summary>
            The last clicked chart segment label.
            </summary>
    </member>
    <member name="E:LitDev.LDChart.ValueClicked">
      <summary>
            Event when a chart segment is clicked.
            </summary>
    </member>
    <member name="T:LitDev.LDMathX">
      <summary>
            Extended maths methods.
            </summary>
    </member>
    <member name="M:LitDev.LDMathX.FFTForward(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Compute a FFT (Fast Fourier Transform).
            </summary>
      <param name="real">An array of real values to calculate the FFT from.</param>
      <returns>An array of complex data (real amplitude and imaginary phase) or "FAILED".
            For each complex pair the index is the real part and the value is the imaginary part.</returns>
    </member>
    <member name="M:LitDev.LDMathX.FFTInverse(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The inverse of a FFT (Fast Fourier Transform).
            </summary>
      <param name="complex">An array of complex data (real amplitude and imaginary phase).
            For each complex pair the index is the real part and the value is the imaginary part.</param>
      <returns>An array of inverse FFT values or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDMathX.FFTReal(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the real part of an array of complex data.
            </summary>
      <param name="complex">An array of complex data (real amplitude and imaginary phase).
            For each complex pair the index is the real part and the value is the imaginary part.</param>
      <returns>An array of the real part of the data or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDMathX.FFTImaginary(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the imaginary part of an array of complex data.
            </summary>
      <param name="complex">An array of complex data (real amplitude and imaginary phase).
            For each complex pair the index is the real part and the value is the imaginary part.</param>
      <returns>An array of the imaginary part of the data or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDMathX.FFTComplex(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create an array of complex values from arrays of real and imaginary parts.
            </summary>
      <param name="real">An array of real data.</param>
      <param name="imaginary">An array of imaginary data.</param>
      <returns>An array of complex data (real amplitude and imaginary phase), "MISMATCH" or "FAILED".
            For each complex pair the index is the real part and the value is the imaginary part.</returns>
    </member>
    <member name="T:LitDev.LDResources">
      <summary>
            Save and load resources to a binary file.
            The resources are stored in a single file with the same name and location as the source, with extension sbres.
            Resources indlude all ImageList images, all sounds played with Sound.Play, as well as optionally other files or variables.
            </summary>
    </member>
    <member name="M:LitDev.LDResources.CleanTemp">
      <summary>
            Delete temporary sound files.
            </summary>
    </member>
    <member name="M:LitDev.LDResources.AddText(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add text, or may be variable (including arrays) to the resources to be stored.
            </summary>
      <param name="text">The text or a Small Basic variable to add to the resources.</param>
    </member>
    <member name="M:LitDev.LDResources.AddFile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add any file to the resources to be stored.
            </summary>
      <param name="fileName">The full path to the file.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDResources.ExtractFile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Extract a saved file to the current directory (Program.Directory).
            </summary>
      <param name="fileName">The filename returned by Files method.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDResources.Save">
      <summary>
            Save all resource to the sbres file.
            This includes all ImageList images, pre-run sounds (Sound.Play) as well as any added files or text/variables.
            </summary>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDResources.Load">
      <summary>
            Load all previously saved resources from the sbres file.
            ImageList and sounds are all auto loaded ready for use.
            Sound files are re-created in your %temp% folder since they are required by Sound.Play.
            </summary>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="P:LitDev.LDResources.Texts">
      <summary>
            Get an array list of all loaded text/variables.
            </summary>
    </member>
    <member name="P:LitDev.LDResources.Files">
      <summary>
            Get an array of loaded files, that may be extracted with ExtractFile method.
            </summary>
    </member>
    <member name="P:LitDev.LDResources.Images">
      <summary>
            Get an array of loaded images, pre-loaded for use with ImageList.
            </summary>
    </member>
    <member name="P:LitDev.LDResources.Sounds">
      <summary>
            Get an array of loaded sounds, pre-loaded for use with Sound.Play.
            </summary>
    </member>
    <member name="T:LitDev.LDDictionary">
      <summary>
            This class provides access to an online Dictionary service.
            Alternative for Version 1.0 Dictionary object that fails.
            </summary>
    </member>
    <member name="M:LitDev.LDDictionary.GetDefinition(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the definition of a word, in English.
            </summary>
      <param name="word">
            The word to define.
            </param>
      <returns>
            The definition(s) of the specified word.
            </returns>
    </member>
    <member name="M:LitDev.LDDictionary.GetDefinitionInFrench(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the definition of a word, in French.
            </summary>
      <param name="word">
            The word to define.
            </param>
      <returns>
            The definition(s) of the specified word.
            </returns>
    </member>
    <member name="M:LitDev.LDDictionary.GetDefinitionInSpanish(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the definition of a word, in Spanish.
            </summary>
      <param name="word">
            The word to define.
            </param>
      <returns>
            The definition(s) of the specified word.
            </returns>
    </member>
    <member name="F:LitDev.FormEvents.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:LitDev.FormEvents.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:LitDev.FormEvents.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="T:LitDev.LDController">
      <summary>
            Get input from one or more USB attached game controllers (e.g. gamepad or joystick).  If there is more than 1 attached device, then they are numbered from 1.
            
            SlimDX runtme for .Net 4.0 requires to be installed before this object can be used (http://slimdx.org/download.php).
            </summary>
    </member>
    <member name="M:LitDev.LDController.Buttons(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the pressed state of controller buttons.
            </summary>
      <param name="controller">A USB attached controller number (e.g. joystick or gamepad) indexed from 1.</param>
      <returns>An array of button states ("True" or "False")</returns>
    </member>
    <member name="M:LitDev.LDController.Sliders(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the slider position of controller sliders.
            </summary>
      <param name="controller">A USB attached controller number (e.g. joystick or gamepad) indexed from 1.</param>
      <returns>An array of slider positions (0 to 100)</returns>
    </member>
    <member name="M:LitDev.LDController.POV(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the POV (Point Of View) of controller.
            </summary>
      <param name="controller">A USB attached controller number (e.g. joystick or gamepad) indexed from 1.</param>
      <returns>An array of (X,Y,Z) POV values (degrees)</returns>
    </member>
    <member name="M:LitDev.LDController.Position(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the position of a controller joystick.
            </summary>
      <param name="controller">A USB attached controller number (e.g. joystick or gamepad) indexed from 1.</param>
      <returns>An array of (X,Y,Z) position values (-100 to 100)</returns>
    </member>
    <member name="M:LitDev.LDController.Rotation(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the rotation of a controller joystick.
            </summary>
      <param name="controller">A USB attached controller number (e.g. joystick or gamepad) indexed from 1.</param>
      <returns>An array of (X,Y,Z) rotation values (-100 to 100)</returns>
    </member>
    <member name="P:LitDev.LDController.Count">
      <summary>
            Get the number of attached controllers.
            </summary>
    </member>
    <member name="T:LitDev.LDWaveForm">
      <summary>
            Create PPM (Pulse Position Modulation) sound signals to control RC (remote control) devices.
            See http://blogs.msdn.com/b/smallbasic/archive/2014/05/10/smallbasic-pulse-position-modulation-extension.aspx.
            Additonally create simple sound waveforms, which can be played asynchronously at the same time.
            
            SlimDX runtme for .Net 4.0 requires to be installed before this object can be used (http://slimdx.org/download.php).
            </summary>
    </member>
    <member name="M:LitDev.LDWaveForm.Stop(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Stop a playing sound.
            </summary>
      <param name="waveName">The sound wave name.</param>
    </member>
    <member name="M:LitDev.LDWaveForm.PlaySineWave(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Play a Sine wave form.
            </summary>
      <param name="frequency">Frequency (HZ).</param>
      <param name="duration">Duration (ms).  If this is negative then the waveform is repeated (-duration) times.</param>
      <returns>The wave name or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDWaveForm.PlaySquareWave(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Play a square wave form.
            </summary>
      <param name="frequency">Frequency (HZ).</param>
      <param name="duration">Duration (ms).  If this is negative then the waveform is repeated (-duration) times.</param>
      <returns>The wave name or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDWaveForm.PlayWave(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Play a user defined wave form.
            </summary>
      <param name="frequency">Frequency (HZ).</param>
      <param name="duration">Duration (ms).  If this is negative then the waveform is repeated (-duration) times.</param>
      <param name="waveform">Form for the repeating wave.
            This is an array, where the index is an increasing relative time (the actual value is normalised to the frequency) and the value is an amplitude (-1 to 1).
            Example of a triangular wave would be "0=-1;1=1;2=-1;"</param>
      <returns>The wave name or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDWaveForm.PlayHarmonics(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Play a user defined wave form as a sum of harmonics.
            </summary>
      <param name="frequency">Frequency (HZ).</param>
      <param name="duration">Duration (ms).  If this is negative then the waveform is repeated (-duration) times.</param>
      <param name="harmonics">Harmonic amplitudes.
            This is an array, where the index is a harmonic multiple of the base frequency (2, 3, etc) and the value is the relative amplitude of the harmonic.
            A square wave can be formed by (https://en.wikipedia.org/wiki/Square_wave):
            For i = 3 To 21 Step 2
              harmonics[i] = 1/i
            EndFor
            squareWave = LDWaveForm.PlayHarmonics(256,1000,harmonics)</param>
      <returns>The wave name or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDWaveForm.PlayWavFile(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Play a wav file.
            </summary>
      <param name="fileName">The *.wav file.</param>
      <param name="duration">Duration (ms).  If this is negative then the waveform is repeated (-duration) times.</param>
      <returns>The wave name or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDWaveForm.PlayDX7(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Play DX7.
            </summary>
      <param name="channels">An array of values for each channel (values between 0 and 1, usually 8 channels).</param>
      <returns>The wave name or "" on failure.</returns>
    </member>
    <member name="P:LitDev.LDWaveForm.Volume">
      <summary>
            The volume to play the waveform (0 to 100).
            </summary>
    </member>
    <member name="P:LitDev.LDWaveForm.Pan">
      <summary>
            The left (-100) to right (100) stereo panning, (default 0).
            </summary>
    </member>
    <member name="P:LitDev.LDWaveForm.Loop">
      <summary>
            Continuously loop the sound, "True" or "False" default.
            Lopping sounds can be stopped by calling Stop method as they are playing.
            </summary>
    </member>
    <member name="P:LitDev.LDWaveForm.Async">
      <summary>
            Play the sound asynchronously (return before sound completes), "True" or "False" default.
            </summary>
    </member>
    <member name="P:LitDev.LDWaveForm.Amplitude">
      <summary>
            Signal amplitude (maximum is 2^15 = 32768, default is 20262).
            </summary>
    </member>
    <member name="T:LitDev.LDxml">
      <summary>
            xml file parsing methods.
            </summary>
    </member>
    <member name="M:LitDev.LDxml.Open(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Open an existing xml file.  This must be called before any other methods can be used.
            </summary>
      <param name="fileName">The full path to the xml file to open.
            If this is "", then a new empty xml document is created.</param>
      <returns>A name for the document or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.Switch(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Switch to another open xml document.  The current node for all documents are preserved.
            </summary>
      <param name="docName">The name returned by Open method.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.FirstNode">
      <summary>
            Set the current node to the first document node.
            </summary>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.NextSibling">
      <summary>
            Move the current node to the next sibling node if there is one.
            </summary>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.PreviousSibling">
      <summary>
            Move the current node to the previous sibling node if there is one.
            </summary>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.FirstChild">
      <summary>
            Move the current node to the first child node if there is one.
            </summary>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.LastChild">
      <summary>
            Move the current node to the last child node if there is one.
            </summary>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.Parent">
      <summary>
            Move the current node to the parent node if there is one.
            </summary>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.AddNode(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a new node.
            The current node is unchanged, it is not updated to be the new node.
            </summary>
      <param name="name">The new node element name.</param>
      <param name="attributes">An array of attributes (values indexed by attribute name) for the new node or "".</param>
      <param name="text">Inner text for the new node or "".</param>
      <param name="location">Where the node is inserted.
            "Append" - insert at the end of current node's child nodes.
            "Prepend" - insert at the start of current node's child nodes.
            "Before" - insert before the current node.
            "After" - insert after the current node.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.RemoveNode">
      <summary>
            Remove the current node and all child nodes.
            The current node is reset to the previous sibling or parent node if no previous sibling exists.
            </summary>
      <returns>The new current node "SIBLING", "PARENT" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.Save(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save the current xml document to a file.
            </summary>
      <param name="fileName">The full path to the file to write the xml.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.ToArray">
      <summary>
            Convert the current xml document to a Small Basic array.
            The structure and depth of the array may be quite complex.
            Each node has optional arrays "Attributes", and "Children" or "Data".
            If there are are child nodes then they are indexed first by number to deliminate multiple children with the same name.
            </summary>
      <returns>A Small Basic array or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDxml.FromArray(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Performs the inverse function of ToArray method, create an xml document from an array definition.
            </summary>
      <param name="array">A Small Basic array with the correct format.</param>
      <returns>A name for the document or "FAILED".</returns>
    </member>
    <member name="P:LitDev.LDxml.NodeType">
      <summary>
            Get the type of the current node.
            May be one of many types, but commonly "Element" or "Text".
            </summary>
    </member>
    <member name="P:LitDev.LDxml.NodeName">
      <summary>
            Get the name of the current node or "" on failure.
            </summary>
    </member>
    <member name="P:LitDev.LDxml.NodeInnerText">
      <summary>
            Get the inner text of the current node and all children or "" on failure.
            </summary>
    </member>
    <member name="P:LitDev.LDxml.ChildrenCount">
      <summary>
            Get the number of children of the current node.
            </summary>
    </member>
    <member name="P:LitDev.LDxml.AttributesCount">
      <summary>
            Get the number of attributes of the current node.
            </summary>
    </member>
    <member name="P:LitDev.LDxml.Attributes">
      <summary>
            Get an array of attribute text values indexed by attribute name or "" on failure.
            </summary>
    </member>
    <member name="T:LitDev.LDftp">
      <summary>
            ftp Methods.
            </summary>
    </member>
    <member name="M:LitDev.LDftp.Upload(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Upload a file by ftp.
            </summary>
      <param name="localFile">The full path to the local file to upload.</param>
      <param name="remoteFile">The full path (on server) to the remote file to upload.</param>
      <param name="ftpServerIP">The ftp server address (or IP).</param>
      <param name="ftpUserID">The user ID.</param>
      <param name="ftpPassword">The user password.</param>
      <returns>"SUCCESS", "FAILED" or "PENDING" for async.</returns>
    </member>
    <member name="M:LitDev.LDftp.Download(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Download a file by ftp.
            </summary>
      <param name="localFile">The full path to the local file to download.</param>
      <param name="remoteFile">The full path (on server) to the remote file to download.</param>
      <param name="ftpServerIP">The ftp server address (or IP).</param>
      <param name="ftpUserID">The user ID.</param>
      <param name="ftpPassword">The user password.</param>
      <returns>"SUCCESS", "FAILED" or "PENDING" for async.</returns>
    </member>
    <member name="M:LitDev.LDftp.Delete(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Delete a file by ftp.
            </summary>
      <param name="remoteFile">The full path (on server) to the remote file to delete.</param>
      <param name="ftpServerIP">The ftp server address (or IP).</param>
      <param name="ftpUserID">The user ID.</param>
      <param name="ftpPassword">The user password.</param>
      <returns>"SUCCESS", "FAILED" or "PENDING" for async.</returns>
    </member>
    <member name="M:LitDev.LDftp.ListFiles(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a remote folder listing by ftp (non async only).
            </summary>
      <param name="remoteFolder">The full path (on server) to the remote folder to list.</param>
      <param name="ftpServerIP">The ftp server address (or IP).</param>
      <param name="ftpUserID">The user ID.</param>
      <param name="ftpPassword">The user password.</param>
      <returns>An array of file and folder names or "FAILED".  The array is indexed by the file name and the value contains additional information.</returns>
    </member>
    <member name="P:LitDev.LDftp.LastFTPFile">
      <summary>
            The last asynchronous FTP file transfered.
            </summary>
    </member>
    <member name="P:LitDev.LDftp.LastFTPStatus">
      <summary>
            The last asynchronous FTP file status ("SUCCESS" or "FAILED")
            </summary>
    </member>
    <member name="P:LitDev.LDftp.UseBinary">
      <summary>
            Set or get whether ftp transfers use binary (default) or ascii. ("True" or "False").
            </summary>
    </member>
    <member name="P:LitDev.LDftp.DoAssync">
      <summary>
            Set or get whether ftp transfers are performed asynchronously ("True" or "False" default).
            An asynchronous ftp transfer will return immediately and complete in the background.
            The event FTPComplete will be called when the tranfer is finished.
            </summary>
    </member>
    <member name="E:LitDev.LDftp.FTPComplete">
      <summary>
            Event when an asynchronous ftp transfer completes.
            </summary>
    </member>
    <member name="T:LitDev.LDFastShapes">
      <summary>
            Shape methods which are faster than standard Small Basic Shape operations.
            This is primarily for shape movement when there are a large number of shapes updated in a game loop.
            Only the main Shapes commands are supported since these are the ones that are commonly repeated many times.
            The shape must first be created, then registered (ShapeIndex) and the returned integer index used with the other methods.
            The visual update of the changes made does not happen until (Update) is called when all changes are processed together.
            Performance improvements come from both integer indexing and batch update.
            </summary>
    </member>
    <member name="M:LitDev.LDFastShapes.ShapeIndex(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Register a shape for use with this object.
            This command is potentially slow, so should be called before time critical visual updates occur.
            i.e. Create and register all shapes before motion is simulated.
            </summary>
      <param name="shapeName">The name of the created shape.</param>
      <returns>
            An index to use in the other methods in this object.
            The index is an integer starting at 1, incremented for each shape registered.
            -1 for an error.
            </returns>
    </member>
    <member name="M:LitDev.LDFastShapes.Update">
      <summary>
            Update all of the properties of shapes set by this object that have been modifed since the last update.
            The shapes are not visually updated until this method is called.
            </summary>
    </member>
    <member name="M:LitDev.LDFastShapes.Move(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Moves the shape with the specified name to a new position.
            </summary>
      <param name="index">
            The index (returned by ShapeIndex) of the shape to move.
            </param>
      <param name="x">
            The x co-ordinate of the new position.
            </param>
      <param name="y">
            The y co-ordinate of the new position.
            </param>
    </member>
    <member name="M:LitDev.LDFastShapes.GetLeft(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the left co-ordinate of the specified shape.
            </summary>
      <param name="index">
            The index (returned by ShapeIndex) of the shape.
            </param>
      <returns>
            The left co-ordinate of the shape.
            </returns>
    </member>
    <member name="M:LitDev.LDFastShapes.GetTop(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the top co-ordinate of the specified shape.
            </summary>
      <param name="index">
            The index (returned by ShapeIndex) of the shape.
            </param>
      <returns>
            The top co-ordinate of the shape.
            </returns>
    </member>
    <member name="M:LitDev.LDFastShapes.SetOpacity(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sets how opaque a shape should render.
            </summary>
      <param name="index">
            The index (returned by ShapeIndex) of the shape.
            </param>
      <param name="level">
            The opacity level ranging from 0 to 100.  0 is completely transparent and 100 is completely opaque.
            </param>
    </member>
    <member name="M:LitDev.LDFastShapes.GetOpacity(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the opacity of a shape.
            </summary>
      <param name="index">
            The index (returned by ShapeIndex) of the shape.
            </param>
      <returns>
            The opacity of the object as a value between 0 and 100.  0 is completely transparent and 100 is completely opaque.
            </returns>
    </member>
    <member name="M:LitDev.LDFastShapes.Rotate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rotates the shape with the specified name to the specified angle.
            </summary>
      <param name="index">
            The index (returned by ShapeIndex) of the shape.
            </param>
      <param name="angle">
            The angle to rotate the shape.
            </param>
    </member>
    <member name="M:LitDev.LDFastShapes.Zoom(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Scales the shape using the specified zoom levels.
            </summary>
      <param name="index">
            The index (returned by ShapeIndex) of the shape.
            </param>
      <param name="scaleX">
            The x-axis zoom level.
            </param>
      <param name="scaleY">
            The y-axis zoom level.
            </param>
    </member>
    <member name="M:LitDev.LDFastShapes.HideShape(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Hides an already added shape.
            </summary>
      <param name="index">
            The index (returned by ShapeIndex) of the shape.
            </param>
    </member>
    <member name="M:LitDev.LDFastShapes.ShowShape(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Shows a previously hidden shape.
            </summary>
      <param name="index">
            The index (returned by ShapeIndex) of the shape.
            </param>
    </member>
    <member name="T:LitDev.LDColours">
      <summary>
            Gets the Standard SmallBasic colours and other colour utilities.
            </summary>
    </member>
    <member name="M:LitDev.LDColours.HSLtoRGB(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert a Hue, Saturation, Lightness (HSL) color to a Red, Green, Blue (RGB) colour used by SmallBasic.
            </summary>
      <param name="H">Hue (0 to 360).</param>
      <param name="S">Saturation (0 to 1).</param>
      <param name="L">Lightness (0 to 1).</param>
      <returns>An RGB colour</returns>
    </member>
    <member name="M:LitDev.LDColours.SetOpacity(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Modify the opacity of a colour.
            </summary>
      <param name="colour">The colour to modify.</param>
      <param name="opacity">The opacity (0 to 255).</param>
      <returns>The modified colour.</returns>
    </member>
    <member name="M:LitDev.LDColours.GetRed(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the Red component of a colour.
            </summary>
      <param name="colour">The colour to get the component from.</param>
      <returns>The red component (0 to 255).</returns>
    </member>
    <member name="M:LitDev.LDColours.GetGreen(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the Green component of a colour.
            </summary>
      <param name="colour">The colour to get the component from.</param>
      <returns>The green component (0 to 255).</returns>
    </member>
    <member name="M:LitDev.LDColours.GetBlue(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the Blue component of a colour.
            </summary>
      <param name="colour">The colour to get the component from.</param>
      <returns>The blue component (0 to 255).</returns>
    </member>
    <member name="M:LitDev.LDColours.GetOpacity(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the Opacity component of a colour.
            </summary>
      <param name="colour">The colour to get the component from.</param>
      <returns>The opacity component (0 to 255).</returns>
    </member>
    <member name="M:LitDev.LDColours.GetHue(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the Hue component of a colour.
            </summary>
      <param name="colour">The colour to get the component from.</param>
      <returns>The hue component (0 to 360).</returns>
    </member>
    <member name="M:LitDev.LDColours.GetSaturation(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the Saturation component of a colour.
            </summary>
      <param name="colour">The colour to get the component from.</param>
      <returns>The saturation component (0 to 1).</returns>
    </member>
    <member name="M:LitDev.LDColours.GetLightness(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the Lightness component of a colour.
            </summary>
      <param name="colour">The colour to get the component from.</param>
      <returns>The lightness component (0 to 1).</returns>
    </member>
    <member name="T:LitDev.LDArray">
      <summary>
            A 1-Dimensional array method that is much faster than the standard SmallBasic arrays.
            
            Useful for arrays with greater than 100 to 1000 elements.
            An error will result in a return value "FAILED";
            </summary>
    </member>
    <member name="M:LitDev.LDArray.Create(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a new array (can be used for numbers or character strings).
            </summary>
      <param name="maxSize">
            The maximum number of elements in the array.
            </param>
      <returns>
            The array name or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDArray.Delete(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Delete an existing array (not generally required, but can save memory if lots of arrays are created).
            </summary>
      <param name="array">
            The array name.
            </param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDArray.SetValue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set value in array.
            </summary>
      <param name="array">
            The array name.
            </param>
      <param name="index">
            The index at which to add the value (indexed starting from 1).
            </param>
      <param name="value">
            The value.
            </param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDArray.GetValue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get value in array.
            </summary>
      <param name="array">
            The array name.
            </param>
      <param name="index">
            The index at which to get the value (indexed starting from 1).
            </param>
      <returns>
            The value or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDArray.CopyNew(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy one array to a new array.
            </summary>
      <param name="array">
            The array to copy.
            </param>
      <returns>
            A copy of the array or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDArray.Copy(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy one array to another array.
            The dimensions of the 2 arrays must be the same.
            </summary>
      <param name="array1">
            The array to copy from.
            </param>
      <param name="array2">
            The array to copy to.
            </param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDArray.CopyToSBArray(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy LDArray type to SmallBasic array type.
            
            The reverse operation (SmallBasic to LDArray) isn't possible becuase the SmallBasic indexes are not necessarily contiguous integers.
            Note also that a SmallBasic array cannot hold an empty string value, so these will not be copied.
            </summary>
      <param name="array">
            The array name.
            </param>
      <returns>
            The SmallBasic array or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDArray.Sort(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Perform a sort on an LDArray.  
            
            By default the sort is by string value, therefore 10 comes before 2.
            To sort by number value, all values must be a number (or empty).
            
            Empty values are placed at the end of the sort.
            The input array is replaced by the sorted array.
            </summary>
      <param name="array">The array to sort.</param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDArray.Count(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the number of non-empty "" elements in the array.
            </summary>
      <param name="array">The array name.</param>
      <returns>The number of non-empty values in the array.</returns>
    </member>
    <member name="M:LitDev.LDArray.SortIndex(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Obtain an array of the indices in sort order of an array.
            
            By default the sort is by string value, therefore 10 comes before 2.
            To sort by number value, all values must be a number (or empty).
            
            Empty values are placed at the end of the sort.
            The input array is unchanged and the index array must be previously created with the same size as the array to sort.
            </summary>
      <param name="array">The array to obtain an index order sort.</param>
      <param name="index">An array to hold the index order of the sorted array.</param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDArray.Search(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Obtain an array of the indices that have values that contain searchstring.
            The search is case in-sensitive.
            The input array is unchanged and the match array must be previously created with the same size as the array to check.
            </summary>
      <param name="array">The array to check for matches.</param>
      <param name="searchstring">The string to search for.</param>
      <param name="match">An array to hold the index of matched values.</param>
      <returns>The number of matches found.
            </returns>
    </member>
    <member name="M:LitDev.LDArray.Save(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save an array to a file.
            </summary>
      <param name="array">The array to save.</param>
      <param name="fileName">The file path to save the file to.</param>
      <returns>
            The number of elements saved.
            </returns>
    </member>
    <member name="M:LitDev.LDArray.Load(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Load an array from a file.
            </summary>
      <param name="array">The array to load the data into.
            The array must already exist.</param>
      <param name="fileName">The file path to load the array from.</param>
      <returns>
            The number of elements loaded.
            </returns>
    </member>
    <member name="M:LitDev.LDArray.CreateFromIndices(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a new array from the indices of a Small Basic array.
            </summary>
      <param name="sbArray">The SB array.</param>
      <returns>
            The new array or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDArray.CreateFromValues(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a new array from the values of a Small Basic array.
            </summary>
      <param name="sbArray">The SB array.</param>
      <returns>
            The new array or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDArray.GetIndex(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the index of the first occurance of a value in an SB array.
            </summary>
      <param name="sbArray">The SB array.</param>
      <param name="value">The value to find.</param>
      <returns>The index of value in the array, "" if not present or "FAILED".</returns>
    </member>
    <member name="T:LitDev.LDControls">
      <summary>
            Controls for the GraphicsWindow.
            </summary>
    </member>
    <member name="M:LitDev.LDControls.AddTreeView(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a treeview dialog control.
            </summary>
      <param name="tree">
            A 2D array containing the treeview data.
            
            The first index is the row or node number and the second index is the parent node of the current node (0 for top level).
            The value of the array is the display text at the current node.
            
            tree[1][0] = "Level 1"
            tree[2][1] = "Level 1 1"
            tree[3][1] = "Level 1 2"
            tree[4][0] = "Level 2"
            </param>
      <param name="width">The width of the control.</param>
      <param name="height">The height of the control.</param>
      <returns>The treeview shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.TreeViewExpand(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Expand/collapse nodes in a treeview below input node.
            </summary>
      <param name="shapeName">The treeview shape name.</param>
      <param name="node">Node number to expand/collapse, 0 recusively expands/collapses all nodes.</param>
      <param name="expand">Expand or collapse "True" or "False"</param>
      <param name="recursive">Recursively expand/collapse nodes (all children nodes) "True" or "False"</param>
    </member>
    <member name="M:LitDev.LDControls.TreeViewSelect(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Select a node in a treeview.
            </summary>
      <param name="shapeName">The treeview shape name.</param>
      <param name="node">The node to select.</param>
    </member>
    <member name="M:LitDev.LDControls.TreeViewGetSelected(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a treeview selected node.
            </summary>
      <param name="shapeName">The treeview to get node.</param>
      <returns>The treeview selected node.</returns>
    </member>
    <member name="M:LitDev.LDControls.TreeViewContent(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Replace a treeview tree.
            </summary>
      <param name="shapeName">The treeview shape name.</param>
      <param name="tree">
            A 2D array containing the treeview data.
            
            The first index is the row or node number and the second index is the parent node of the current node (0 for top level).
            The value of the array is the display text at the current node.
            
            tree[1][0] = "Level 1"
            tree[2][1] = "Level 1 1"
            tree[3][1] = "Level 1 2"
            tree[4][0] = "Level 2"
            </param>
    </member>
    <member name="M:LitDev.LDControls.TreeViewGetData(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the data from a treeview tree.
            </summary>
      <param name="shapeName">The treeview shape name.</param>
      <returns>
            A 2D array containing the treeview data.
            
            The first index is the row or node number and the second index is the parent node of the current node (0 for top level).
            The value of the array is the display text at the current node.
            
            tree[1][0] = "Level 1"
            tree[2][1] = "Level 1 1"
            tree[3][1] = "Level 1 2"
            tree[4][0] = "Level 2"
            </returns>
    </member>
    <member name="M:LitDev.LDControls.TreeViewEdit(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Change a treeview node editable status.
            </summary>
      <param name="shapeName">The treeview shape name.</param>
      <param name="node">The node to select.</param>
      <param name="editable">"True" an editable TextBox or "False" uneditable.</param>
    </member>
    <member name="M:LitDev.LDControls.AddRichTextBox(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a RichTextBox.
            Drag and drop is auto set for this control.
            </summary>
      <param name="width">The width of the RichTextBox.</param>
      <param name="height">The height of the RichTextBox.</param>
      <returns>The RichTextBox name.</returns>
    </member>
    <member name="M:LitDev.LDControls.AddContextMenu(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a right click context menu for a control or shape that supports context menus.
            </summary>
      <param name="shapeName">The control or shape name.</param>
      <param name="items">An array of context menu item selection texts.</param>
      <param name="images">Optional array of image icons, any or all may be "".
            They may be the result of ImageList.LoadImage or local or network image file.</param>
    </member>
    <member name="M:LitDev.LDControls.RichTextBoxSave(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save RichTextBox text and formatting to a file in rtf format.
            </summary>
      <param name="shapeName">The RichTextBox control.</param>
      <param name="fileName">File to save the text and formatting to.</param>
      <returns>None.</returns>
    </member>
    <member name="M:LitDev.LDControls.RichTextBoxLoad(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Load text and formatting from a file in rtf format to a RichTextBox.
            </summary>
      <param name="shapeName">The RichTextBox control.</param>
      <param name="fileName">File to load the text and formatting from.</param>
      <param name="append">Append to existing text "True" or "False".</param>
      <returns>None.</returns>
    </member>
    <member name="M:LitDev.LDControls.RichTextBoxMargins(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set margins (in pixels) for RichTextBox paragraphs.
            A new paragraph is created for each text appended (or created) using RichTextBoxSetText.
            </summary>
      <param name="left">Left margin (default 0).</param>
      <param name="right">Right margin (default 0).</param>
      <param name="top">Top margin (default 0).</param>
      <param name="bottom">Bottom margin (default 0).</param>
    </member>
    <member name="M:LitDev.LDControls.RichTextBoxSetText(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set text (unformatted) in a RichTextBox.
            </summary>
      <param name="shapeName">The RichTextBox control.</param>
      <param name="text">Text to load.</param>
      <param name="append">Append to existing text "True" or "False".
            A new paragraph is created if text is appended.  See RichTextBoxMargins to set margins for the paragraph.</param>
      <returns>None.</returns>
    </member>
    <member name="M:LitDev.LDControls.RichTextBoxGetText(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get text (unformatted) in a RichTextBox.
            </summary>
      <param name="shapeName">The RichTextBox control.</param>
      <returns>The text.</returns>
    </member>
    <member name="M:LitDev.LDControls.RichTextBoxSelection(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a font style of selected RichTextBox text using the current RichTextBox Properties.
            </summary>
      <param name="shapeName">The RichTextBox control.</param>
      <returns>None.</returns>
    </member>
    <member name="M:LitDev.LDControls.RichTextBoxWord(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a font style of a word or phrase using the current RichTextBox Properties.
            </summary>
      <param name="shapeName">The RichTextBox control.</param>
      <param name="text">The text to change (Case sensitive set by RichTextBoxCaseSensitive parameter).</param>
      <param name="mode">Contol over which instances of the word or phrase to set.
            0 - All instances
            1 - First instance
            2 - Last instance</param>
      <returns>None.</returns>
    </member>
    <member name="M:LitDev.LDControls.RichTextBoxDefault(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a default font style using the current RichTextBox Properties.
            Note RichTextBoxFontDecoration not available for this option.
            </summary>
      <param name="shapeName">The RichTextBox control.</param>
      <returns>None.</returns>
    </member>
    <member name="M:LitDev.LDControls.RichTextBoxClear(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Clear all text from the RichTextBox.
            </summary>
      <param name="shapeName">The RichTextBox control.</param>
      <returns>None.</returns>
    </member>
    <member name="M:LitDev.LDControls.AddBrowser(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a web browser.
            </summary>
      <param name="width">The browser width.</param>
      <param name="height">The browser height.</param>
      <param name="url">The html pane to load (e.g. http://smallbasic.com or www.google.com)</param>
      <returns>The browser control name.</returns>
    </member>
    <member name="M:LitDev.LDControls.BrowserSetURL(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a web browser page.
            </summary>
      <param name="shapeName">The browser name.</param>
      <param name="url">The html pane to load (e.g. http://smallbasic.com or www.google.com)</param>
    </member>
    <member name="M:LitDev.LDControls.BrowserNavigate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Move browser page forward or backwards.
            </summary>
      <param name="shapeName">The browser name.</param>
      <param name="direction">"F" or "B" for forwards or backwards.</param>
    </member>
    <member name="M:LitDev.LDControls.BrowserHistory(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of the browser history (pages loaded).
            </summary>
      <param name="shapeName">The browser name.</param>
      <returns>The array of urls in the history.</returns>
    </member>
    <member name="M:LitDev.LDControls.AddListBox(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a listbox dialog control.
            </summary>
      <param name="list">
            An array containing the listbox data.
            
            The first index is the row or node number and the value of the array is the display text at the current node.
            
            list[1] = "Option 1"
            list[2] = "Option 2"
            list[3] = "Option 3"
            list[4] = "Option 4"
            
            Alternatively, this can be a LDArray or LDList.
            </param>
      <param name="width">The width of the control.</param>
      <param name="height">The height of the control.</param>
      <returns>The listbox shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.ListBoxSelect(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Select a node or nodes in a listbox.
            </summary>
      <param name="shapeName">The listbox shape name.</param>
      <param name="node">The node number to select.
            This can be an array of nodes if the selection mode is not single (see ListBoxSelectionMode).</param>
    </member>
    <member name="M:LitDev.LDControls.ListBoxGetSelected(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a listbox selected node.
            </summary>
      <param name="shapeName">The listbox to get node.</param>
      <returns>The listbox selected node number.
            If the selection mode is not single (see ListBoxSelectionMode) then an array of nodes is returned.
            The return is "" for no selected nodes.</returns>
    </member>
    <member name="M:LitDev.LDControls.AddComboBox(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a combobox dialog control.
            </summary>
      <param name="list">
            An array containing the combobox data.
            
            The first index is the row or node number and the value of the array is the display text at the current node.
            
            list[1] = "Option 1"
            list[2] = "Option 2"
            list[3] = "Option 3"
            list[4] = "Option 4"
            </param>
      <param name="width">The width of the control.</param>
      <param name="height">The drop down height of the control.</param>
      <returns>The combobox shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.ComboBoxSelect(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Select a node in a combobox.
            </summary>
      <param name="shapeName">The combobox shape name.</param>
      <param name="node">The node to select.</param>
    </member>
    <member name="M:LitDev.LDControls.ComboBoxGetSelected(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a combobox selected node.
            </summary>
      <param name="shapeName">The combobox to get node.</param>
      <returns>The combobox selected node.</returns>
    </member>
    <member name="M:LitDev.LDControls.ListBoxSelectionMode(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the selection mode for listbox control.
            </summary>
      <param name="shapeName">The listbox control name.</param>
      <param name="mode">One of the following:
            "Single" - single selection (default).
            "Multiple" - multiple selections using control key.
            "Extended" - extended selections using control and shift keys.
            </param>
    </member>
    <member name="M:LitDev.LDControls.AddCheckBox(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a checkbox dialog control.
            </summary>
      <param name="title">The title of the control.</param>
      <returns>The checkbox shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.CheckBoxState(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a checkbox checked state.
            </summary>
      <param name="shapeName">The checkbox shape name.</param>
      <param name="state">The checkbox check state ("True" or "False").</param>
    </member>
    <member name="M:LitDev.LDControls.CheckBoxGetState(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a checkbox checked state.
            </summary>
      <param name="shapeName">The checkbox to get state.</param>
      <returns>The checkbox checked state.</returns>
    </member>
    <member name="M:LitDev.LDControls.SetCursorToEnd(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Scroll the cursor caret to the end of a textbox or richtextbox.
            This is for multi-line textboxes or richtextboxes.
            </summary>
      <param name="shapeName">The textbox shape name.</param>
    </member>
    <member name="M:LitDev.LDControls.SetCursorPosition(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the cursor caret to specified position within a textbox.
            </summary>
      <param name="shapeName">The textbox shape name.</param>
      <param name="position">The cursor character position (0 is before first character or a large value e.g. 1000 will set the cursor to the end).</param>
    </member>
    <member name="M:LitDev.LDControls.SetSpellCheck(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the spell checking for a textbox or richtextbox.
            </summary>
      <param name="shapeName">The textbox or richtextbox shape name.</param>
      <param name="state">"True" or "False"</param>
    </member>
    <member name="M:LitDev.LDControls.AddRadioButton(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a radio button control.
            Only one radio button in a group can be set (they are exclusive).
            </summary>
      <param name="title">A text description for the radio button.</param>
      <param name="group">A name to group radio buttons.</param>
      <returns>The radio button shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.RadioButtonSet(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a radio button to selected.
            </summary>
      <param name="shapeName">The radio button to set.</param>
    </member>
    <member name="M:LitDev.LDControls.RadioButtonGet(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a radio button state.
            </summary>
      <param name="shapeName">The radio button to get state.</param>
      <returns>The radio button state.</returns>
    </member>
    <member name="M:LitDev.LDControls.AllowDrop(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set shape to allow drag and drop.
            Currently only the following are implemented without using FileDropped event to process the dropped file(s):
            File path to TextBox (or file paths to MultiLineTextBox).
            File opened in RichTextBox.
            XPS file opened in DocumentViewer.
            Image set in Image or Background.
            Media for MediaPlayer (only works if valid media is already loaded).
            </summary>
      <param name="shapeName">The shape to allow drop or "Background".</param>
    </member>
    <member name="M:LitDev.LDControls.AddMediaPlayer(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a media player (to play videos etc).
            Drag and drop is auto set for this control.
            </summary>
      <param name="width">The media player width.</param>
      <param name="height">The media player height.</param>
      <returns>The media player control name.</returns>
    </member>
    <member name="M:LitDev.LDControls.MediaPlayerVolume(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the volume for a media player.
            </summary>
      <param name="shapeName">The media player name.</param>
      <param name="volume">The volume (0 to 1) default 0.5.</param>
    </member>
    <member name="M:LitDev.LDControls.MediaPlayerSpeed(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the playback speed for a media player.
            </summary>
      <param name="shapeName">The media player name.</param>
      <param name="speed">The speed (0 to 100) default 1 (normal playback).</param>
    </member>
    <member name="M:LitDev.LDControls.MediaPlayerLoad(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the media for a media player.
            </summary>
      <param name="shapeName">The media player name.</param>
      <param name="media">The media to load, e.g. an image, music or video file, jp, mp3, mpg, avi, wmv etc.</param>
    </member>
    <member name="M:LitDev.LDControls.MediaPlayerStop(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Stop a media player playback (using current loaded media).
            </summary>
      <param name="shapeName">The media player name.</param>
    </member>
    <member name="M:LitDev.LDControls.MediaPlayerPlay(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Start a media player playback (using current loaded media).
            </summary>
      <param name="shapeName">The media player name.</param>
    </member>
    <member name="M:LitDev.LDControls.MediaPlayerPause(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Pause a media player playback (using current loaded media).
            </summary>
      <param name="shapeName">The media player name.</param>
    </member>
    <member name="M:LitDev.LDControls.MediaPlayerSeek(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Position a media player position (using current loaded media).
            </summary>
      <param name="shapeName">The media player name.</param>
      <param name="seek">The new play position in ms.</param>
    </member>
    <member name="M:LitDev.LDControls.MediaPlayerPlayTime(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a media play time (using current loaded media).
            </summary>
      <param name="shapeName">The media player name.</param>
      <returns>The media play time in ms.</returns>
    </member>
    <member name="M:LitDev.LDControls.MediaPlayerPosition(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a media current position (using current loaded media).
            </summary>
      <param name="shapeName">The media player name.</param>
      <returns>The media current position in ms.</returns>
    </member>
    <member name="M:LitDev.LDControls.MediaPlayerStretch(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a visual media stretch - how the visual fills its area.
            </summary>
      <param name="shapeName">The media player name.</param>
      <param name="stretch">The stretch method.  Available stretch options are:
            "None" (The content preserves its original size).
            "Uniform" (The content is resized to fit in the destination dimensions while it preserves its native aspect ratio - Default).
            "Fill" (The content is resized to fill the destination dimensions. The aspect ratio is not preserved).
            "UniformToFill" (The content is resized to fill the destination dimensions while it preserves its native aspect ratio, clipping as required).
            </param>
    </member>
    <member name="M:LitDev.LDControls.ListBoxContent(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Replace a listbox list.
            </summary>
      <param name="shapeName">The listbox shape name.</param>
      <param name="list">
            An array containing the listbox data.
            
            The first index is the row or node number and the value of the array is the display text at the current node.
            
            list[1] = "Option 1"
            list[2] = "Option 2"
            list[3] = "Option 3"
            list[4] = "Option 4"
            
            Alternatively, this can be a LDArray or LDList.
            </param>
    </member>
    <member name="M:LitDev.LDControls.ComboBoxContent(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Replace a combobox list.
            </summary>
      <param name="shapeName">The combobox shape name.</param>
      <param name="list">
            An array containing the combobox data.
            
            The first index is the row or node number and the value of the array is the display text at the current node.
            
            list[1] = "Option 1"
            list[2] = "Option 2"
            list[3] = "Option 3"
            list[4] = "Option 4"
            </param>
    </member>
    <member name="M:LitDev.LDControls.AddProgressBar(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a progress bar control.
            </summary>
      <param name="width">The width of the control.</param>
      <param name="height">The height of the control.</param>
      <param name="orientation">Horizontal or vertical ("H" or "V").</param>
      <returns>The progress bar shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.ProgressBarValue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set progress bar value (progress).
            </summary>
      <param name="shapeName">The progress bar shape name.</param>
      <param name="value">The progress value (0 to 100).</param>
    </member>
    <member name="M:LitDev.LDControls.AddSlider(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a slider control.
            </summary>
      <param name="width">The width of the control.</param>
      <param name="height">The height of the control.</param>
      <param name="orientation">Horizontal or vertical ("H" or "V").</param>
      <returns>The slider shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.SliderValue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set slider value (position).
            </summary>
      <param name="shapeName">The slider shape name.</param>
      <param name="value">The slider value (0 to 100).</param>
    </member>
    <member name="M:LitDev.LDControls.SliderGetValue(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get slider value (position).
            </summary>
      <param name="shapeName">The slider shape name.</param>
      <returns>The slider value (0 to 100).</returns>
    </member>
    <member name="M:LitDev.LDControls.AddPasswordBox(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a password box control (texbox with characters not displayed and PasswordEntered event only when return is pressed).
            </summary>
      <param name="width">The width of the control.</param>
      <param name="height">The height of the control.</param>
      <param name="length">The maximum number of characters in the password.</param>
      <returns>The password box shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.AddDocumentViewer(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a document viewer dialog control.
            You can view XPS documents (MS version of PDF) with this.
            Drag and drop is auto set for this control.
            </summary>
      <param name="width">The width of the control.</param>
      <param name="height">The height of the control.</param>
      <returns>The document viewer shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.DocumentViewerLoadXPS(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Load an XPS file to a document viewer dialog control.
            </summary>
      <param name="shapeName">The document viewer control.</param>
      <param name="fileName">The XPS file to load and view.</param>
    </member>
    <member name="M:LitDev.LDControls.MenuChecked(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the check state of a menu item.
            </summary>
      <param name="shapeName">The menu shape name.</param>
      <param name="itemName">The menu item name.</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDControls.AddMenu(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a menu control.
            </summary>
      <param name="width">The width of the control.</param>
      <param name="height">The height of the control.</param>
      <param name="menuList">
            An array of menu items.  The index is the menu display name and the value is the parent display name.
            The top level display name should be "Main".  The names should be unique since they will be returned on click event.
            A separator is "-", "--", "---" etc since they have to be unique and cannot be selected.
            
            menuList["File"] = "Main"
            menuList["Open"] = "File"
            menuList["-"] = "File"
            menuList["Exit"] = "File"
            menuList["Help"] = "Main"
            menuList["Show Help"] = "Help"
            </param>
      <param name="iconList">
            An optional array of icon images (URL or ImageList) or "" for none.
            
            iconList["File"] = Program.Directory+"/file.png"
            </param>
      <param name="checkList">
            An optional array to identify items as checkable or "" for none.
            The value is the initial checked state "True" or "False".
            
            checkList["Show Help"] = "True"
            </param>
      <returns>The menu shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.MenuBackground(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the background colour for sub menus.  
            The main top menu can be coloured separately with LDShapes.BrushColour.
            Note that separators are not coloured and it is often best to just colour the top menu.
            </summary>
      <param name="shapeName">The menu shape name.</param>
      <param name="colour">The background colour.</param>
    </member>
    <member name="M:LitDev.LDControls.TextBoxTab(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set whether a TextBox accepts a tab or uses it to locate the next control.
            </summary>
      <param name="shapeName">The TextBox or RichTextBox name.</param>
      <param name="acceptsTab">"True" or "False" (default).</param>
    </member>
    <member name="M:LitDev.LDControls.AddListView(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a ListView control.
            </summary>
      <param name="width">The width of the control.</param>
      <param name="height">The height of the control.</param>
      <param name="headings">An array of headings for the listview.</param>
      <returns>The listview shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.ListViewColAlignment(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the alignment for a listview column.
            </summary>
      <param name="shapeName">The listview control.</param>
      <param name="col">The column number (indexed from 1).</param>
      <param name="alignment">"Left", "Center" or "Right"</param>
    </member>
    <member name="M:LitDev.LDControls.ListViewSetRow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a row of data to a listview control.
            </summary>
      <param name="shapeName">The listview control.</param>
      <param name="row">The row number (indexed from 1).
            If the row number is larger than the current number of rows a new row is added, otherwise the row data is over-written.</param>
      <param name="values">An array of values (one for each column).</param>
    </member>
    <member name="M:LitDev.LDControls.ListViewGetRow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a row of data from a listview control.
            </summary>
      <param name="shapeName">The listview control.</param>
      <param name="row">The row number (indexed from 1).</param>
      <returns>An array of values (one for each column) or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDControls.ListViewRowCount(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the number of rows in a listview control.
            </summary>
      <param name="shapeName">The listview control.</param>
      <returns>The number of rows in the listview.</returns>
    </member>
    <member name="M:LitDev.LDControls.ListViewDeleteRow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Delete a row of data from a listview control.
            </summary>
      <param name="shapeName">The listview control.</param>
      <param name="row">The row number (indexed from 1).
            If the row number is larger than the current number of rows then no action is taken.</param>
    </member>
    <member name="M:LitDev.LDControls.ListViewClear(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove all rows from a listview control.
            </summary>
      <param name="shapeName">The listview control.</param>
    </member>
    <member name="M:LitDev.LDControls.ListViewEdit(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Change a listview to editable status.
            </summary>
      <param name="shapeName">The listview shape name.</param>
      <param name="editable">"True" with editable TextBoxes or "False" uneditable TextBlocks.</param>
    </member>
    <member name="M:LitDev.LDControls.TextBoxReadOnly(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a textbox readonly state.
            </summary>
      <param name="shapeName">The textbox control.</param>
      <param name="readOnly">"True" or "False" (default).</param>
    </member>
    <member name="M:LitDev.LDControls.AddDataView(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a dataview control.
            All rows and columns are indexed from 1.
            This control always appears on top of all other objects in the GraphicsWindow.
            </summary>
      <param name="width">The width of the control.</param>
      <param name="height">The height of the control.</param>
      <param name="headings">An array of headings for the dataview.</param>
      <returns>The dataview shape name.</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewGetSelected(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a list of all selected cells in a dataview.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <returns>A 2D array of rows and columns selected.
            cells[1][1] = row, cells[1][2] = column.</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewSetFocus(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the focus to a dataview cell.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="row">The row number.</param>
      <param name="col">The column number.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewGetFocus(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the current dataview cell with focus.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <returns>A 1D array with the row and column number with focus, or "".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewSetValue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a dataview cell value.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="row">The row number.</param>
      <param name="col">The column number.</param>
      <param name="value">The value to set.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewGetValue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a dataview cell value.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="row">The row number.</param>
      <param name="col">The column number.</param>
      <returns>The cell value or "".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewClear(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Clear all rows in a dataview.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewSetRow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a row of data to a dataview control.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="row">The row number.
            If the row number is larger than the current number of rows a new row is added, otherwise the row data is over-written.</param>
      <param name="values">An array of values (one for each column).</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewDeleteRow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Delete a row from a dataview control.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="row">The row number.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewGetRow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a row of data from a dataview control.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="row">The row number.</param>
      <returns>An array of values (one for each column) or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewRowCount(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the number of rows in a dataview control.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <returns>The number of rows in the dataview.</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewAllowSort(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Allow a dataview control to be column sorted by user clicking header.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="allow">Allow "True" (default) or disallow "False".</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewSaveAsCSV(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Write an entire dataview to a csv (comma separated values) text file.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="fileName">The full path for the csv file.</param>
      <param name="append">Append to the csv file "True" or "False".</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewReadFromCSV(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add data from a csv (comma separated values) text file into a dataview control.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="fileName">The full path for the csv file.</param>
      <param name="append">Append to the dataview "True" or "False".</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewSetColumnComboBox(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Change a dataview column control to be ComboBoxes with selectable values.
            This should be set before data is added, after the dataview is created.
            If the dataview is bound to a database, then set this after LDDataBase.EditTable is set.
            The values to get and set for the cells are the labels set with the data parameter.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="col">The column number.</param>
      <param name="data">An array of data selections for the combo boxes.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewSetColumnButton(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Change a dataview column control to be Buttons.
            This should be set before data is added, after the dataview is created.
            If the dataview is bound to a database, then set this after LDDataBase.EditTable is set.
            The data for these cells will be the button title.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="col">The column number.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewSetColumnCheckBox(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Change a dataview column control to be CheckBoxes.
            This should be set before data is added, after the dataview is created.
            If the dataview is bound to a database, then set this after LDDataBase.EditTable is set.
            The data for these cells should be "True" or "False".
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="col">The column number.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewColumnSort(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sort dataview entries by a column.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="col">The column number to sort by.</param>
      <param name="ascending">Sort ascending ("True") or descending ("False").</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewColumnReadOnly(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a dataview column to be read only.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="col">The column number.</param>
      <param name="readOnly">Set as read only "True" or "False" (default).</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewColumnVisible(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a dataview column to be visible or not.
            This may be used for example to hide an id column of a database.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="col">The column number.</param>
      <param name="visible">Set as visible "True" (default) or "False".</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewAllowUserEntry(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Allow user to add data in the last row.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="allow">Allow user data entry "True" (default) or "False".</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewColumnWidths(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the widths of columns.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="widths">An array of widths for the columns, "" to reset to auto sizing.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewRowColours(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a row of data background and foreground (pen) colours.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="row">The row number.  If this is set to 0 then all alternating rows are set.</param>
      <param name="background">The background colour.</param>
      <param name="foreground">The foreground colour.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.DataViewColAlignment(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the alignment for a dataview column.
            </summary>
      <param name="shapeName">The dataview control.</param>
      <param name="col">The column number.</param>
      <param name="alignment">"Left", "Center" or "Right"</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDControls.SetButtonStyle(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Modify the style of a button.
            </summary>
      <param name="shapeName">The button to modify.</param>
      <param name="brushUnpressed">The colour of the unpressed button, may be a gradient brush.</param>
      <param name="brushMouseOver">The colour of the button when the mouse is over it, may be a gradient brush.</param>
      <param name="brushPressed">The colour of the pressed button, may be a gradient brush.</param>
      <param name="penUnpressed">The text font colour of the unpressed button.</param>
      <param name="penMouseOver">The text font colour of the button when the mouse is over it.</param>
      <param name="penPressed">The text font colour of the pressed button.</param>
      <param name="radius">The button corner radius (default 9).</param>
      <param name="shine">Apply a 'shine' effect, "True" (default) or "False".</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="P:LitDev.LDControls.LastTreeView">
      <summary>
            The last treeview where a selection changed.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastTreeViewIndex">
      <summary>
            The last treeview selection changed index (row number).
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastContextControl">
      <summary>
            The contol or shape of the last right click context menu item selected.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastContextItem">
      <summary>
            The index of the last shape or control right click context menu item selected.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxIndentToTab">
      <summary>
            Convert first character indents to tabs "True" (default) or "False".
            A tab typed as a first character on a line in a RichTextBox creates an indent unless this is set to "True".
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxFontBold">
      <summary>
            The font bold style "True" or "False".
            Set this before RichTextBoxSelection, RichTextBoxWord or RichTextBoxDefault is called.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxFontItalic">
      <summary>
            The font italic style "True" or "False".
            Set this before RichTextBoxSelection, RichTextBoxWord or RichTextBoxDefault is called.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxFontUnderline">
      <summary>
            The font underline style "True" or "False".
            Set this before RichTextBoxSelection, RichTextBoxWord or RichTextBoxDefault is called.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxFontSize">
      <summary>
            The font point size.
            Set this before RichTextBoxSelection, RichTextBoxWord or RichTextBoxDefault is called.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxFontFamily">
      <summary>
            The font family e.g. "Century Gothic".
            Set this before RichTextBoxSelection, RichTextBoxWord or RichTextBoxDefault is called.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxFontForeground">
      <summary>
            The font foreground colour.
            Set this before RichTextBoxSelection, RichTextBoxWord or RichTextBoxDefault is called.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxFontBackground">
      <summary>
            The font background colour.
            Set this before RichTextBoxSelection, RichTextBoxWord or RichTextBoxDefault is called.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxTextAlignment">
      <summary>
            The text alignment "Center" "Left" "Right" or "Justify".
            Set this before AddRichTextBox is called.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxReadOnly">
      <summary>
            The read only state for the RichTextBox "True" or "False.
            Set this before AddRichTextBox is called.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.RichTextBoxCaseSensitive">
      <summary>
            Whether word or phrase highlighting is case sensitive "True" or "False" (default).
            Set this before RichTextBoxWord is called.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastRichTextBox">
      <summary>
            The rich text box for which an event occurred.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastBrowser">
      <summary>
            The last browser where a page was loaded.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastBrowserPage">
      <summary>
            The last browser page loaded (the url).
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastListBox">
      <summary>
            The last listbox where a selection changed.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastListBoxIndex">
      <summary>
            The last listbox selection changed index (row number).
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastComboBox">
      <summary>
            The last combobox where a selection changed.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastComboBoxIndex">
      <summary>
            The last combobox selection changed index (row number).
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastCheckBox">
      <summary>
            The last checkbox that was clicked.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastCheckBoxState">
      <summary>
            The last checkbox checked state ("True" or "False").
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastRadioButton">
      <summary>
            The last radio button that was selected.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastRadioButtonGroup">
      <summary>
            The group name for the last radio button selected.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastDropShape">
      <summary>
            The last object a file was dropped on.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastDropFiles">
      <summary>
            An array with the last file(s) that were dropped.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastMediaPlayer">
      <summary>
            The last media player for which an event occurred.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.SliderMaximum">
      <summary>
            The maximum slider value, default is 100, the minimum is always 0.
            Set this before calling AddSlider.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastSlider">
      <summary>
            The last slider for which an event occurred.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastSliderValue">
      <summary>
            The last slider value.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastPasswordBox">
      <summary>
            The password box for which an event occurred.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastPassword">
      <summary>
            The last password entered.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastMenuControl">
      <summary>
            The last menu control selected.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastMenuItem">
      <summary>
            The last menu item selected.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastListView">
      <summary>
            The last listview where a selection changed.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastListViewRow">
      <summary>
            The last listview selected row number.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastListViewColumn">
      <summary>
            The last listview selected column number.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastDataView">
      <summary>
            The last dataview where a selection changed.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastDataViewCellValueChanged">
      <summary>
            Get the cell row, column and value of a dataview cell whose value has changed.
            This is a 3 element array.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastDataViewButtonClicked">
      <summary>
            Get the cell row, column and value of the last dataview button clicked.
            This is a 3 element array.
            </summary>
    </member>
    <member name="P:LitDev.LDControls.LastDataBaseTable">
      <summary>
            The last database table for which a dataview selection changed.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.TreeViewItemChanged">
      <summary>
            Event when a treeview selection changes or selected item is clicked.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.ContextMenuClicked">
      <summary>
            Event when a shape or control right click context menu item is selected.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.RichTextBoxTextTyped">
      <summary>
            Event when text is typed into a rich text box.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.BrowserPageLoaded">
      <summary>
            Event when a browser page is loaded.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.ListBoxItemChanged">
      <summary>
            Event when a listbox selection changes or selected item is clicked.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.ComboBoxItemChanged">
      <summary>
            Event when a combobox selection changes or selected item is clicked.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.CheckBoxChanged">
      <summary>
            Event when a checkbox is clicked.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.RadioButtonClicked">
      <summary>
            Event when a radio button selection changes (it is clicked).
            </summary>
    </member>
    <member name="E:LitDev.LDControls.FileDropped">
      <summary>
            Event when a file is dropped on an object set with AllowDrop.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.MediaPlayerEnded">
      <summary>
            Event when a media player ends playing current media.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.MediaPlayerOpened">
      <summary>
            Event when a media player opens new media.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.SliderChanged">
      <summary>
            Event when a slider is changed.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.PasswordEntered">
      <summary>
            Event when a password is entered (Return key pressed).
            </summary>
    </member>
    <member name="E:LitDev.LDControls.MenuClicked">
      <summary>
            Event when a menu item is selected.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.ListViewSelectionChanged">
      <summary>
            Event when a listview selection changes.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.DataViewSelectionChanged">
      <summary>
            Event when a dataview selection changes.
            This event is not called for dataview button clicks, use DataViewButtonClicked.
            This event is not called for dataview checkbox or combobox clicks, use DataViewCellValueChanged.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.DataViewButtonClicked">
      <summary>
            Event when a dataview button is clicked.
            </summary>
    </member>
    <member name="E:LitDev.LDControls.DataViewCellValueChanged">
      <summary>
            Event when a dataview cell value changes after it is commited, for example by selecting away from the cell.
            </summary>
    </member>
    <member name="T:LitDev.LDCall">
      <summary>
            Call Functions with arguments, asyncronously from any extension or from a pre-compiled SmallBasic exe.
            </summary>
    </member>
    <member name="M:LitDev.LDCall.Function(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Call a Small Basic Sub as a function with one input argument.
            
            The input arguments(s) will be copied to an array called "args".
            The result should be put in a variable (may be an array) called "return".
            The variable "args" should be set to "" at the start of the program.
            The input parameter(s) are unchanged, while "args" and "return" are set to "" on return.
            </summary>
      <param name="funcName">The Small Basic Sub name.</param>
      <param name="arg1">An input value (may be an array).</param>
      <returns>The result of the function held in optional variable "return" or an error message.</returns>
    </member>
    <member name="M:LitDev.LDCall.Function2(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Call a Small Basic Sub as a function with two input arguments.
            
            See Function for more details.
            </summary>
      <param name="funcName">
      </param>
      <param name="arg1">1st input value (may be an array).</param>
      <param name="arg2">2nd input value (may be an array).</param>
      <returns>The result of the function held in variable "return" or an error message.</returns>
    </member>
    <member name="M:LitDev.LDCall.Function3(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Call a Small Basic Sub as a function with three input arguments.
            
            See Function for more details.
            </summary>
      <param name="funcName">
      </param>
      <param name="arg1">1st input value (may be an array).</param>
      <param name="arg2">2nd input value (may be an array).</param>
      <param name="arg3">3rd input value (may be an array).</param>
      <returns>The result of the function held in variable "return" or an error message.</returns>
    </member>
    <member name="M:LitDev.LDCall.Function4(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Call a Small Basic Sub as a function with four input arguments.
            
            See Function for more details.
            </summary>
      <param name="funcName">
      </param>
      <param name="arg1">1st input value (may be an array).</param>
      <param name="arg2">2nd input value (may be an array).</param>
      <param name="arg3">3rd input value (may be an array).</param>
      <param name="arg4">4th input value (may be an array).</param>
      <returns>The result of the function held in variable "return" or an error message.</returns>
    </member>
    <member name="M:LitDev.LDCall.Function5(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Call a Small Basic Sub as a function with five input arguments.
            
            See Function for more details.
            </summary>
      <param name="funcName">
      </param>
      <param name="arg1">1st input value (may be an array).</param>
      <param name="arg2">2nd input value (may be an array).</param>
      <param name="arg3">3rd input value (may be an array).</param>
      <param name="arg4">4th input value (may be an array).</param>
      <param name="arg5">5th input value (may be an array).</param>
      <returns>The result of the function held in variable "return" or an error message.</returns>
    </member>
    <member name="M:LitDev.LDCall.CallAsync(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Call any extension method asynchronously.
            See example LDCallAsync.
            If dll, extension, obj and arguments are all "", then method may be a subroutine in your SmallBasic program.
            </summary>
      <param name="dll">The extension dll (e.g. "LitDev.dll" or "SmallBasicLibrary.dll").</param>
      <param name="extension">The extension namespace (usually the same as the dll name, e.g. "LitDev" or "MicroSoft.SmallBasic.Library" for SmallBasicLibrary.dll).</param>
      <param name="obj">The extension object name.</param>
      <param name="method">The extension method name.</param>
      <param name="arguments">An array of arguments or "" for none.  A single argument doesn't have to be in an array.</param>
      <returns>"PENDING" or an error message on failure.</returns>
    </member>
    <member name="M:LitDev.LDCall.Include(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reference a previously compiled program to use a subroutine method from.
            </summary>
      <param name="path">The full path to a secondary compiled Small Basic program to use (.exe)</param>
      <returns>A name for the include file or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDCall.CallInclude(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Call a method in an included pre-compiled file.
            </summary>
      <param name="include">The include file name returned by Include method.</param>
      <param name="method">The subroutine name to call in the included exe.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDCall.Compile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Compile a secondary Small Basic file.
            Assumes that Small Basic is installed in the default location for your OS.
            </summary>
      <param name="path">A Small Basic file to compile (.sb).</param>
      <returns>The path of the compiled file (.exe) or "" on failure.</returns>
    </member>
    <member name="P:LitDev.LDCall.LastCall">
      <summary>
            The last asynchronous call name.
            </summary>
    </member>
    <member name="P:LitDev.LDCall.LastResult">
      <summary>
            The last asynchronous call return value.
            </summary>
    </member>
    <member name="E:LitDev.LDCall.CallComplete">
      <summary>
            Event when an asynchronous subroutine method call completes.
            </summary>
    </member>
    <member name="T:LitDev.LD3DView">
      <summary>
            3D Visualisation in the GraphicsWindow.
            
            Coordinates have the following directions and have no correspondence to the GraphicsWindow coordinates.
            X - Left(-) to Right(+)
            Y - Down(-) to Up(+)
            Z - Far(-) to Near(+)
            
            For more details on the underlying methods see http://msdn.microsoft.com/en-us/library/ms747437%28v=vs.90%29.aspx
            Several of the AddShape methods use HelixToolkit (recompiled and slightly modified for SmallBasic) http://helixToolkit.codeplex.com
            
            Also see LDVector for vector algebra methods.
            </summary>
    </member>
    <member name="M:LitDev.LD3DView.AddView(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a 3DView (GraphicsWindow shape).
            </summary>
      <param name="width">The width of the 3DView.</param>
      <param name="height">The height of the 3DView.</param>
      <param name="performance">
            A flag to favour speed over quality "True" or "False".
            "True" removes visual clipping (clip 3DView to input width and height), hit-testing (unused) and anti-aliasing (not needed).
            </param>
      <returns>The 3DView viewport3D name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AutoControl(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set auto control of the camera.
            This mode is a general purpose camera control, mainly for moving within a scene (a flyby mode).
            Move forwards and backwards with mouse wheel (faster with Shift down, slower with Control down).
            Yaw and Pitch camera moving with left mouse button.
            Yaw with A,D or Left,Right keys, move forwards and backwards with W,S or Up,Down keys.
            Roll camera moving with right mouse button.
            Double left click an object to center it (Centre of rotation 1).
            Double right click to reset the up direction to Y.
            Yaw and Pitch scene moving with Shift and left mouse button after selecting an object to rotate scene about.
            X, Y, Z keys change the view direction and up direction to face in these directions towards (0,0,0), with Shift then the negative direction.
            </summary>
      <param name="pitchRoll">Allow pitch and roll movement, "True" or "False".</param>
      <param name="shift">Allow the Shift/Control key modifiers for mouse control, "True" or "False".</param>
      <param name="keyDistance">The distance to view the scene from using keys, (0 prevents the X,Y,Z key shortcuts, -1 also prevents the A,D,W,S and arrow keys).</param>
      <param name="speed">Forwards and backwards speed multiplier (default 1).</param>
    </member>
    <member name="M:LitDev.LD3DView.AutoControl2(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set auto control of the camera.
            This mode is mainly to rotate and view a 3D scene rather than move through the scene (an inspection mode).
            Zoom in or out with mouse wheel (faster with Shift down, slower with Control down).
            Pan left/right with A,D or Left,Right keys, pan up/down with W,S or Up,Down keys.
            Double left click an object to center it (Centre of rotation 1).
            Double right click to reset the up direction to Y.
            Yaw and Pitch scene moving with left mouse button after selecting an object to rotate scene about.
            Roll scene moving with right mouse button.
            X, Y, Z keys change the view direction and up direction to face in these directions towards selected center, with Shift then the negative direction.
            </summary>
      <param name="keyDistance">The distance to view the scene from using keys, (0 prevents the X,Y,Z key shortcuts).</param>
      <param name="speed">Forwards and backwards speed multiplier (default 1).</param>
    </member>
    <member name="M:LitDev.LD3DView.AddGeometry(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a geometry object.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="points">A space or colon deliminated list of point coordinates.</param>
      <param name="indices">A space or colon deliminated list of indices for each triangle (counter-clockwise for outward face).</param>
      <param name="normals">An optional space or colon deliminated list of the outward normals for each node or "".</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddImage(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add an image to a geometry object.
            A geometry 'skin' may contain several segment images in one image.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
      <param name="textures">A space or colon deliminated list of the texture coordinates for each node.
            Each node has 2 values between 0 and 1 indicating the x,y image mapping to the node.
            The may be defaulted to "" if the texture has previously been set.</param>
      <param name="imageName">
            The image to load to the geometry.
            Value returned from ImageList.LoadImage or local or network image file.
            A colour or gradient brush can also be used here.
            </param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular - additional specular highlights.</param>
    </member>
    <member name="M:LitDev.LD3DView.MoveCamera(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Move the camera view direction and position.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="yaw">The Left/Right rotation in degrees (Yaw).</param>
      <param name="pitch">The Up/Down rotation in degrees (Pitch).</param>
      <param name="roll">Spin view about view direction in degrees (Roll).</param>
      <param name="move">The Forward/Backward movement in device coordinates (along the view direction).</param>
    </member>
    <member name="M:LitDev.LD3DView.ResetCamera(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reset the camera position, view direction and up vector (optional).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="xPos">The x position of the camera.</param>
      <param name="yPos">The y position of the camera.</param>
      <param name="zPos">The z position of the camera.</param>
      <param name="xDir">The x direction of the camera.</param>
      <param name="yDir">The y direction of the camera.</param>
      <param name="zDir">The z direction of the camera.</param>
      <param name="xUp">The optional x up direction of the camera or "".</param>
      <param name="yUp">The optional y up direction of the camera or "".</param>
      <param name="zUp">The optional z up direction of the camera or "".</param>
    </member>
    <member name="M:LitDev.LD3DView.CameraProperties(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the angle of view, near and far clipping distances.
            These are all of the fundamental perspective camera properties.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="nearDistance">The near clipping distance (can improve near object e.g. wall hit detection).
            A negative value is 0.001 (default is 0.125).</param>
      <param name="farDistance">The far clipping distance (can improve performance).
            A negative value is infinity (default).</param>
      <param name="angle">The view angle cone of the camera in degrees (affects perspective vanishing point).
            If this is negative, then an Orthographic (no perspective) camera is used with view width set to -angle). </param>
    </member>
    <member name="M:LitDev.LD3DView.GetCameraPosition(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the camera position.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <returns>An array of the camera position coordinates.</returns>
    </member>
    <member name="M:LitDev.LD3DView.GetCameraDirection(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the camera direction.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <returns>An array of the camera direction vector.</returns>
    </member>
    <member name="M:LitDev.LD3DView.GetCameraUpDirection(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the camera up direction.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <returns>An array of the camera up direction vector.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddDirectionalLight(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a directional light source.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="colour">The light colour.</param>
      <param name="xDir">The x direction of the light.</param>
      <param name="yDir">The y direction of the light.</param>
      <param name="zDir">The z direction of the light.</param>
      <returns>The 3DView Light name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddAmbientLight(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add an ambient light source.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="colour">The light colour.</param>
      <returns>The 3DView Light name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddSpotLight(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a directional spot light source.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="colour">The light colour.</param>
      <param name="xPos">The x position of the light.</param>
      <param name="yPos">The y position of the light.</param>
      <param name="zPos">The z position of the light.</param>
      <param name="xDir">The x direction of the light.</param>
      <param name="yDir">The y direction of the light.</param>
      <param name="zDir">The z direction of the light.</param>
      <param name="angle">The cone angle the light in degrees.</param>
      <param name="range">The light range.</param>
      <returns>The 3DView Light name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddPointLight(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a non-directional point light source.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="colour">The light colour.</param>
      <param name="xPos">The x position of the light.</param>
      <param name="yPos">The y position of the light.</param>
      <param name="zPos">The z position of the light.</param>
      <param name="range">The light range.</param>
      <returns>The 3DView Light name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.RotateGeometry(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rotate a geometry object about its centre.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
      <param name="x">X direction of vector to rotate about.</param>
      <param name="y">Y direction of vector to rotate about.</param>
      <param name="z">Z direction of vector to rotate about.</param>
      <param name="angle">An angle in degrees to rotate.</param>
    </member>
    <member name="M:LitDev.LD3DView.RotateGeometry2(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rotate a geometry object about its centre (a second rotation).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
      <param name="x">X direction of vector to rotate about.</param>
      <param name="y">Y direction of vector to rotate about.</param>
      <param name="z">Z direction of vector to rotate about.</param>
      <param name="angle">An angle in degrees to rotate.</param>
    </member>
    <member name="M:LitDev.LD3DView.RotateGeometry3(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rotate a geometry object about its centre (a third rotation).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
      <param name="x">X direction of vector to rotate about.</param>
      <param name="y">Y direction of vector to rotate about.</param>
      <param name="z">Z direction of vector to rotate about.</param>
      <param name="angle">An angle in degrees to rotate.</param>
    </member>
    <member name="M:LitDev.LD3DView.ScaleGeometry(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Scale (zoom) a geometry object about its centre.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
      <param name="scaleX">X scale factor.</param>
      <param name="scaleY">Y scale factor.</param>
      <param name="scaleZ">Z scale factor.</param>
    </member>
    <member name="M:LitDev.LD3DView.TranslateGeometry(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Translate (move) a geometry object.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
      <param name="dx">X direction translation.</param>
      <param name="dy">Y direction translation.</param>
      <param name="dz">Z direction translation.</param>
    </member>
    <member name="M:LitDev.LD3DView.ModifyObject(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Perform an action on a light or geometry object.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry or light name.</param>
      <param name="action">The action to perform.
            The allowed actions are:
            "X" remove
            "H" hide
            "S" show
            </param>
    </member>
    <member name="M:LitDev.LD3DView.CloneObject(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a complete copy of a geometry object and all of its properties.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The object to copy's name.</param>
      <returns>The new copied 3DView object name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.HitTest(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Perform a hit test in the 3DView.
            A negative value for the coordinates defaults to the screen centre (camera view).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="x">The x coordinate in the GraphicsWindow coordinates within the 3DView.</param>
      <param name="y">The y coordinate in the GraphicsWindow coordinates within the 3DView.</param>
      <returns>An array with the hit object name and its distance or "" for no hit.</returns>
    </member>
    <member name="M:LitDev.LD3DView.Freeze(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Freeze a geometry object to improve performance a bit - it cannot then be modified in any way.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The object to freeze.</param>
    </member>
    <member name="M:LitDev.LD3DView.AnimateRotation(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Animate a geometry rotation about an axis vector.
            This uses the second rotation, the first is still available for another axis rotation.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object to animate.</param>
      <param name="xDir">X direction of vector to rotate about.</param>
      <param name="yDir">Y direction of vector to rotate about.</param>
      <param name="zDir">Z direction of vector to rotate about.</param>
      <param name="startAngle">The starting angle in degrees (e.g. 0).</param>
      <param name="endAngle">The final angle in degrees (e.g. 360).</param>
      <param name="duration">The animation duration (time in sec).</param>
      <param name="repeats">The number of times to repeat the animation (-1 is for ever).</param>
    </member>
    <member name="M:LitDev.LD3DView.AnimateRotation2(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Animate a geometry rotation about an axis vector.
            This uses the third rotation, the first is still available for another axis rotation.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object to animate.</param>
      <param name="xDir">X direction of vector to rotate about.</param>
      <param name="yDir">Y direction of vector to rotate about.</param>
      <param name="zDir">Z direction of vector to rotate about.</param>
      <param name="startAngle">The starting angle in degrees (e.g. 0).</param>
      <param name="endAngle">The final angle in degrees (e.g. 360).</param>
      <param name="duration">The animation duration (time in sec).</param>
      <param name="repeats">The number of times to repeat the animation (-1 is for ever).</param>
    </member>
    <member name="M:LitDev.LD3DView.AnimateTranslation(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Animate a geometry translation.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object to animate.</param>
      <param name="x">X position to animate to.</param>
      <param name="y">Y position to animate to.</param>
      <param name="z">Z position to animate to.</param>
      <param name="duration">The animation duration (sec).</param>
    </member>
    <member name="M:LitDev.LD3DView.LoadModel(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Load geometry models from a file.
            Supported formats include 3ds, lwo, obj, objz, stl and off.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="fileName">The file to load.
            Often image files etc are also required with the same name in the same folder.</param>
      <returns>An array with the added geometry names.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddSphere(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a sphere geometry object centred on (0,0,0).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="radius">The sphere radius.</param>
      <param name="divisions">The sphere divisions, default 10 (affects number of triangles and smoothness).</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddTube(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a tube geometry object.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="path">A space or colon deliminated list of 3D point coordinates.</param>
      <param name="diameter">The tube diameter.</param>
      <param name="divisions">The tube radial divisions, default 10 (affects number of triangles and smoothness).</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddRevolute(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a revolute geometry object.  This is a surface starting at (0,0,0) and pointing up.
            Its shape is defined by a set points (Y,Z) where Y is the vertical distance along the surface from 0 and Z is the radius of revolution.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="path">A space or colon deliminated list of 2D point coordinates describing the revolute shape.</param>
      <param name="divisions">The radial divisions, default 10 (affects number of triangles and smoothness).</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.ReverseNormals(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reverse the outward normals for a geometry.
            For example, make the inside surface of a sphere the visible surface instead of the outside surface (skydome).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object to reverse outward normals.</param>
    </member>
    <member name="M:LitDev.LD3DView.AddCube(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a cube geometry object centered on (0,0,0).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="sideLength">The side length of the cube.</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddArrow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add an arrow geometry object pointing up starting at (0,0,0).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="length">The length of the arrow.</param>
      <param name="diameter">The diameter of the arrow shaft.</param>
      <param name="arrowLength">The length of the arrow head.</param>
      <param name="arrowDiameter">The diameter of the arrow head.</param>
      <param name="divisions">The number of divisions for the arrow (default 18).</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddCone(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a cone geometry object pointing up with base centred at (0,0,0).
            Note a cylinder is a cone with baseRadius = topRadius.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="baseRadius">The radius of the base.</param>
      <param name="topRadius">The radius of the top  if truncated (default 0).</param>
      <param name="height">The height of the cone.</param>
      <param name="divisions">The number of divisions for the cone (default 18).</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddPyramid(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a pyramid geometry object pointing up with base centred at (0,0,0).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="sideLength">The radius of the base.</param>
      <param name="height">The height of the cone.</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddPipe(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a pipe geometry object pointing up with base centred at (0,0,0).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="length">The length of the pipe.</param>
      <param name="innerDiameter">The inner diameter of the pipe.</param>
      <param name="outerDiameter">The outer diameter of the pipe.</param>
      <param name="divisions">The number of divisions for the pipe (default 18).</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddIcosahedron(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add an icosahedron geometry object centred at (0,0,0).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="radius">The radius of the icosahedron.</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.AddRectangle(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a rectangle geometry object centred at (0,0,0).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
      <returns>The 3DView Geometry name.</returns>
    </member>
    <member name="M:LitDev.LD3DView.SetBillBoard(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set an object to rotate to always face the camera.
            This uses the 2nd and 3rd rotations.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
    </member>
    <member name="M:LitDev.LD3DView.SetCentre(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the centre for rotation and scale transformations of a geometry.
            By default this is the centre of a bounding box for the geometry, often 0,0,0.
            The centre is defined in the coordinates used to create the geometry.
            It does not have to be within the geometry.
            If a coordinate value is set to "", then the default value is used.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
      <param name="x">The x coordinate of the centre.</param>
      <param name="y">The y coordinate of the centre.</param>
      <param name="z">The z coordinate of the centre.</param>
      <param name="options">Options to control centre setting.  Multiples can be set, e.g. "R1R2R3" to set all rotations.
            "R1" First rotation transformation
            "R2" Second rotation transformation
            "R3" Third rotation transformation
            "S" Scale transformation
            </param>
    </member>
    <member name="M:LitDev.LD3DView.BoundingBox(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the bounding box extent of a geometry.
            This is the current position (after any transformations).
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
      <returns>An array of dimensions or "FAILED".
            array[1] = sizeX (width)
            array[2] = sizeY (height)
            array[3] = sizeZ (depth)
            array[4] = X (Xmin)
            array[5] = Y (Ymin)
            array[6] = Z (Zmin)
            </returns>
    </member>
    <member name="M:LitDev.LD3DView.ResetMaterial(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reset the material for an existing geometry.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
      <param name="colour">A colour or gradient brush for the object.</param>
      <param name="materialType">A material for the object.
            The available options are:
            "E" Emmissive - constant brightness.
            "D" Diffusive - affected by lights.
            "S" Specular  - specular highlights.
            </param>
    </member>
    <member name="M:LitDev.LD3DView.GetPosition(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the transformed (current) center position of an existing geometry.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
      <returns> An array of the transformed position or "FAILED".
            array[1] = X (Xcen)
            array[2] = Y (Ycen)
            array[3] = Z (Zcen)
            </returns>
    </member>
    <member name="M:LitDev.LD3DView.SwapUpDirection(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rotate (swap) the Y and Z direction of a geometry.
            This can be useful for geometries created with a Z up convention, coverting it to a Y up direction used by this extension.
            </summary>
      <param name="shapeName">The 3DView object.</param>
      <param name="geometryName">The geometry object.</param>
    </member>
    <member name="P:LitDev.LD3DView.SpecularExponent">
      <summary>
            Get or set the specular exponent used for specular materials (default 5).
            </summary>
    </member>
    <member name="P:LitDev.LD3DView.LastRotationCompleted">
      <summary>
            The last completed rotation animation geometry object.
            </summary>
    </member>
    <member name="P:LitDev.LD3DView.LastTranslationCompleted">
      <summary>
            The last completed translation animation geometry object.
            </summary>
    </member>
    <member name="P:LitDev.LD3DView.QueuedRotationCompleted">
      <summary>
            The number of currently queued completed rotation animations.
            </summary>
    </member>
    <member name="P:LitDev.LD3DView.QueuedTranslationCompleted">
      <summary>
            The number of currently queued completed translation animations.
            </summary>
    </member>
    <member name="E:LitDev.LD3DView.RotationCompleted">
      <summary>
            Event when a rotation animation is completed.
            </summary>
    </member>
    <member name="E:LitDev.LD3DView.TranslationCompleted">
      <summary>
            Event when a translation animation is completed.
            </summary>
    </member>
    <member name="T:LitDev.LDBlueTooth">
      <summary>
            BlueTooth control.
            The Advanced features refer to non file transfer (effectively writing a device driver).
            To communicate with a USB bluetooth stick you also need have an external bluetooth device, setting it to be dicoverable etc before running your SmallBasic program.
            </summary>
    </member>
    <member name="M:LitDev.LDBlueTooth.Initialise">
      <summary>
            Initialise a bluetooth USB stick and detect discoverable external devices.
            As devices come into or out of range the devices list is updated.
            </summary>
      <returns>"True" or "False" for success or failure configuring a bluetooth interface.</returns>
    </member>
    <member name="M:LitDev.LDBlueTooth.GetDevices">
      <summary>
            Get a list of discovered bluetooth devices.
            </summary>
      <returns>An array of devices or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDBlueTooth.GetServices">
      <summary>
            Advanced feature.
            Get a list of available service protocols.
            </summary>
      <returns>An array of services or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDBlueTooth.GetEncodings">
      <summary>
            Advanced feature.
            Get a list of available encodings.
            </summary>
      <returns>An array of encodings or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDBlueTooth.Connect">
      <summary>
            Advanced feature.
            Connect an external device and service to the bluetooth USB stick.
            You must first Initialise, then set the device, service and encoding.
            </summary>
      <returns>"True" or "False" on success or failure.</returns>
    </member>
    <member name="M:LitDev.LDBlueTooth.SendData(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Advanced feature.
            Send data to a bluetooth device.
            The device must be Initialised and Connected.
            The encoding should also be set.
            </summary>
      <param name="data">A string of characters to send.</param>
      <returns>A result status message "True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDBlueTooth.ReceiveData">
      <summary>
            Advanced feature.
            Receive (fetch) data from a bluetooth device.
            The device must be Initialised and Connected.
            The encoding should also be set.
            </summary>
      <returns>String of received characters or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDBlueTooth.SendFile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Send a file to an attached external bluetooth device.
            You must first Initialise, then set the device.
            </summary>
      <param name="fileName">The file to send.</param>
      <returns>A result status message "True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDBlueTooth.ReceiveFile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Receive (fetch) a file from an attached external bluetooth device.
            You must first Initialise, then set the device.
            </summary>
      <param name="fileName">The location to save the received file.</param>
      <returns>A result status message "True" or "False".</returns>
    </member>
    <member name="P:LitDev.LDBlueTooth.LastDevice">
      <summary>
            The last device in or out of range.
            </summary>
    </member>
    <member name="P:LitDev.LDBlueTooth.LastError">
      <summary>
            Get the last error message.
            Error messages may be set for various failures.
            </summary>
    </member>
    <member name="P:LitDev.LDBlueTooth.DataAvailable">
      <summary>
            The number of bytes of data received and waiting to be read.
            This could be used in a Timer to check for data received.
            </summary>
    </member>
    <member name="P:LitDev.LDBlueTooth.Device">
      <summary>
            The current bluetooth device.
            </summary>
    </member>
    <member name="P:LitDev.LDBlueTooth.Service">
      <summary>
            Advanced feature.
            The current bluetooth service.
            </summary>
    </member>
    <member name="P:LitDev.LDBlueTooth.Encode">
      <summary>
            Advanced feature.
            The current bluetooth data encoding.
            </summary>
    </member>
    <member name="E:LitDev.LDBlueTooth.InRange">
      <summary>
            Event when a bluetooth device comes in range.
            Seems to keep firing unexpectedly.
            </summary>
    </member>
    <member name="E:LitDev.LDBlueTooth.OutOfRange">
      <summary>
            Event when a bluetooth device goes out of range.
            Doesn't seem to work as expected.
            </summary>
    </member>
    <member name="T:LitDev.LDShell">
      <summary>Functions for extended file infos, LNK/URL shortcuts and Shell apps. (All code and methods provided by Pappa Lapub).</summary>
    </member>
    <member name="M:LitDev.LDShell.GetDetail(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>Gets the value of an extended property for a given file or folder.</summary>
      <param name="path">The full file- or folder path.</param>
      <param name="infoType">The ID number or name of the property (eg. -1="Infotip"/"", 0="Name", 1="Size", etc.)
            ID numbers and names of available properties under s. 'AllDetails'.</param>
      <returns>The value of the property if available, else "". "FAILED" on failure (eg. missing path).
            Infotip lines separated by lf and ending with crlf.</returns>
    </member>
    <member name="M:LitDev.LDShell.GetAllDetailsFor(Microsoft.SmallBasic.Library.Primitive)">
      <summary>Gets all available extended properties for the given file or folder as Array (up to max. 316, without -1=Infotip).</summary>
      <param name="path">The full file- or folder path.</param>
      <returns>All available extended properties as Array ("property name=value;...", without Infotip) on success, else "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDShell.GetAllDetailNamesFor(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>Gets the names of all available extended properties for a given file or folder as Array (up to max. 316, w/o -1=Infotip).</summary>
      <param name="path">The full file- or folder path.</param>
      <param name="step1">Indizes in speps by 1?  "True" or "False" (default, real property ID).</param>
      <returns>The names of all available extended properties as Array ("idx=property name;...", w/o Infotip) on success, else "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDShell.GetAllVerbsFor(Microsoft.SmallBasic.Library.Primitive)">
      <summary>Gets all available Verbs (contextmenu items) for a given filetype or folder as Array.
            Applying of a Verb on file/folder under see 'ApplyVerbOn'.</summary>
      <param name="path">The full file- or folder path.</param>
      <returns>All available Verbs as Array ("idx=verb;...", w/o '&amp;') on success, else "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDShell.ApplyVerbOn(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>Apply the given Verb (contextmenu item) for the given file or folder.
            List of available Verbs (for a filetype or folder) under 'GetAllVerbsFor'.</summary>
      <param name="path">The full file- or folder path.</param>
      <param name="verb">The Verb to apply (case- and '&amp;' insensitive).</param>
      <returns>"SUCCESS" on success, else "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDShell.LinkGetProperty(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>Gets properties of a lnk/url shortcut link, like target pfad, arguments etc.</summary>
      <param name="shortcut">The full path of the lnk/url shortcut link file.</param>
      <param name="property">The property to get (case independent, * for Urls) like:
            "Target"  target path *
            "Args"    arguments
            "Folder"  working directory
            "Desc"    comment *
            "HotKey"  shortcut key comb * (default: 0)
            "Style"   window style * (1 normal, 3 max, 7 min)
            "Icon"    icon path</param>
      <returns>The value of the property if available or "". "FAILED" on failure.</returns>
    </member>
    <member name="M:LitDev.LDShell.LinkSetProperty(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>Modifies properties of an existing lnk/url shortcut link, like target path, arguments etc. (* for Urls).</summary>
      <param name="shortcut">The full path of an existing lnk/url shortcut link file.</param>
      <param name="target">* The full path of the target file/-folder resp. URL address.</param>
      <param name="args">Startparameter when launching the shortcut or "" (for url).</param>
      <param name="folder">The full path of the start folder or "" (for url).</param>
      <param name="desc">* Comment or description for the shortcut or "".</param>
      <param name="icoPath">* Full path of the icon file for the shortcut or "".</param>
      <param name="icoIdx">* Index of the icon in the icon file (default: 0, for .ico).</param>
      <param name="hotkey">* keys combination to launch the shortcut link (default: 0).</param>
      <param name="style">* Window style when launching the shortcut (default: 1 normal, 3 max, 7 min).</param>
      <returns>The full file path of the modified shortcut on success, else "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDShell.LinkCreate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>Creates a new lnk/url shortcut (Shell32). Further editing with 'LinkSetProperty'.</summary>
      <param name="shortcut">The full path for the new lnk/url shortcut file.</param>
      <param name="target">The full path of the target file/-folder resp. URL address.</param>
      <returns>The full file path of the created shortcut on success, else "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDShell.ShellLink(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>Creates a new lnk/url shortcut (IWshRuntimeLibrary). Further editing with 'ShellLinkSet'.</summary>
      <param name="shortcut">The full path for the new lnk/url shortcut file.</param>
      <param name="target">The full path of the target file/-folder resp. URL address.</param>
      <returns>The full file path of the created shortcut on success, else "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDShell.ShellLinkGet(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>Gets properties of a lnk/url shortcut link, like target pfad, arguments etc. (IWshRuntimeLibrary).</summary>
      <param name="shortcut">The full path of the lnk/url shortcut link file.</param>
      <param name="property">The property to get (case independent, * for Urls) like:
            "Target"   target path *
            "Args"    arguments
            "Folder"  working directory
            "Desc"    comment *
            "HotKey"   shortcut key comb * (default: 0)
            "Style"   window style * (1 normal, 3 max, 7 min)
            "Icon"    icon path,Idx (default: ,0)</param>
      <returns>The value of the property if available or "". "FAILED" on failure.</returns>
    </member>
    <member name="M:LitDev.LDShell.ShellLinkSet(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>Modifies properties of an existing lnk/url shortcut link, like target path, arguments etc. (* for Urls) (IWshRuntimeLibrary).</summary>
      <param name="shortcut">The full path of an existing lnk/url shortcut link file.</param>
      <param name="target">* The full path of the target file/-folder resp. URL address.</param>
      <param name="args">Startparameter when launching the shortcut or "" (for url).</param>
      <param name="folder">The full path of the start folder or "" (for url).</param>
      <param name="desc">* Comment or description for the shortcut or "".</param>
      <param name="icon">* The full path (resp. path,Idx) of the icon for the shortcut link or "". 'Idx' is Index of the icon in in the file (default: 0, for .ico).</param>
      <param name="hotkey">* keys combination to launch the shortcut link (default: 0).</param>
      <param name="style">* Window style when launching the shortcut (default: 1 normal, 3 max, 7 min).</param>
      <returns>The full file path of the modified shortcut on success, else "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDShell.DTIconsHide">
      <summary>Hides all desktop icons.</summary>
    </member>
    <member name="M:LitDev.LDShell.DTIconsShow">
      <summary>Shows all hidden desktop icons again.</summary>
    </member>
    <member name="M:LitDev.LDShell.DTIconsToggle">
      <summary>Toggles the view of all desktop icons automatically (On/Off).</summary>
    </member>
    <member name="M:LitDev.LDShell.ShowFileProperties(Microsoft.SmallBasic.Library.Primitive)">
      <summary>Opens the shell properties dialog for a given file or folder path (GW is needed for that, not available from TW or Console).</summary>
      <param name="filePath">The full file- or folder path.</param>
    </member>
    <member name="M:LitDev.LDShell.SpecialFolderList(Microsoft.SmallBasic.Library.Primitive)">
      <summary>Gets all items in a special system/shell folder (upper level only).</summary>
      <param name="csidl">The CSIDL number of the system folder (0 to 47, constants and names of available folders under s. SpecialFolderConstants).</param>
      <returns>The names of all objects in the system folder as Array (only upper level) on success, else "FAILED".</returns>
      <example>http://msdn.microsoft.com/library/bb774096.aspx
            eg. CSIDL for:
             3 Control panel
             5 my documents
             8 Recent
             9 SendTo
            10 RecBin
            16 Desktop folder
            17 Computer
            20 Fonts
            32 Temp Inet Files</example>
    </member>
    <member name="M:LitDev.LDShell.ShowDesktop">
      <summary>Minimizes all opened windows into the taskbar and showes the desktop (Revert with RestoreWindows).</summary>
    </member>
    <member name="M:LitDev.LDShell.TileAllHoriz">
      <summary>Orders all opened windows horizontally tiled on the desktop (Revert with RestoreWindows).</summary>
    </member>
    <member name="M:LitDev.LDShell.TileAllVert">
      <summary>Orders all opened windows vertically tiled on the desktop (Revert with RestoreWindows).</summary>
    </member>
    <member name="M:LitDev.LDShell.CascadeWindows">
      <summary>Orders all opended windows in cascades on the desktop (Revert with RestoreWindows).</summary>
    </member>
    <member name="M:LitDev.LDShell.RestoreWindows">
      <summary>Restores all minimized windows in the taskbar (after ShowDesktop, TileAll.., CascadeWindows) again.</summary>
    </member>
    <member name="M:LitDev.LDShell.ToggleDesktop">
      <summary>Toggles the view of the (windowless) desktop on and off (s. ShowDesktop/RestoreWindows).</summary>
    </member>
    <member name="M:LitDev.LDShell.Switch3D">
      <summary>Orders all opended windows in a 3D stack on the desktop to select through (with arrow keys).</summary>
    </member>
    <member name="M:LitDev.LDShell.RunBox">
      <summary>Shows the Run(box) Dialog.</summary>
    </member>
    <member name="M:LitDev.LDShell.DateTimeSettings">
      <summary>Shows the dialog for date- and time settings.</summary>
    </member>
    <member name="M:LitDev.LDShell.StartSettings">
      <summary>Shows the dialog for startmenü/taskbar settings.</summary>
    </member>
    <member name="M:LitDev.LDShell.ExploreFolder(Microsoft.SmallBasic.Library.Primitive)">
      <summary>Opens a specified folder in a Windows Explorer window. (parent folder for existing file path). In new tab in QTTabBar.</summary>
      <param name="path">The folder path to open in explorer (file path opens parent folder). The folder must exist.</param>
    </member>
    <member name="M:LitDev.LDShell.OpenFolder(Microsoft.SmallBasic.Library.Primitive)">
      <summary>Opens explorer with the given file-/folder path (parent folder for existing file path). In new tab in QTTabBar.</summary>
      <param name="path">Opens the specified folder (file path opens parent folder). The folder must exist.</param>
    </member>
    <member name="M:LitDev.LDShell.SelectFolder(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>Shows a folder selection dialog.</summary>
      <param name="title">The title to show on the dialog.</param>
      <param name="initDir">The start folder when the dialog opens or "" for last selected folder (default: Computer).</param>
      <returns>The full folder path after selection or "" when canceled, else "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDShell.GetSystemInfo(Microsoft.SmallBasic.Library.Primitive)">
      <summary>Gets a given Systeminformation.</summary>
      <param name="info">The name of the value to get. Options:
            "DirectoryServiceAvailable", "DoubleClickTime", "ProcessorLevel", "ProcessorSpeed", "ProcessorArchitecture", "PhysicalMemoryInstalled", "IsOS_DomainMember"
            (Only XP: "IsOS_Professional", "IsOS_Personal").</param>
      <returns>The queried value on success, else "" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDShell.GetSetting(Microsoft.SmallBasic.Library.Primitive)">
      <summary>Gets values for global Shell settings (s. folder opions-view, CheckedStatus).</summary>
      <param name="value">An integer constant for the value to get (eg. 1, 2, 4, "8", "32" etc.).</param>
      <returns>"True" or "False" on success, else "FAILED".</returns>
      <example>http://msdn.microsoft.com/library/windows/desktop/gg537739.aspx
            ShowAllObjects = SBShell.GetSetting(1)
            ShowExtensions = SBShell.GetSetting(2)
            ShowInfoTip = SBShell.GetSetting(8192)
            ShowSuperHidden = SBShell.GetSetting(262144)</example>
    </member>
    <member name="P:LitDev.LDShell.AllDetails">
      <summary>Gets all available extended properties as Array ("idx=property name;", where -1=Infotip, 0=Name, .. up to 286=Total bitrate (or ev. ?Full bitrate? on engl systems)).</summary>
    </member>
    <member name="P:LitDev.LDShell.DTIconsOn">
      <summary>Gets weather the desktop icons are currently visible ("True" or "False").</summary>
    </member>
    <member name="P:LitDev.LDShell.SpecialFolderConstants">
      <summary>Gets a list of all CSIDL numbers and their according special System-/Shell folder names as Array ("csidl=folder name;").</summary>
    </member>
    <member name="P:LitDev.LDShell.SpecialFolderPaths">
      <summary>Gets a list of all special System-/Shell folder names and their according folder paths as Array ("folder name=path;").</summary>
    </member>
    <member name="P:LitDev.LDShell.SpecialFolders">
      <summary>Gets a list of all special System folders as Array ("folder name=path;"). For Shell folders s. 'SpecialFolderPaths'.</summary>
    </member>
    <member name="P:LitDev.LDShell.Version">
      <summary>Gets the current file version of this extension (else 0.0.0.0).</summary>
    </member>
    <member name="P:LitDev.LDShell.Name">
      <summary>Gets the name of the executing assembly for this extension.</summary>
    </member>
    <member name="T:LitDev.LDInline">
      <summary>
            Include C#, VB or JScript code to use at runtime.  
            If multiple namespaces or classes are used, then all method, property or event names should be unique.
            Alternatively a fully qualified namespace.type.name may be used.
            Can be used to compile extensions.
            May also be used with other .Net dlls compiled externally.
            Method, property, event, class and used references can be obtained (public static only).
            
            The current application assemblies are auto referenced.
            Depending on .Net methods used additional assemblies may be required.
            Additional assemblies are referenced by full dll path.
            Assembly dlls are often found in the following or similar locations:
            C:\Windows\Microsoft.NET\Framework\v2.0.50727
            C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\v3.0
            
            The TextWindow should be visible prior to using these methods if later use of the TextWindow is required.
            </summary>
    </member>
    <member name="M:LitDev.LDInline.IncludeCS(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Include and compile a C# Class(es).  Can be the contents of a file read with File.ReadContents().
            </summary>
      <param name="source">The C# source.</param>
      <param name="assemblies">An array of any additional assemblies required.</param>
      <param name="dllName">An optional path to create a dll (+xml) output, use "" to perform in-memory.</param>
      <returns>"FAILED" or "SUCCESS"</returns>
    </member>
    <member name="M:LitDev.LDInline.IncludeVB(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Include and compile a VB Module(s).  Can be the contents of a file read with File.ReadContents().
            </summary>
      <param name="source">The VB source.</param>
      <param name="assemblies">An array of any additional assemblies required.</param>
      <param name="dllName">An optional path to create a dll (+xml) output, use "" to perform in-memory.</param>
      <returns>"FAILED" or "SUCCESS"</returns>
    </member>
    <member name="M:LitDev.LDInline.IncludeJScript(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Include and compile a JScript Module(s).  Can be the contents of a file read with File.ReadContents().
            </summary>
      <param name="source">The JScript source.</param>
      <param name="assemblies">An array of any additional assemblies required.</param>
      <param name="dllName">An optional path to create a dll output, use "" to perform in-memory.</param>
      <returns>"FAILED" or "SUCCESS"</returns>
    </member>
    <member name="M:LitDev.LDInline.LoadDLL(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Use a previously compiled and saved dll.
            </summary>
      <param name="dllName">The dll path.</param>
    </member>
    <member name="M:LitDev.LDInline.Call(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Call a previously included method.
            </summary>
      <param name="method">The method name.</param>
      <param name="args">The method arguments, "" for none, a single value or an array for more than 1 value.</param>
      <returns>Any results from the call or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDInline.Get(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a previously included property.
            </summary>
      <param name="property">The property name.</param>
      <returns>The property value or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDInline.Set(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a previously included property.
            </summary>
      <param name="property">The property name.</param>
      <param name="value">The property value.</param>
    </member>
    <member name="M:LitDev.LDInline.Event(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a callback subroutine for a previously included event.
            </summary>
      <param name="Event">The event name.</param>
      <param name="callBack">The callback subroutine.</param>
    </member>
    <member name="M:LitDev.LDInline.GetMethods(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of inline methods loaded.
            </summary>
      <param name="fullName">Get the full name (namespace.type.method) "True" or just the method name "False".</param>
      <returns>Array of method names and return type.</returns>
    </member>
    <member name="M:LitDev.LDInline.GetMethodParameters(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of inline method loaded parameters (arguments).
            </summary>
      <param name="method">The method name.</param>
      <returns>Array of parameter names and type.</returns>
    </member>
    <member name="M:LitDev.LDInline.GetProperties">
      <summary>
            Get an array of inline properties loaded.
            </summary>
      <returns>Array of property names and type.</returns>
    </member>
    <member name="M:LitDev.LDInline.GetEvents">
      <summary>
            Get an array of inline events loaded.
            </summary>
      <returns>Array of event names and handler type.</returns>
    </member>
    <member name="M:LitDev.LDInline.GetReferences(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of inline references added.
            These are the referenced added, they may or may not be used.
            </summary>
      <param name="fullName">Get the fully qualified name (with version, culture and PublicKeyToken) "True" or the basic name "False".</param>
      <returns>Array of reference names and dll locations.</returns>
    </member>
    <member name="M:LitDev.LDInline.GetAssemblies(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of inline assemblies used.
            These are the referenced assemblies that are actually used.
            </summary>
      <param name="fullName">Get the fully qualified name (with version, culture and PublicKeyToken) "True" or the basic name "False".</param>
      <returns>Array of assembly names and dll locations.</returns>
    </member>
    <member name="M:LitDev.LDInline.GetTypes">
      <summary>
            Get an array of inline class types loaded.
            </summary>
      <returns>Array of class types and namespace.</returns>
    </member>
    <member name="T:LitDev.LDList">
      <summary>
            This object provides a way of storing values like an array that reorders itself as items are added or removed.
            A list is an efficient array store (much faster than SmallBasic arrays) that can be indexed by integers and perform various other operations.
            The indexing is automatically updated (indexed from 1) as the list changes.
            </summary>
    </member>
    <member name="M:LitDev.LDList.Add(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Adds a value to the end of a specified list.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="value">
            The value to add.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.Append(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Appends a second list to the end of a first list.
            </summary>
      <param name="listName1">
            The name of the first list.
            </param>
      <param name="listName2">
            The name of the second list to append to listName1.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.Count(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the count of items in the specified list.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.RemoveAt(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove a value from a specified list by index (starting from 1).
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="index">
            The value index to remove.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.GetAt(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a value from a specified list by index (starting from 1).
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="index">
            The value index to get.
            </param>
      <returns>The list value.</returns>
    </member>
    <member name="M:LitDev.LDList.SetAt(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set (replace) a value in a specified list by index (starting from 1).
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="index">
            The index to set.
            </param>
      <param name="value">
            The value to set.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.InsertAt(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Insert a value in a specified list by index (starting from 1).
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="index">
            The index to insert at.
            </param>
      <param name="value">
            The value to insert.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.IndexOf(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the index (starting from 1) of the first occurance of a value from the specified list.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="value">
            The value to get index of (0 for not found).
            </param>
      <returns>The value index or 0.</returns>
    </member>
    <member name="M:LitDev.LDList.Contains(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Check if a value is present within the specified list.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="value">
            The value to check.
            </param>
      <returns>
            "True" or "False".
            </returns>
    </member>
    <member name="M:LitDev.LDList.Reverse(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reverse the order of values in the specified list.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.Clear(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove all values from a specified list.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.SortByNumber(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sort a specified list with values treated as numbers.
            All values must be numbers.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.SortByText(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sort a specified list with values treated as text strings (lexical sort).
            The sort is case insensitive.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.SubList(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a sub list from the specified list.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="start">
            The first index of the sub list.
            </param>
      <param name="length">
            The length of the sub list.
            </param>
      <returns>The sub list.</returns>
    </member>
    <member name="M:LitDev.LDList.Find(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a sub list from the specified list where a text match is found.
            The text match is case insensitive.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="match">
            The match text.
            </param>
      <param name="exact">
            An exact match (case insensitive) "True" or the match text is contained in the list "False".
            </param>
      <returns>The sub list.</returns>
    </member>
    <member name="M:LitDev.LDList.FindIndices(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a sub list of indices from the specified list where a text match is found.
            The text match is case insensitive.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="match">
            The match text.
            </param>
      <param name="exact">
            An exact match (case insensitive) "True" or the match text is contained in the list "False".
            </param>
      <returns>The sub list of indices in the list where a match is found.</returns>
    </member>
    <member name="M:LitDev.LDList.Remove(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove all occurances from the specified list where a text match is found.
            The text match is case insensitive.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="match">
            The match text.
            </param>
      <param name="exact">
            An exact match (case insensitive) "True" or the match text is contained in the list "False".
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.Distinct(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a sub list of unique values from the specified list.
            The text comparison is case insensitive.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <returns>The sub list.</returns>
    </member>
    <member name="M:LitDev.LDList.Intersect(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a sub list of shared values between two specified lists.
            The text comparison is case insensitive.
            </summary>
      <param name="listName1">
            The name of the first list.
            </param>
      <param name="listName2">
            The name of the second list.
            </param>
      <returns>The intersection list.</returns>
    </member>
    <member name="M:LitDev.LDList.Except(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a sub list of non-shared values between two specified lists.
            The text comparison is case insensitive.
            </summary>
      <param name="listName1">
            The name of the first list.
            </param>
      <param name="listName2">
            The name of the second list.
            </param>
      <returns>The except list.</returns>
    </member>
    <member name="M:LitDev.LDList.Union(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a sub list of combined values (duplicates single counted) between two specified lists.
            The text comparison is case insensitive.
            </summary>
      <param name="listName1">
            The name of the first list.
            </param>
      <param name="listName2">
            The name of the second list.
            </param>
      <returns>The union list.</returns>
    </member>
    <member name="M:LitDev.LDList.Copy(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy a list.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <returns>A copy of the list.</returns>
    </member>
    <member name="M:LitDev.LDList.Write(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save a list to file.
            One line per list value is used.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <param name="filePath">
            The full path to save the list to.
            </param>
      <param name="append">
            Append to end of existing file "True" or create a new file "False".
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.Read(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Read a list from a file.
            </summary>
      <param name="filePath">
            The full path to read the list from.
            </param>
      <returns>
            The list if the operation was successful, otherwise "".
            </returns>
    </member>
    <member name="M:LitDev.LDList.Print(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Print a list to the TextWindow.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <returns>
            The number of items in the list or -1 on failure.
            </returns>
    </member>
    <member name="M:LitDev.LDList.ToArray(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert a list to a SmallBasic array.
            Not advised for large lists.
            </summary>
      <param name="listName">
            The name of the list.
            </param>
      <returns>
            The Small Basic array.
            </returns>
    </member>
    <member name="M:LitDev.LDList.CreateFromValues(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy a SmallBasic array to a list.
            The array indices are ignored by the list.
            </summary>
      <param name="sbArray">
            The SmallBasic array.
            </param>
      <returns>The created list.</returns>
    </member>
    <member name="M:LitDev.LDList.CreateFromIndices(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy a SmallBasic array indices to a list.
            </summary>
      <param name="sbArray">
            The SmallBasic array.
            </param>
      <returns>The created list.</returns>
    </member>
    <member name="T:LitDev.LDClient">
      <summary>
            Server and Client communication between computers.
            Separate programs are required for the server and client - this is for the client.
            </summary>
    </member>
    <member name="M:LitDev.LDClient.CheckServer(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Test if a server is available for connection.
            Do not call this method at a high frequency (&gt; 1 per second).
            </summary>
      <param name="server">The server connection ip:port (e.g. "192.168.1.60:100").
            This value is returned by LDServer.Start.</param>
      <returns>"AVAILABLE" or "UNAVAILABLE"</returns>
    </member>
    <member name="M:LitDev.LDClient.Connect(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Connect to a server.
            </summary>
      <param name="server">The server connection ip:port (e.g. "192.168.1.60:100").
            This value is returned by LDServer.Start.</param>
      <param name="auto">Enable auto message passing "True" or "False".
            If this is used (recommended) then all client data is passed via server to all other clients, 
            and no processing of send and receive events is required.
            The data is updated to arrays of data (indexed by client name) that is returned from the Update methods.
            The auto option should be the same for server and all clients.</param>
      <returns>"SUCCESS", "FAILED" or "ALREADY_CONNECTED"</returns>
    </member>
    <member name="M:LitDev.LDClient.Disconnect">
      <summary>
            Disconnect the client from the server.
            </summary>
      <returns>"SUCCESS", "FAILED" or "NOT_CONNECTED"</returns>
    </member>
    <member name="M:LitDev.LDClient.SendMessage(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Send a message to the server.
            </summary>
      <param name="message">The message may be any variable including an array.</param>
      <returns>"SUCCESS", "FAILED" or "NOT_CONNECTED"</returns>
    </member>
    <member name="M:LitDev.LDClient.UpdateDynamic(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Update client data when using the auto message passing.
            This is for small quantities of frequently changing data, like sprite coordinates.
            this method uses the last updated client data stored on the client and is therefore fast.
            </summary>
      <param name="data">The data for this client to propagate to other clients.</param>
      <returns>An array indexed by client names with current data for all existing clients.</returns>
    </member>
    <member name="M:LitDev.LDClient.UpdateStatic(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Update client data when using the auto message passing.
            This is for larger quantities of infrequently changing data, like client configuration.
            This method uses data stored and retrieved from the server so may be slower than UpdateDynamic since it waits for server retreived data,
            guaranteeing that all client data is fully synced.
            </summary>
      <param name="data">The data for this client to propagate to other clients.</param>
      <returns>An array indexed by client names with current data for all existing clients.</returns>
    </member>
    <member name="M:LitDev.LDClient.GetClients">
      <summary>
            Get a list of current connected clients.
            </summary>
      <returns>An array of current client names or "" for none.</returns>
    </member>
    <member name="P:LitDev.LDClient.Name">
      <summary>
            This client's name.
            Get or set your name.
            </summary>
    </member>
    <member name="P:LitDev.LDClient.CloseDelay">
      <summary>
            A delay in ms (default 100) when disconnecting to allow a message to be sent before connection closed (Disconnect).
            This delay should also be set for the server in LDServer.CloseDelay.
            </summary>
    </member>
    <member name="P:LitDev.LDClient.LastServerMessage">
      <summary>
            The last server message.
            </summary>
    </member>
    <member name="E:LitDev.LDClient.ServerMessage">
      <summary>
            Event when the server sends a message to this client.
            </summary>
    </member>
    <member name="E:LitDev.LDClient.Disconnected">
      <summary>
            Event when server disconnects this client.
            </summary>
    </member>
    <member name="T:LitDev.LDServer">
      <summary>
            Server and Client communication between computers.
            Separate programs are required for the server and client - this is for the server.
            </summary>
    </member>
    <member name="M:LitDev.LDServer.Disconnect(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Disconnect a client.
            </summary>
      <param name="clientName">The client name, usually Client1, Client2 etc.
            A list of current clients can be obtained from the method GetClients or found from the ClientConnected event.</param>
      <returns>"SUCCESS", "NOT_CONNECTED", "NO_CLIENT" or "FAILED"</returns>
    </member>
    <member name="M:LitDev.LDServer.Close(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Disconnect and close (End) a client.
            </summary>
      <param name="clientName">The client name, usually Client1, Client2 etc.
            A list of current clients can be obtained from the method GetClients or found from the ClientConnected event.</param>
      <returns>"SUCCESS", "NOT_CONNECTED", "NO_CLIENT" or "FAILED"</returns>
    </member>
    <member name="M:LitDev.LDServer.SendMessage(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Send a message to a client.
            </summary>
      <param name="clientName">The client name, usually Client1, Client2 etc.
            A list of current clients can be obtained from the method GetClients or found from the ClientConnected event.</param>
      <param name="message">The message may be any variable including an array.</param>
      <returns>"SUCCESS", "NOT_CONNECTED", "NO_CLIENT" or "FAILED"</returns>
    </member>
    <member name="M:LitDev.LDServer.Broadcast(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Send a message to all clients.
            </summary>
      <param name="message">The message may be any variable including an array.</param>
      <returns>A array of values "SUCCESS", "NOT_CONNECTED", "NO_CLIENT" or "FAILED" with the Client Name being the index.</returns>
    </member>
    <member name="M:LitDev.LDServer.Start(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Start the server.
            </summary>
      <param name="auto">Enable auto message passing "True" or "False".
            If this is used (recommended) then all client data is passed via server to all other clients, 
            and no processing of send and receive events is required.
            The data is updated to arrays of data (indexed by client name) that is returned from the client Update methods.
            The auto option should be the same for server and all clients.</param>
      <returns>The current connection parameter ip:port (e.g. "192.168.1.60:100"), or "FAILED".
            This is the parameter to use to connect from the client.</returns>
    </member>
    <member name="M:LitDev.LDServer.GetClients">
      <summary>
            Get a list of current connected clients.
            </summary>
      <returns>An array of current client names or "" for none.</returns>
    </member>
    <member name="M:LitDev.LDServer.Stop">
      <summary>
            Stop the current server and close all clients.
            </summary>
      <returns>"SUCCESS" or "FAILED"</returns>
    </member>
    <member name="P:LitDev.LDServer.IP">
      <summary>
            The IP address of the server (it is defaulted to the current LAN IP).
            If you want to use over the internet, then a web IP will be needed.
            </summary>
    </member>
    <member name="P:LitDev.LDServer.Port">
      <summary>
            The windows port to use (default 100).
            </summary>
    </member>
    <member name="P:LitDev.LDServer.CloseDelay">
      <summary>
            A delay in ms (default 100) when disconnecting to allow a message to be sent before connection closed (Stop, Disconnect and Close).
            This delay should also be set for clients in LDClient.CloseDelay.
            </summary>
    </member>
    <member name="P:LitDev.LDServer.AutoMessages">
      <summary>
            Show TextWindow connection messages when in auto mode "True" (default) or "False".
            </summary>
    </member>
    <member name="P:LitDev.LDServer.LastClient">
      <summary>
            The last client name.
            </summary>
    </member>
    <member name="P:LitDev.LDServer.LastClientConnected">
      <summary>
            The last client connected name.
            </summary>
    </member>
    <member name="P:LitDev.LDServer.LastClientDisconnected">
      <summary>
            The last client disconnected name.
            </summary>
    </member>
    <member name="P:LitDev.LDServer.LastClientMessage">
      <summary>
            The last client message.
            </summary>
    </member>
    <member name="E:LitDev.LDServer.ClientMessage">
      <summary>
            Event when a client sends a message to the server.
            </summary>
    </member>
    <member name="E:LitDev.LDServer.ClientConnected">
      <summary>
            Event when a client connects.
            </summary>
    </member>
    <member name="E:LitDev.LDServer.ClientDisconnected">
      <summary>
            Event when a client disconnects.
            </summary>
    </member>
    <member name="T:LitDev.LDQueue">
      <summary>
            This object provides a way of storing values.
            It is similar to a stack, except that is is fist-in first-out, like a queue.  
            You can enqueue (add) a value to the end of the queue and dequeue (remove) the first value at the front of the queue.
            You can only enqueue and dequeue the values one by one.
            </summary>
    </member>
    <member name="M:LitDev.LDQueue.Enqueue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Adds a value to the end of the specified queue.
            </summary>
      <param name="queueName">
            The name of the queue.
            </param>
      <param name="value">
            The value to enqueue.
            </param>
    </member>
    <member name="M:LitDev.LDQueue.GetCount(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the count of items in the specified queue.
            </summary>
      <param name="queueName">
            The name of the queue.
            </param>
      <returns>
            The number of items in the specified queue.
            </returns>
    </member>
    <member name="M:LitDev.LDQueue.Dequeue(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove (and get) the value from the front of the specified queue.
            </summary>
      <param name="queueName">
            The name of the queue.
            </param>
      <returns>
            The value from the queue.
            </returns>
    </member>
    <member name="T:LitDev.LDSettings">
      <summary>
            The Settings library consists of helpers that allow programs to
            store and retrieve user settings.
            </summary>
    </member>
    <member name="M:LitDev.LDSettings.GetValue(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the value for the setting identified by the specified name.
            </summary>
      <param name="name">
            The Name of the setting.
            </param>
      <returns>
            The Value of the setting.
            </returns>
    </member>
    <member name="M:LitDev.LDSettings.SetValue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sets a value for a setting identified by the specified name.
            </summary>
      <param name="name">
            The Name of the setting.
            </param>
      <param name="value">
            The Value of the setting.
            </param>
    </member>
    <member name="P:LitDev.LDSettings.FilePath">
      <summary>
            Gets or sets the file path for the settings file.
            </summary>
    </member>
    <member name="T:LitDev.LDIOWarrior">
      <summary>
            Access IO-Warrior devices.
            See http://www.codemercs.com/io-warrior/?L=1
            </summary>
    </member>
    <member name="M:LitDev.LDIOWarrior.Initialise">
      <summary>
            Initialise IO-Warrior devices.
            </summary>
      <returns>The number of devices.</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.Detatch">
      <summary>
            Disconnect all IO-Warrior devices.
            </summary>
    </member>
    <member name="M:LitDev.LDIOWarrior.LastError">
      <summary>
            Get the last system error message.
            "" for no error (probably only useful for detailed error analysis of underlying system calls).
            </summary>
      <returns>Last error number.</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.Read(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Read from the IO-Warrior device.
            </summary>
      <param name="id">The device number (indexed from 1).</param>
      <param name="channel">The channel to read (indexed from 0).</param>
      <param name="blocking">"True" (return after the state changes) or "False" (return with current state).</param>
      <param name="count">The number of bytes to read (if zero, then the ReportSize is used if channel is 0 or SpecialReportSize if channel is 1).
            See GetReportSize and GetSpecialReportSize.</param>
      <returns>An array of read bytes [0 to 255].</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.Write(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Write to the IO-Warrior device.
            </summary>
      <param name="id">The device number (indexed from 1).</param>
      <param name="channel">The channel to write to (indexed from 0).</param>
      <param name="data">An array of bytes to send [0 to 255].
            The array size should be ReportSize for channel 0 and SpecialReportSize for channel 1.
            See GetReportSize and GetSpecialReportSize.</param>
      <returns>The number of bytes successfully written.</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.GetReportSize(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the report size.
            Number of bytes in a Read/Write.
            This the report size for channel 0.
            </summary>
      <param name="id">The device number (indexed from 1).</param>
      <returns>The report size or 0.</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.GetSpecialReportSize(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the special report size.
            Number of bytes in a special Read/Write.
            This the report size for channel 1.
            </summary>
      <param name="id">The device number (indexed from 1).</param>
      <returns>The special report size or 0.</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.GetName(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the device name.
            </summary>
      <param name="id">The device number (indexed from 1).</param>
      <returns>The device name or "".</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.GetPID(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the device PID.
            </summary>
      <param name="id">The device number (indexed from 1).</param>
      <returns>The device PID (hex) or 0.</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.GetVID">
      <summary>
            Get the device VID (Common to all IOWarrior types).
            </summary>
      <returns>The device VID (hex) or 0.</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.GetSerialNumber(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the device serial number.
            </summary>
      <param name="id">The device number (indexed from 1).</param>
      <returns>The device serial number or "".</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.GetVersion(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the device firmware version.
            </summary>
      <param name="id">The device number (indexed from 1).</param>
      <returns>The device firmware version or 0.</returns>
    </member>
    <member name="M:LitDev.LDIOWarrior.LCDWrite(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Write text to the LCD (untested).
            </summary>
      <param name="id">The device number (indexed from 1).</param>
      <param name="text">The text to write.</param>
    </member>
    <member name="P:LitDev.LDIOWarrior.Timeout">
      <summary>
            The timeout for read and writes in ms.
            Default 1000.
            </summary>
    </member>
    <member name="T:LitDev.LDDataBase">
      <summary>
            SQL Database with ListView control.
            ConnectSQLite for SQLite databases (see http://zetcode.com/db/sqlite for SQLite commands).
            ConnectMySQL for MySQL databases (see http://www.mysql.com for MySQL downloads and setup).
            ConnectSqlServer for SqlServer databases (see http://www.microsoft.com/en-us/server-cloud/products/sql-server-editions/sql-server-express.aspx for SqlServer downloads and setup).
            ConnectOleDb for Access OleDb databases.
            ConnectOdbc for Odbc databases.
            </summary>
    </member>
    <member name="M:LitDev.LDDataBase.GetDB">
      <summary>
            Get a read only list of databases for use outside Small Basic.
            </summary>
      <returns>
            IReadOnlyList/<DataBase /></returns>
    </member>
    <member name="M:LitDev.LDDataBase.ConnectSQLite(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create or open an SQLite database.
            This must be called before any SQL methods.
            When a table is created it must have first column as "Id INTEGER PRIMARY KEY".
            </summary>
      <param name="fileName">The full path to the SQLite database file (usually with extension db).</param>
      <returns>A label to identify the database.</returns>
    </member>
    <member name="M:LitDev.LDDataBase.ConnectMySQL(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Connect to a MySQL database.
            This must be called before any SQL methods.
            The MySQL service must be running and database with credentials already created, if in doubt use SQLite.
            </summary>
      <param name="server">The MySQL server (e.g. "localhost").</param>
      <param name="user">The MySQL user name.</param>
      <param name="password">The MySQL user password.</param>
      <param name="database">The MySQL database name.</param>
      <returns>A label to identify the database.</returns>
    </member>
    <member name="M:LitDev.LDDataBase.ConnectSqlServer(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Connect to a SqlServer database.
            This must be called before any SQL methods.
            The SqlServer service must be running and database with credentials already created, if in doubt use SQLite.
            </summary>
      <param name="server">The SqlServer server (e.g. "(local)\SQLEXPRESS").</param>
      <param name="database">The SqlServer database name.</param>
      <returns>A label to identify the database.</returns>
    </member>
    <member name="M:LitDev.LDDataBase.ConnectOleDb(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Connect to an Access OleDb database.
            This must be called before any SQL methods.
            The Access OleDb service must be running and database with credentials already created, if in doubt use SQLite.
            </summary>
      <param name="provider">The OleDb provider (e.g. "SQLOLEDB").</param>
      <param name="server">The OleDb server (e.g. "localhost").</param>
      <param name="database">The OleDb database name.</param>
      <returns>A label to identify the database.</returns>
    </member>
    <member name="M:LitDev.LDDataBase.ConnectOdbc(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Connect to an Odbc driver connected database.
            This must be called before any SQL methods.
            The Odbc service must be running and database with credentials already created, if in doubt use SQLite.
            </summary>
      <param name="driver">The Odbc driver (e.g. "{MySQL ODBC 3.51 Driver}").</param>
      <param name="server">The Odbc server (e.g. "localhost").</param>
      <param name="port">The Odbc port number.</param>
      <param name="user">The Odbc user name.</param>
      <param name="password">The Odbc user password.</param>
      <param name="option">The Odbc option number to control the Odbc connection (e.g. 0 or 3).</param>
      <param name="database">The Odbc database name.</param>
      <returns>A label to identify the database.</returns>
    </member>
    <member name="M:LitDev.LDDataBase.AddListView(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a ListView to view database query results.
            This is a read only display of query results.
            </summary>
      <param name="width">The width of the ListView.</param>
      <param name="height">The height of the ListView.</param>
      <returns>The ListView control.</returns>
    </member>
    <member name="M:LitDev.LDDataBase.Command(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Perform an SQLite, MySQL, SqlServer. OleDb or Odbc command (not a query) on a database.
            If this database is viewed in a dataview then unsaved user changes will be lost when the dataview is updated following this operation. 
            </summary>
      <param name="database">The existing database label (see ConnectSQLite, ConnectMySQL, ConnectSqlServer, ConnectOleDb or ConnectOdbc).</param>
      <param name="command">The SQL Command.</param>
      <returns>The number of rows updated.</returns>
    </member>
    <member name="M:LitDev.LDDataBase.Query(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Perform an SQLite, MySQL, SqlServer, OleDb or Odbc Query (not a command) on a database.
            </summary>
      <param name="database">The existing database label (see ConnectSQLite, ConnectMySQL, ConnectSqlServer, ConnectOleDb or ConnectOdbc).</param>
      <param name="query">The SQL Query.
            Example "SELECT * FROM myTable;".</param>
      <param name="listview">A ListView to populate with the query result or "" for none.</param>
      <param name="getRecords">Optionally return an array of results ("True" or "False").
            Remember large multi-dimensional arrays in Small Basic are slow.</param>
      <returns>Optional array of results or "".</returns>
    </member>
    <member name="M:LitDev.LDDataBase.EditTable(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Display a database table for editing in a LDControls.DataView control.
            Using this method the database is bound to the dataview conrol, reflecting the database.
            </summary>
      <param name="database">The existing database label (see ConnectSQLite, ConnectMySQL, ConnectSqlServer, ConnectOleDb or ConnectOdbc).</param>
      <param name="table">The table name to view and edit.</param>
      <param name="dataview">A DataView control.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDDataBase.SaveTable(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Commit any changes made in a LDControls.DataView to the database.
            </summary>
      <param name="database">The existing database label (see ConnectSQLite, ConnectMySQL, ConnectSqlServer, ConnectOleDb or ConnectOdbc).</param>
      <param name="dataview">A DataView control.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="P:LitDev.LDDataBase.Connection">
      <summary>
            Over-ride an SQL database connection string (advanced use only).
            Set before connection to database, when this connection string will be used in place of the entered connection parameters.
            Default is "" (unused).
            </summary>
    </member>
    <member name="T:LitDev.LDEncryption">
      <summary>
            Encryption and hash methods.
            </summary>
    </member>
    <member name="M:LitDev.LDEncryption.RSAEncrypt(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Encrypt an RSA message.  
            Requires a Public key to be set (Anyone can encrypt with public key).
            If no key is set then one created for this session is used.
            </summary>
      <param name="unencrypted">The message to encrypt.</param>
      <returns>The encrypted message.</returns>
    </member>
    <member name="M:LitDev.LDEncryption.RSADecrypt(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Decrpyt an RSA message.  
            Requires a Private key to be set (Only originator can decrypt with private key).
            If no key is set then one created for this session is used.
            </summary>
      <param name="encrypted">The encypted message.</param>
      <returns>The unencrypted message.</returns>
    </member>
    <member name="M:LitDev.LDEncryption.RSASign(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sign an RSA message.  
            Requires a Private key to be set (Only originator can sign with private key).
            If no key is set then one created for this session is used.
            </summary>
      <param name="data">The message to sign.</param>
      <returns>The signing for the message.</returns>
    </member>
    <member name="M:LitDev.LDEncryption.RSAVerify(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Verify a signed RSA message.  
            Requires a Public key to be set (Anyone can verify with public key).
            If no key is set then one created for this session is used.
            </summary>
      <param name="data">The message that was signed.</param>
      <param name="sign">The signing for the message.</param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDEncryption.RSAReset">
      <summary>
            Randomly reset the private and public keys
            </summary>
    </member>
    <member name="M:LitDev.LDEncryption.AESEncrypt(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Encrypt some text using AES encryption and a password key.
            The encrypted text can be saved to a file.
            Note that if you forget the password there is NO WAY to decrypt!
            </summary>
      <param name="source">The text to encrypt.</param>
      <param name="password">The password key for the encryption.</param>
      <returns>The encrypted text (cypher).</returns>
    </member>
    <member name="M:LitDev.LDEncryption.AESDecrypt(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Decrypt an AES encrypted cypher (previously encrypted) using a password key.
            </summary>
      <param name="cypher">The encrypted text (cypher).</param>
      <param name="password">The password key for the encryption.</param>
      <returns>The original unencrypted text or "" if password and cypher don't match.</returns>
    </member>
    <member name="M:LitDev.LDEncryption.MD5Hash(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create an MD5 hash of a text input (http://wikipedia.org/wiki/MD5).
            This 32 character hash is recommended where a general or shorter hash is required (password or data integrity).
            </summary>
      <param name="text">A text or password to create a hash.</param>
      <returns>The 32 character hex MD5 Hash.</returns>
    </member>
    <member name="M:LitDev.LDEncryption.MD5HashFile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create an MD5 hash of a file.
            This 32 character hash is for file data integrity checks (e.g. a file contents is unchanged).
            </summary>
      <param name="fileName">The full path to a file to get the hash.</param>
      <returns>The 32 character hex MD5 Hash.</returns>
    </member>
    <member name="M:LitDev.LDEncryption.SHA512Hash(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a SHA2-512 hash of a text input.
            This 128 character hash is recommended for the most secure password encryption.
            </summary>
      <param name="password">A text to create a hash (often a password).</param>
      <returns>The 128 character hex SHA512 Hash.</returns>
    </member>
    <member name="M:LitDev.LDEncryption.SHA512HashFile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create an SHA512 hash of a file.
            This 128 character hash is for file data integrity checks (e.g. a file contents is unchanged).
            </summary>
      <param name="fileName">The full path to a file to get the hash.</param>
      <returns>The 128 character hex SHA512 Hash.</returns>
    </member>
    <member name="P:LitDev.LDEncryption.RSAPublicKey">
      <summary>
            Get or set a public RSA key.
            </summary>
    </member>
    <member name="P:LitDev.LDEncryption.RSAPrivateKey">
      <summary>
            Get or set a private RSA key.
            </summary>
    </member>
    <member name="T:LitDev.LDText">
      <summary>
            Text manipulations.
            </summary>
    </member>
    <member name="M:LitDev.LDText.Split(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Split a variable into an array delimiated by a separator.
            </summary>
      <param name="text">A text string to split.</param>
      <param name="separator">A separator string (e.g. " "), or an array of separator strings.</param>
      <returns>A result array of deliminated texts.</returns>
    </member>
    <member name="M:LitDev.LDText.Compare(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Lexically compare 2 text strings, the comparison is case insensitive and culture invariant.
            </summary>
      <param name="text1">The first string to compare.</param>
      <param name="text2">The second string to compare.</param>
      <returns>An integer:
            less than zero (text1 is less than text2)
            zero (strings are equal)
            greater than zero (text1 is greater than text2)</returns>
    </member>
    <member name="M:LitDev.LDText.Trim(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Return a string with all leading and trailing 'white space' removed.
            </summary>
      <param name="text">A string to trim.</param>
      <returns>A trimmed copy of the input string.</returns>
    </member>
    <member name="M:LitDev.LDText.Replace(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Find and Replace all occurances of one text with another.
            </summary>
      <param name="text">A text to modify.</param>
      <param name="find">The text to find and replace.</param>
      <param name="replace">The text to replace the found text.</param>
      <returns>A modified copy of the input text.</returns>
    </member>
    <member name="M:LitDev.LDText.FindAll(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get all occurances of a subtext in some text.
            </summary>
      <param name="text">The text to search.</param>
      <param name="find">The subtext to search for.</param>
      <returns>An array with the positions of the start of each subtext or 0 for none.</returns>
    </member>
    <member name="M:LitDev.LDText.GetWidth(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the width in pixels that text will be displayed in the GraphicsWindow with the current font.
            The GraphicsWindow must be open to use this method.
            </summary>
      <param name="text">The text to get the width.</param>
      <returns>The width in pixels.</returns>
    </member>
    <member name="M:LitDev.LDText.GetHeight(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the height in pixels that text will be displayed in the GraphicsWindow with the current font.
            The GraphicsWindow must be open to use this method.
            </summary>
      <param name="text">The text to get the height.</param>
      <returns>The width in pixels.</returns>
    </member>
    <member name="M:LitDev.LDText.FastStringNew">
      <summary>
            Create a new fast string appending object.
            </summary>
      <returns>The fast string append object.</returns>
    </member>
    <member name="M:LitDev.LDText.FastStringClear(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reset a fast string object to "".
            </summary>
      <param name="fastString">A fast string object.</param>
    </member>
    <member name="M:LitDev.LDText.FastStringAppend(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Append a string value to a fast string object.
            </summary>
      <param name="fastString">A fast string object.</param>
      <param name="text">The test to append.</param>
    </member>
    <member name="M:LitDev.LDText.FastStringGet(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the current text in a fast string.
            </summary>
      <param name="fastString">A fast string object.</param>
      <returns>The current fast string text.</returns>
    </member>
    <member name="T:LitDev.LDSound">
      <summary>
            A Sound Recorder.  A microphone (may be internal) is required.
            System sounds can also be played (if they are set appropriately).
            </summary>
    </member>
    <member name="M:LitDev.LDSound.Start">
      <summary>
            Start recording sound.
            </summary>
    </member>
    <member name="M:LitDev.LDSound.Stop(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Stop and save current sound recording.
            </summary>
      <param name="wavFile">The full path to a wav file to save the recording.
            The extension will be set to ".wav" if it is not already.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDSound.Pause">
      <summary>
            Pause a recording.
            </summary>
    </member>
    <member name="M:LitDev.LDSound.Resume">
      <summary>
            Resume a paused recording.
            </summary>
    </member>
    <member name="M:LitDev.LDSound.Asterisk">
      <summary>
            Play system Asterisk sound.
            </summary>
    </member>
    <member name="M:LitDev.LDSound.Beep">
      <summary>
            Play system Beep sound.
            </summary>
    </member>
    <member name="M:LitDev.LDSound.Exclamation">
      <summary>
            Play system Exclamation sound.
            </summary>
    </member>
    <member name="M:LitDev.LDSound.Hand">
      <summary>
            Play system Hand sound.
            </summary>
    </member>
    <member name="M:LitDev.LDSound.Question">
      <summary>
            Play system Question sound.
            </summary>
    </member>
    <member name="M:LitDev.LDSound.Tone(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Play a system tone sound with frequency and duration.
            Uses the motherboard speaker (not the sound card) and may be low quality or not available.
            </summary>
      <param name="frequency">The tone frequency (from 37 to 32767 Hz).</param>
      <param name="duration">The tone duration in ms.</param>
    </member>
    <member name="M:LitDev.LDSound.MusicPlayTime(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the play time for a music file.
            </summary>
      <param name="fileName">
            The full path of the music file e.g. "C:\Users\Public\Music\song.mp3".
            </param>
      <returns>
            The file play time in seconds (0 if failed).
            </returns>
    </member>
    <member name="M:LitDev.LDSound.Volume(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Change the volume of sounds.
            </summary>
      <param name="command">One of the following options to change the sound volume level.
            "Up" increase volume level.
            "Down" decrease volume level.
            "Mute" toggle between mute and un-mute volume level.</param>
    </member>
    <member name="T:LitDev.LDHID">
      <summary>
            USB control for HID (Human Interface Devices).
            The VID and PID (4 character hex codes) for the device are required.
            Only HIDs will work using these methods.
            Hopefully this includes most game controllers, simple robotic devices and sensors.
            </summary>
    </member>
    <member name="M:LitDev.LDHID.InputLength(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the input record length for a HID device.
            </summary>
      <param name="name">The device name.</param>
      <returns>The number of bytes in the input record.</returns>
    </member>
    <member name="M:LitDev.LDHID.OutputLength(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the output record length for a HID device.
            </summary>
      <param name="name">The HID device name.</param>
      <returns>The number of bytes in the output record.</returns>
    </member>
    <member name="M:LitDev.LDHID.Output(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Send data to the HID device.
            This must be an array of bytes (0 to 255).
            The array must be indexed from 1 and have size OutputLength.
            </summary>
      <param name="name">The HID device name.</param>
      <param name="data">The data to send.</param>
      <returns>"True" or "False" for data consistency.</returns>
    </member>
    <member name="M:LitDev.LDHID.AddDevice(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a HID connected device from its VID and PID.
            The VID and PID are 4 character (hex) values, and can be found from:
            Device Manager-&gt;Properties-&gt;Details-&gt;Hardware ids
            For example: HID\VID_046D PID_C215 REV_0204 has VID "046D" and PID "C215".
            Only add a device once.
            </summary>
      <param name="VID">The device VID.</param>
      <param name="PID">The device PID.</param>
      <param name="name">A name for the device.</param>
      <returns>"True" or "False" for success or failure</returns>
    </member>
    <member name="M:LitDev.LDHID.GetBits(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an 8 element array of 1s and 0s indicating which bit of a byte are set.
            </summary>
      <param name="data">A byte number (0 to 255).</param>
      <returns>An 8 element bit array (small bit first) or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDHID.SetBits(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a byte from an 8 element array of 1s and 0s indicating which bit of a byte are set.
            </summary>
      <param name="data">An 8 element array of 1s and 0s (small bit first).</param>
      <returns>A byte number (0 to 255) or -1 on failure.</returns>
    </member>
    <member name="M:LitDev.LDHID.FindDevices">
      <summary>
            List all found HID (Human Interface Devices).
            </summary>
      <returns>A 2D array of all found devices.
            The first dimension is the found device indexed from 1.
            The second dimension is "VID", "PID" and "Description" holding the hex values of VID, PID and a device description.
            </returns>
    </member>
    <member name="P:LitDev.LDHID.LastInput">
      <summary>
            An array of the last HID input data.
            This a set of values from 0 to 255 (bytes).
            </summary>
      <returns>An array of input data or "" for none.</returns>
    </member>
    <member name="P:LitDev.LDHID.LastDevice">
      <summary>
            The last HID device that had input.
            </summary>
      <returns>The last device name.</returns>
    </member>
    <member name="E:LitDev.LDHID.Input">
      <summary>
            Event when the HID input changes.
            </summary>
    </member>
    <member name="E:LitDev.LDHID.Removed">
      <summary>
            Event when the HID device is removed.
            </summary>
    </member>
    <member name="T:LitDev.LDScrollBars">
      <summary>
            GraphicsWindow ScrollBars - can be used for a scrolling game.
            
            Warning - Do not alter the GraphicsWindow size using GraphicsWindow.Width or GraphicsWindow.Height AFTER scrollbars have been added.
            In this case use LDGraphicsWindow.Width and LDGraphicsWindow.Height.
            
            For large scrolling regions see Rasterize property.
            </summary>
    </member>
    <member name="M:LitDev.LDScrollBars.Add(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add Scroll Bars to the GraphicsWindow.
            The input width and height are those that can be scrolled to.
            A value of 0 prevents a scrollbar appearing.
            </summary>
      <param name="width">The width of the scrollable region.</param>
      <param name="height">The height of the scrollable region.</param>
    </member>
    <member name="M:LitDev.LDScrollBars.Modify(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Move scrollbars.
            </summary>
      <param name="action">Allowed actions include the following.
            "PageDown", "PageUp", "PageLeft" and "PageRight"
            "ScrollToTop", "ScrollToBottom", "ScrollToLeftEnd" and "ScrollToRightEnd"
            "ScrollToHome", "ScrollToEnd"
            </param>
    </member>
    <member name="P:LitDev.LDScrollBars.KeyScroll">
      <summary>
            Set if scrollbars will move with arrow keys "True" (default) or "False".
            </summary>
    </member>
    <member name="P:LitDev.LDScrollBars.MouseScroll">
      <summary>
            Set if scrollbars will move with mouse wheel "True" (default) or "False".
            Hold the shift key down to scroll horizontally with mouse wheel.
            </summary>
    </member>
    <member name="P:LitDev.LDScrollBars.HorizontalScroll">
      <summary>
            Get or Set the horizontal ScrollBar position.
            </summary>
    </member>
    <member name="P:LitDev.LDScrollBars.VerticalScroll">
      <summary>
            Get or Set the vertical ScrollBar position.
            </summary>
    </member>
    <member name="P:LitDev.LDScrollBars.Visibility">
      <summary>
            Get or Set the ScrollBars' visibility.
            "True" or "False".
            </summary>
    </member>
    <member name="P:LitDev.LDScrollBars.Rasterize">
      <summary>
            Rasterize drawables "True" (default) or "False".
            When more than 100 objects are drawn (not Shapes) SmallBasic will rasterise these to an image for performance reasons.
            For a very large scrollable region this will run out of memory and can be disabled here.
            If it is disabled, then don't use more than 100 drawable objects.
            This property should be set before LDScrollBars.Add is called.
            </summary>
    </member>
    <member name="E:LitDev.LDScrollBars.ScrollBarChanged">
      <summary>
            Event when a scroll operation occurs
            </summary>
    </member>
    <member name="T:LitDev.LDNetwork">
      <summary>
            Network or web methods.
            </summary>
    </member>
    <member name="M:LitDev.LDNetwork.HighScore(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Upload a potential high score to the web.
            All values are case sensitive and the score should be an integer number.
            </summary>
      <param name="game">The game name (a unique name for each game or version is required).</param>
      <param name="user">The user name.</param>
      <param name="score">The score.</param>
      <returns>An array with the current high score user name and their score.</returns>
    </member>
    <member name="M:LitDev.LDNetwork.SetGameData(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Upload some data for a game.
            </summary>
      <param name="game">The game name (a unique case sensitive name for each game or version is required).</param>
      <param name="data">The data to store, may be an array.</param>
      <returns>The stored data on success.</returns>
    </member>
    <member name="M:LitDev.LDNetwork.GetGameData(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Download some data (previously saved) for a game.
            </summary>
      <param name="game">The game name (a unique case sensitive name for each game or version is required).</param>
      <returns>The stored data on success.</returns>
    </member>
    <member name="M:LitDev.LDNetwork.LAN(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a list of the devices and their addresses connected to your local area network (LAN, home network, 192.168.1.xx).
            </summary>
      <param name="timeout">A timeout in ms, e.g. 1000.</param>
      <returns>An array of IP address and device names with ping time, indexed by IP address.</returns>
    </member>
    <member name="M:LitDev.LDNetwork.Ping(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Ping an IP address and return the roundtrip time.
            </summary>
      <param name="IP">The IP address (or url) to ping.</param>
      <param name="timeout">A timeout in ms, e.g. 1000.</param>
      <returns>The roundtrip time on success (ms) or -1 on failure</returns>
    </member>
    <member name="M:LitDev.LDNetwork.DownloadFile(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Similar To Network.DownloadFile, except the download file is input and handles larger files better.
            </summary>
      <param name="localFile">The local file name to save the downloaded file.</param>
      <param name="remoteFile">The remote network file.</param>
      <returns>The size of the file in bytes or -1 for failue.</returns>
    </member>
    <member name="T:LitDev.LDTextWindow">
      <summary>
            TextWindow utilities.
            Includes low level keyboard events.
            </summary>
    </member>
    <member name="M:LitDev.LDTextWindow.Read(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Read from a TextWindow with a maximum delay.
            This sends a Return (ENTER) to the TextWindow after the delay.
            If the user presses Return before the delay is completed, then no further action is taken.
            </summary>
      <param name="delay">A maximum delay in ms before the Read is terminated.</param>
      <returns>The text that was read from the TextWindow.</returns>
    </member>
    <member name="M:LitDev.LDTextWindow.ReadNumber(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Read a number from a TextWindow with a maximum delay.
            This sends a Return (ENTER) to the TextWindow after the delay.
            If the user presses Return before the delay is completed, then no further action is taken.
            </summary>
      <param name="delay">A maximum delay in ms before the Read is terminated.</param>
      <returns>The number that was read from the TextWindow.</returns>
    </member>
    <member name="M:LitDev.LDTextWindow.SendKey(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Send a key to a window.  This is the same a typing the key into a window.
            </summary>
      <param name="window">The window title e.g. TextWindow.Title or GraphicsWindow.Title.</param>
      <param name="key">The key to send e.g. "Return"</param>
    </member>
    <member name="M:LitDev.LDTextWindow.Hide">
      <summary>
            Hide the TextWindow.
            Replacement for standard method that may fail (do not mix these methods).
            </summary>
    </member>
    <member name="M:LitDev.LDTextWindow.Show">
      <summary>
            Show the TextWindow and give it focus.
            Replacement for standard method that may fail (do not mix these methods).
            </summary>
    </member>
    <member name="M:LitDev.LDTextWindow.Capture(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save the TextWindow as an image file (png, jpg, bmp, gif, tiff or ico).
            
            The window must be visible and a short delay may be required after updating the window before calling.
            </summary>
      <param name="fileName">
            The file to save the image to (*.png, *.jpg, *.bmp, *.gif, *.tiff or *.ico).
            If this is set to "", then the image is created internally as an ImageList.
            </param>
      <param name="border">
            Include the window border ("True" or "False").
            </param>
      <returns>
            The ImageList image if fileName is "", otherwise if output to a file, then "" is returned.
            </returns>
    </member>
    <member name="M:LitDev.LDTextWindow.Print(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Print the TextWindow contents.
            
            The window must be visible and a short delay may be required after updating the window before calling.
            </summary>
      <param name="border">
            Include the window border ("True" or "False").
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDTextWindow.SetColour(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Replace one of the standard TextWindow colours.
            There are 16 available colours, by default they are indexed 0 to 15:
            Black (0), DarkBlue (1), DarkGreen (2), DarkCyan (3), DarkRed (4), DarkMagenta (5), DarkYellow (6), Gray (7),
            DarkGray (8), Blue (9), Green (10), Cyan (11), Red (12), Magenta (13), Yellow (14), White (15).
            Note that you can still use TextWindow.BackgroundColor and TextWindow.ForegroundColor to use the new colours (with the original colour names), alternatively the colours can be selected using LDTextWindow.SetColours from the indices.
            The colours must be set using either method before they are applied.
            </summary>
      <param name="index">The stanadard colour index colour to replace.</param>
      <param name="colour">Any colour to replace a standard colour with.</param>
    </member>
    <member name="M:LitDev.LDTextWindow.SetColours(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the current foreground and background colour indices.
            </summary>
      <param name="fgIndex">The foreground colour index (0 to 15).</param>
      <param name="bgIndex">The background colour index (0 to 15).</param>
    </member>
    <member name="P:LitDev.LDTextWindow.LastKey">
      <summary>
            Last key pressed or released.
            </summary>
    </member>
    <member name="P:LitDev.LDTextWindow.Encoding">
      <summary>
            Set extended encoding for the TextWindow.
            Allowed values are:
            "ASCII" (default), "Unicode", "UTF7", "UTF8"
            </summary>
    </member>
    <member name="E:LitDev.LDTextWindow.KeyDown">
      <summary>
            Low level event when a key is pressed down.
            This event is independent of any window focus, i.e. not just for TextWindow or GraphicsWindow.
            </summary>
    </member>
    <member name="E:LitDev.LDTextWindow.KeyUp">
      <summary>
            Low level event when a key is released.
            This event is independent of any window focus, i.e. not just for TextWindow or GraphicsWindow.
            </summary>
    </member>
    <member name="T:LitDev.LDGraphicsWindow">
      <summary>
            GraphicsWindow utilities.
            </summary>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.Capture(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save the GraphicsWindow as an image file (png, jpg, bmp, gif, tiff or ico).
            
            The window must be visible and a short delay may be required after updating the window before calling.
            </summary>
      <param name="fileName">
            The file to save the image to (*.png, *.jpg, *.bmp, *.gif, *.tiff or *.ico).
            If this is set to "", then the image is created internally as an ImageList.
            </param>
      <param name="border">
            Include the window border ("True" or "False").
            </param>
      <returns>
            The ImageList image if fileName is "", otherwise if output to a file, then "" is returned.
            </returns>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.Print(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Print the GraphicsWindow contents.
            
            The window must be visible and a short delay may be required after updating the window before calling.
            </summary>
      <param name="border">
            Include the window border ("True" or "False").
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.PauseUpdates">
      <summary>
            Pause GraphicsWindow Updates.
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.ResumeUpdates">
      <summary>
            Resume GraphicsWindow Updates.
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.ExitButtonMode(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the mode of the close button for a window.
            </summary>
      <param name="window">The window title, e.g. TextWindow.Title or GraphicsWindow.Title.</param>
      <param name="mode">The mode "Enabled", "Disabled")</param>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.TransparentGW">
      <summary>
            Create a transparent GraphicsWindow.
            This must be the called before any other GraphicsWindow, Controls or Shapes methods that create a window.
            To see anything you must add something to the transparent GraphicsWindow.
            For example, create a non-rectangular window using a transparent border png with LDShapes.BackgroundImage.
            The transparency can be altered with GraphicsWindow.BackgroundColor.
            Sometimes less than 100% transparency can be required (e.g. to register mouse movements).
            </summary>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.BackgroundImage(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the background as an image.
            The backgound is auto rescaled to fill whatever size the GraphicsWindow is.
            </summary>
      <param name="imageName">
            The image to load as the background.
            Value returned from ImageList.LoadImage or local or network image file.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.BackgroundBrush(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the background as a gradient of colours.
            </summary>
      <param name="brush">
            A previously created gradient or image brush (LDShapes.BrushGradient LDShapes.BrushImage).
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.SetFontFromFile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>Set font in GraphicsWindow from a local TTF font file.</summary>
      <param name="fontFile">Full path to font file to set.</param>
      <returns>The font name on success, else "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.GetPixel(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the color of the pixel at the specified x and y co-ordinates.
            This method works for background, drawing and shape layers.
            </summary>
      <param name="x">
            The x co-ordinate of the pixel.
            </param>
      <param name="y">
            The y co-ordinate of the pixel.
            </param>
      <returns>
            The color of the pixel.
            </returns>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.FloodFill(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Fill a region surrounding a specified pixel.
            All neighbour pixels of the same colour are changed.
            This only applies to the drawing layer of the GraphicsWindow.
            </summary>
      <param name="x">
            The x co-ordinate of the pixel to start the fill.
            </param>
      <param name="y">
            The y co-ordinate of the pixel to start the fill.
            </param>
      <param name="colour">
            The colour to fill with.
            </param>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.SetActive">
      <summary>
            Set the GraphicsWindow as active (has focus).
            </summary>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.Reposition(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Scale and move all Shapes and Controls within the GraphicsWindow.
            This method resizes and moves the view rather than the shapes, so their positions and other properties remain unchanged but appear scaled within the repositioned region.
            For example Shapes.GetLeft remains unchanged although the view has been repositioned and GraphicsWindow.MouseX reports the coordinates relative to the repositioned view.
            Imagine the entire view is repositioned as if it were a shape inside the GrapicsWindow.
            The transformation between view coordinates (vX,vY) and GraphicsWindow coordinates (gwX,gwY) is:
            gwX = (vX+panX)*scaleX + gw*(1-scaleX)/2
            gwY = (vY+panY)*scaleY + gh*(1-scaleY)/2
            All drawing remains within the original GraphicsWindow.
            </summary>
      <param name="scaleX">The X direction scaling of the view.</param>
      <param name="scaleY">The Y direction scaling of the view.</param>
      <param name="panX">Pan the view in the X direction in the view scaling, 0 is centered in the GraphicsWindow.</param>
      <param name="panY">Pan the view in the Y direction in the view scaling, 0 is centered in the GraphicsWindow.</param>
      <param name="angle">An angle to rotate the view.</param>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.Animate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Scale and move all Shapes and Controls within the GraphicsWindow, by smooth animation.
            This is the same as the Reposition method except that the movement is animated.
            </summary>
      <param name="scaleX">The X direction scaling of the view.</param>
      <param name="scaleY">The Y direction scaling of the view.</param>
      <param name="panX">Pan the view in the X direction in the view scaling, 0 is centered in the GraphicsWindow.</param>
      <param name="panY">Pan the view in the Y direction in the view scaling, 0 is centered in the GraphicsWindow.</param>
      <param name="angle">An angle to rotate the view.</param>
      <param name="duration">The time for the animation, in milliseconds.</param>
    </member>
    <member name="M:LitDev.LDGraphicsWindow.RepositionPoint(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get coordinates transformed between GraphicsWindow and a repositioned View (See Reposition).
            </summary>
      <param name="x">The x coordinate to transform.</param>
      <param name="y">The x coordinate to transform.</param>
      <param name="toGW">Transfer from View to GraphicsWindow ("True") or from GraphicsWindow to View ("False").</param>
      <returns>A 2D array of transformed coordinates indexed by 1 and 2.</returns>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.Style">
      <summary>
            The GraphicsWindow style (None 0, SingleBorder 1, 3DBorder 2, ToolWindow 3).
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.State">
      <summary>
            The GraphicsWindow state (Normal 0, Minimised 1, Maximised 2).
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.Icon">
      <summary>
            Set the GraphicsWindow Icon, "SB" sets to Small Basic icon.
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.Width">
      <summary>
            Set or get the GraphicsWindow width if using LDScrollBars
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.Height">
      <summary>
            Set or get the GraphicsWindow height if using LDScrollBars
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.ScreenCapture">
      <summary>
            Use screen capture for GraphicsWindow image creation.
            This only applies to Print and Capture methods when the border option is set to "False"
            If this option is set to "True" then the current visable GraphicsWindow is used to create a bitmap.
            If this option is set to "False" then the visuals in the GraphicsWindow will be re-rendered to a bitmap.
            Default "False"
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.ExitOnClose">
      <summary>
            Set whether the SmallBasic program is ended when a GraphicsWindow is closed "True" (default) or "False".
            If set to false, the program must still have something running to continue.
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.CancelClose">
      <summary>
            Cancel the next GraphicsWindow Close operation "True" or "False" (default).
            Requires ExitOnClose to be set to "False".
            This should usually be set inside Closing event, possibly using LDDialogs.Confirm.
            It will be reset to "False" after a closure is prevented.
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.TopMost">
      <summary>
            Set the GraphicsWindow as the top most window.
            The window will remain above other windows even when other windows are in focus.
            "True" or "False".
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.FloodFillTolerance">
      <summary>
            A tolerance for FloodFill method (0 to 100).
            0 is default and only pixels of exactly the same colour are changed, 100 changes all pixels apart from new fill colour.
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.MouseX">
      <summary>
            Move the mouse to GraphicsWindow X coordinate.
            Set as well as get.
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.MouseY">
      <summary>
            Move the mouse to GraphicsWindow Y coordinate.
            Set as well as get.
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.MouseXOffset">
      <summary>
            Scaling of GraphicsWindow to Desktop coordinates.
            Mouse.X = MouseXOffset + MouseXScale * GraphicsWindow.MouseX.
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.MouseYOffset">
      <summary>
            Scaling of GraphicsWindow to Desktop coordinates.
            Mouse.Y = MouseYOffset + MouseYScale * GraphicsWindow.MouseY.
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.MouseXScale">
      <summary>
            Scaling of GraphicsWindow to Desktop coordinates.
            Mouse.X = MouseXOffset + MouseXScale * GraphicsWindow.MouseX.
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.MouseYScale">
      <summary>
            Scaling of GraphicsWindow to Desktop coordinates.
            Mouse.Y = MouseYOffset + MouseYScale * GraphicsWindow.MouseY.
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.RepositionedMouseX">
      <summary>
            The mouse X GraphicsWindow coordinate in a repositioned view (see Reposition).
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.RepositionedMouseY">
      <summary>
            The mouse GraphicsWindow Y coordinate in a repositioned view (see Reposition).
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.Resize">
      <summary>
            The GraphicsWindow resize mode (CanMinimize 0, CanResize 1, CanResizeWithGrip 2, NoResize 3).
            </summary>
    </member>
    <member name="P:LitDev.LDGraphicsWindow.ShowInTaskbar">
      <summary>
            Show or hide GraphicsWindow in taskbar ("True" or "False")
            </summary>
    </member>
    <member name="E:LitDev.LDGraphicsWindow.Closing">
      <summary>
            Event when a GraphicsWindow is closed.
            ExitOnClose must be set to "False" to use this event.
            If CancelClose is set to true, then the closure will be cancelled.
            </summary>
    </member>
    <member name="T:LitDev.LDSearch">
      <summary>
            Bing online search methods.
            Includes web, image, video, news and spelling suggestions.
            </summary>
    </member>
    <member name="M:LitDev.LDSearch.GetWeb(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Do a Bing search for Web sites.
            </summary>
      <param name="search">The search text.</param>
      <returns>An array (up to  50) of results, index url and value description.</returns>
    </member>
    <member name="M:LitDev.LDSearch.GetImage(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Do a Bing search for Web images.
            </summary>
      <param name="search">The search text.</param>
      <returns>An array of results, index url and value description.</returns>
    </member>
    <member name="M:LitDev.LDSearch.GetVideo(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Do a Bing search for Web videos.
            </summary>
      <param name="search">The search text.</param>
      <returns>An array of results, index url and value description.</returns>
    </member>
    <member name="M:LitDev.LDSearch.GetNews(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Do a Bing search for Web news.
            </summary>
      <param name="search">The search text.</param>
      <returns>An array of results, index url and value description.</returns>
    </member>
    <member name="M:LitDev.LDSearch.GetSpelling(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Do a Bing search for Web spelling or alternative search suggestions.
            </summary>
      <param name="search">The search text.</param>
      <returns>An array of spelling or alternative suggestions or "" if no suggestions found.</returns>
    </member>
    <member name="M:LitDev.LDSearch.GetProof(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Do a text spell check (proof).  This is for longer text with more detailed information like in Word.
            </summary>
      <param name="text">The text to proof.</param>
      <param name="mode">A mode "Proof" (default for longer text) or "Spell" (for short or single word checks).</param>
      <returns>An array of spelling and other suggestions or "" if no suggestions found.</returns>
    </member>
    <member name="P:LitDev.LDSearch.Count">
      <summary>
            The maximum number of web search results, default 50.
            </summary>
    </member>
    <member name="P:LitDev.LDSearch.Language">
      <summary>
            The language culture to use, default is current culture.
            es-AR,en-AU,de-AT,nl-BE,fr-BE,pt-BR,en-CA,fr-CA,es-CL,da-DK,fi-FI,fr-FR,de-DE,zh-HK,en-IN,en-ID,en-IE,it-IT,ja-JP,ko-KR,en-MY,es-MX,nl-NL,en-NZ,no-NO,zh-CN,pl-PL,pt-PT,en-PH,ru-RU,ar-SA,en-ZA,es-ES,sv-SE,fr-CH,de-CH,zh-TW,tr-TR,en-GB,en-US,es-US
            </summary>
    </member>
    <member name="T:LitDev.LDTranslate">
      <summary>
            Language translation methods.
            </summary>
    </member>
    <member name="M:LitDev.LDTranslate.Languages">
      <summary>
            Get an array of language codes and their language.
            The array indices are the required language codes for the Translate method.
            </summary>
      <returns>The 1D array of language codes and names.</returns>
    </member>
    <member name="M:LitDev.LDTranslate.Translate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Translate a text from one language to another.
            </summary>
      <param name="input">The text to translate.</param>
      <param name="languageFrom">The language code to translate from.</param>
      <param name="languageTo">The language code to translate to.</param>
      <returns>The translated text.</returns>
    </member>
    <member name="T:LitDev.LDStopwatch">
      <summary>
            Accurate system stopwatches.
            </summary>
    </member>
    <member name="M:LitDev.LDStopwatch.Add">
      <summary>
            Create a new stopwatch.
            </summary>
      <returns>The stopwatch name.</returns>
    </member>
    <member name="M:LitDev.LDStopwatch.Start(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Starts or resumes the current stopwatch.
            </summary>
      <param name="stopwatch">The stopwatch name.</param>
    </member>
    <member name="M:LitDev.LDStopwatch.Reset(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Stops the current stopwatch and resets the elapsed time to 0.
            </summary>
      <param name="stopwatch">The stopwatch name.</param>
    </member>
    <member name="M:LitDev.LDStopwatch.Restart(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Stops the current stopwatch, resets the elapsed time to 0 and restarts the stopwatch.
            </summary>
      <param name="stopwatch">The stopwatch name.</param>
    </member>
    <member name="M:LitDev.LDStopwatch.Stop(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Stops the current stopwatch.
            </summary>
      <param name="stopwatch">The stopwatch name.</param>
    </member>
    <member name="M:LitDev.LDStopwatch.ElapsedMilliseconds(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the total elapsed time measured in milliseconds.
            </summary>
      <param name="stopwatch">The stopwatch name.</param>
      <returns>Elapsed milliseconds.</returns>
    </member>
    <member name="M:LitDev.LDStopwatch.ElapsedTicks(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the total elapsed time measured in timer ticks for very short intervals.
            </summary>
      <param name="stopwatch">The stopwatch name.</param>
      <returns>Elapsed ticks.</returns>
    </member>
    <member name="M:LitDev.LDStopwatch.DelayUpTo(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Delay up to a maximum interval since the last time this is called.
            Useful in a game loop to maintain an even play speed.
            </summary>
      <param name="delay">The maximum delay in ms.</param>
    </member>
    <member name="P:LitDev.LDStopwatch.Frequency">
      <summary>
            Get the frequency of the stopwatch timer in ticks per second.
            This represents the finest resolution of time your hardware can measure with ElapsedTicks.
            </summary>
    </member>
    <member name="T:LitDev.LDZip">
      <summary>
            Zip file compression utilities.
            </summary>
    </member>
    <member name="M:LitDev.LDZip.Zip(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Compress files to a zip archive.
            </summary>
      <param name="zipFile">The zip archive file to create.</param>
      <param name="files">
            An array of files to append to the zip archive.
            A single file or directory may also be set.
            Any directories will be recursively added to the zip.
            Any white space in files or directories will be replaced with "_".
            </param>
      <returns>An error message or "".</returns>
    </member>
    <member name="M:LitDev.LDZip.Remove(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove a file (or directory with all sub files) from an existing zip archive.
            </summary>
      <param name="zipFile">The zip archive to remove a file from.</param>
      <param name="files">
            An array of files to remove from the zip archive.
            A single file or directory may also be deleted.
            Any directories will be recursively removed from the zip.
            </param>
      <returns>An error message or "".</returns>
    </member>
    <member name="M:LitDev.LDZip.UnZip(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Uncompress a zip archive.
            </summary>
      <param name="zipFile">The zip archive to uncompress.</param>
      <param name="directory">A directory to uncompress the files to (existing files will be overwritten).</param>
      <returns>An error message or "".</returns>
    </member>
    <member name="M:LitDev.LDZip.ZipList(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            List the files in a zip archive.
            </summary>
      <param name="zipFile">The zip archive.</param>
      <returns>An array of file names in the zip or an error message.</returns>
    </member>
    <member name="T:LitDev.LDRegex">
      <summary>
            Regex (regular expression) text manipulation utilities.
            </summary>
    </member>
    <member name="M:LitDev.LDRegex.Match(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Perform a regex match.
            </summary>
      <param name="input">The input string to perform the match on (unaltered).</param>
      <param name="pattern">The regex pattern string.</param>
      <param name="caseSensitive">If the regex match is case sensitive ("True" or "False").</param>
      <returns>An array of match values, indexed by the location index in the input (position).</returns>
    </member>
    <member name="M:LitDev.LDRegex.Replace(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Perform a regex find and replace.
            </summary>
      <param name="input">The input string to perform the replacement on (unaltered).</param>
      <param name="pattern">The regex pattern string.</param>
      <param name="replacement">The regex replacement string.</param>
      <param name="caseSensitive">If the regex replace is case sensitive ("True" or "False").</param>
      <returns>A modified version of the input string after the regex replace.</returns>
    </member>
    <member name="T:LitDev.LDWindows">
      <summary>
            Create additional GraphicsWindows.
            
            All variables are shared between windows (global scope).
            GraphicsWindow events must be registered for each window, but the event subroutine can be shared.
            All other events can be registered once as normal.
            All commands or methods apply to the current active window, set using CurrentID.
            The original or default GraphicsWindow has id 0.
            </summary>
    </member>
    <member name="M:LitDev.LDWindows.Create">
      <summary>
            Create a new GraphicsWindow.
            </summary>
      <returns>An id for the created window.</returns>
    </member>
    <member name="P:LitDev.LDWindows.CurrentID">
      <summary>
            Get or set the current window id.
            </summary>
    </member>
    <member name="P:LitDev.LDWindows.LastActivated">
      <summary>
            Last window activated.
            </summary>
    </member>
    <member name="P:LitDev.LDWindows.Active">
      <summary>
            Get or set the id of a window active state (top most).
            -1 if no active windows.
            </summary>
    </member>
    <member name="E:LitDev.LDWindows.Activated">
      <summary>
            Event when a window is activated.
            Use this event with care - not recommended for most cases.
            </summary>
    </member>
    <member name="T:LitDev.LDEmail">
      <summary>
            Email Methods.
            </summary>
    </member>
    <member name="M:LitDev.LDEmail.Send">
      <summary>
            Send an email.
            The default Smtp client is "smtp.gmail.com" and the default port is 587.  The following and other email clients may also work.
            "smtp.live.com" (Hotmail)
            "smtp.mail.yahoo.com"
            
            A minimum of the "From, Password and Recipient" properties must be set first.
            The "From" and "Password" properties should be your email credentials for the client.
            Additionally you should set the "Subject and Body" properties.
            The "Attachment" property may be optionally set to a full file path, "" for no attachment.
            
            No more than 1 email per minute can be sent.
            </summary>
      <returns>"" for success or an error message.</returns>
    </member>
    <member name="P:LitDev.LDEmail.Port">
      <summary>
            SMTP port (default 587).
            </summary>
    </member>
    <member name="P:LitDev.LDEmail.Server">
      <summary>
            SMTP server (default "smtp.gmail.com").
            </summary>
    </member>
    <member name="P:LitDev.LDEmail.From">
      <summary>
            From email address.
            </summary>
    </member>
    <member name="P:LitDev.LDEmail.Password">
      <summary>
            Email client password.
            </summary>
    </member>
    <member name="P:LitDev.LDEmail.Recipient">
      <summary>
            Recipient email address.
            </summary>
    </member>
    <member name="P:LitDev.LDEmail.Subject">
      <summary>
            Subject text.
            </summary>
    </member>
    <member name="P:LitDev.LDEmail.Body">
      <summary>
            Email body text.
            </summary>
    </member>
    <member name="P:LitDev.LDEmail.Attachment">
      <summary>
            Attachment file.
            </summary>
    </member>
    <member name="P:LitDev.LDEmail.UseSSL">
      <summary>
            "True" or "False" (default "True").
            </summary>
    </member>
    <member name="T:LitDev.LDImage">
      <summary>
            Provides methods to modify and image process images stored in ImageList.
            Any effect parameter can be defaulted to "".
            </summary>
    </member>
    <member name="M:LitDev.LDImage.SetPixel(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a pixel colour.
            </summary>
      <param name="image">The ImageList image.</param>
      <param name="x">The x pixel (indexed from 1).</param>
      <param name="y">The y pixel (indexed from 1).</param>
      <param name="colour">The colour to set the pixel.</param>
    </member>
    <member name="M:LitDev.LDImage.GetPixel(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a pixel colour.
            </summary>
      <param name="image">The ImageList image.</param>
      <param name="x">The x pixel (indexed from 1).</param>
      <param name="y">The y pixel (indexed from 1).</param>
      <returns>The pixel colour.</returns>
    </member>
    <member name="M:LitDev.LDImage.Save(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save an image from the ImageList as a jpg.
            </summary>
      <param name="image">The ImageList image to save.</param>
      <param name="fileName">The file to save the image as.</param>
    </member>
    <member name="M:LitDev.LDImage.SaveAs(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save an image from the ImageList in different formats set by the file extension.
            </summary>
      <param name="image">The ImageList image to save.</param>
      <param name="fileName">The file to save the image as.
            Accepted file type extensions include *.bmp, *.gif, *.jpg, *.png, *.tiff or *.ico.</param>
    </member>
    <member name="M:LitDev.LDImage.Remove(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove an image from the ImageList.
            </summary>
      <param name="image">The ImageList image to delete.</param>
    </member>
    <member name="M:LitDev.LDImage.Copy(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy an image from the ImageList.
            </summary>
      <param name="image">The ImageList image to copy.</param>
      <returns>A new ImageList image or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDImage.Resize(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Resize an image from the ImageList.
            </summary>
      <param name="image">The ImageList image to resize.</param>
      <param name="width">The width in pixels.</param>
      <param name="height">The height in pixels.</param>
    </member>
    <member name="M:LitDev.LDImage.Add(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add colour values to image.
            An image has pixels with R,G,B in the range 0 to 255.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="red">Red value to add.</param>
      <param name="green">Geen value to add.</param>
      <param name="blue">Blue value to add.</param>
    </member>
    <member name="M:LitDev.LDImage.Multiply(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Multiply colour values of image.
            An image has pixels with R,G,B in the range 0 to 255.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="red">Red value to multiply by.</param>
      <param name="green">Geen value to multiply by.</param>
      <param name="blue">Blue value to multiply by.</param>
    </member>
    <member name="M:LitDev.LDImage.Statistics(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the minimum, maximum, mean and STD for colour pixel values.
            </summary>
      <param name="image">The ImageList image.</param>
      <returns>An array of statistics values (0 to 255), indexed by "Min", "Max", "Mean", "STD" and 1,2,3 for R,G,B.</returns>
    </member>
    <member name="M:LitDev.LDImage.Histogram(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get histograms of colour pixel values.
            </summary>
      <param name="image">The ImageList image.</param>
      <returns>An array of colour histograms, indexed by 1,2,3 for R,G,B and 0 to 255.</returns>
    </member>
    <member name="M:LitDev.LDImage.AddImages(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add 2 images together.
            An image has pixels with R,G,B in the range 0 to 255.
            Both images must be the same dimension.
            </summary>
      <param name="image1">The first ImageList image to add.</param>
      <param name="image2">The second ImageList image to add.</param>
      <returns>A new ImageList image with the result or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDImage.DifferenceImages(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Difference 2 images.
            An image has pixels with R,G,B in the range 0 to 255.
            Both images must be the same dimension.
            </summary>
      <param name="image1">The first ImageList image to difference.</param>
      <param name="image2">The second ImageList image to difference.</param>
      <returns>A new ImageList image with the result or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDImage.Crop(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Crop an image from the ImageList.
            The crop region must be entirely within the target image.
            </summary>
      <param name="image">The ImageList image to crop.</param>
      <param name="x">The left position of the cropped image in pixels (indexed from 0).</param>
      <param name="y">The top position of the cropped image in pixels (indexed from 0).</param>
      <param name="width">The width of the cropped image in pixels.</param>
      <param name="height">The height of the cropped image in pixels.</param>
    </member>
    <member name="M:LitDev.LDImage.ColorMatrix(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Performs a colour matrix transformation on an image.
            This can be used for all sorts of colour transformations.
            See http://msdn.microsoft.com/en-us/library/a7xw19wh%28v=vs.110%29.aspx.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="matrix">A 5*5 2D matrix.
            Sepia Example:
            matrix[1] = "1=0.393;2=0.349;3=0.272;4=0;5=0"
            matrix[2] = "1=0.769;2=0.686;3=0.534;4=0;5=0"
            matrix[3] = "1=0.189;2=0.168;3=0.131;4=0;5=0"
            matrix[4] = "1=0;2=0;3=0;4=1;5=0"
            matrix[5] = "1=0;2=0;3=0;4=0;5=1"
            </param>
    </member>
    <member name="M:LitDev.LDImage.Rotate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rotate an image.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="angle">The angle to rotate the image clockwise by in degrees.</param>
    </member>
    <member name="M:LitDev.LDImage.GetEffects">
      <summary>
            Get an array of the available image and webcam effects.
            </summary>
      <returns>An array of effects, indexed by the effect number.</returns>
    </member>
    <member name="M:LitDev.LDImage.EffectRed(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to red colour.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectGreen(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to green colour.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectBlue(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to blue colour.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectGray(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to gray scale.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectInverse(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to inverse colour.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectYellow(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to yellow colour.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectCyan(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to cyan colour.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectMagenta(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to magenta colour.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectSnow(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to snow effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="level">1 in level pixels are randomly snow (default 25).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectFuzzy(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to fuzzy effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="size">Pixel region to make fuzzy (default 4).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectContrast(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to high contrast effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="contrast">Contrast factor (default 2), less than 1 reduces contrast.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectBlocks(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to block effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="size">Blocking size factor (default 5).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectReflect(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to X or Y reflection effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="flip">0 to flip X and 1 to flip Y (default 0).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectJagged(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to jagged effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="size">Pixel region size to make jagged (default 4).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectRotate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to 90 degree rotation effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="rotation">0 for +90, 1 for 180 and 2 for 270(-90) degree rotation (default 0).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectPixelate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to pixelate effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="size">Pixelating size factor (default 16).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectGamma(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to gamma effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="gamma">Gamma factor, values less than 1 lighten and greater than 1 darken (default 2).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectFishEye(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to fisheye effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="factor">FishEye factor, should be greater than 1 (default 2).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectBulge(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to bulge effect (similar to FishEye).
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="factor">Bulge factor, may be less than 1 for pinch effect (default 2).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectSwirl(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to swirl effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="factor">Swirl factor (default 1).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectPosterise(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to posterise effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="level">Posterise level (default 50).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectHue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to modify Hue.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="hue">Hue shift (0 to 360, default 180).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectSaturation(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to modify Saturation.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="saturation">Saturation multiplier (default 2).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectLightness(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to modify Lightness.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="lightness">Lightness multiplier (default 2).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectOilPaint(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to oil paint effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="radius">Oil paint radius (odd number, default 7).</param>
      <param name="levels">Oil paint levels (default 20).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectCharcoal(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to charcoal effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectSketch(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to pen sketch effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectCartoon(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to cartoon effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="radius">Cartoon radius (odd number, default 7).</param>
      <param name="levels">Cartoon levels (default 10).</param>
      <param name="inverse">Cartoon inverse threshold (default 40).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectEdge(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to Prewitt edge effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectAccent(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to colour accent effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="hue">Accent Hue (0 o 360, default 0 (red)).</param>
      <param name="range">Accent range (default 40).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectSepia(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to sepia effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="threshold">Sepia threshold (default 30).</param>
    </member>
    <member name="M:LitDev.LDImage.EffectNoiseRemoval(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to noise removal effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
    </member>
    <member name="M:LitDev.LDImage.EffectSolarise(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Converts to solarise effect.
            </summary>
      <param name="image">The ImageList image to modify.</param>
      <param name="power">Solarise power (default 2, quadratic).</param>
    </member>
    <member name="M:LitDev.LDImage.LoadSVG(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Load an SVG file as an ImageList image.
            </summary>
      <param name="fileName">The SVG file.</param>
      <returns>The ImageList image.</returns>
    </member>
    <member name="M:LitDev.LDImage.SplitImage(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Creates an array of subdivided images from an input image.
            </summary>
      <param name="imageName">
            The image file (local or network) to load.
            Can also be an ImageList image.
            </param>
      <param name="countX">
            The number of sub-images in the X direction.
            </param>
      <param name="countY">
            The number of sub-images in the Y direction.
            </param>
      <returns>
            A 2D array of resulting images saved in ImageList.
            </returns>
    </member>
    <member name="M:LitDev.LDImage.NewImage(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a new single colored 32bitARGB image in ImageList.
            </summary>
      <param name="width">The width of the new image.</param>
      <param name="height">The height of the new image.</param>
      <param name="colour">The colour of the new image.</param>
      <returns>The Name of the new created ImageList image on success, else "".</returns>
    </member>
    <member name="M:LitDev.LDImage.GetImagePixels(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a 2D array filled with all the pixels in an image.
            </summary>
      <param name="image">The ImageList image.</param>
      <returns>An array of hex based image pixel colours indexed by [x][y].</returns>
    </member>
    <member name="M:LitDev.LDImage.SetImagePixels(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a new image from a 2D array of pixel colour values - see GetImagePixels for format of pixels.
            </summary>
      <param name="pixels">An array of hex based image pixel colours indexed by [x][y].</param>
      <returns>An ImageList image created from the pixels.</returns>
    </member>
    <member name="M:LitDev.LDImage.OpenWorkingImage(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Open a temporary working image for fast pixel level manipulation.
            After the temporary working image is finished with it should be set to the image using CloseWorkingImage.
            </summary>
      <param name="image">The ImageList image to open as a temporary working image.</param>
    </member>
    <member name="M:LitDev.LDImage.CloseWorkingImage(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Close and reset the image from a temporary working image.
            </summary>
      <param name="image">The working image, previously opened with OpenWorkingImage.</param>
    </member>
    <member name="M:LitDev.LDImage.GetWorkingImagePixel(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the colour of a pixel from a temporary working image.
            </summary>
      <param name="image">The working image, previously opened with OpenWorkingImage.</param>
      <param name="x">The x pixel coordinate (indexed from 1).</param>
      <param name="y">The y pixel coordinate (indexed from 1).</param>
      <returns>The pixel colour or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDImage.GetWorkingImagePixelARGB(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the colour of a pixel from a temporary working image.
            </summary>
      <param name="image">The working image, previously opened with OpenWorkingImage.</param>
      <param name="x">The x pixel coordinate (indexed from 1).</param>
      <param name="y">The y pixel coordinate (indexed from 1).</param>
      <returns>The pixel colour, an array of A,R,G,B components indexed by "A", "R", "G", "B" or "" on failure.</returns>
    </member>
    <member name="M:LitDev.LDImage.SetWorkingImagePixel(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the colour of a pixel in a temporary working image.
            </summary>
      <param name="image">The working image, previously opened with OpenWorkingImage.</param>
      <param name="x">The x pixel coordinate (indexed from 1).</param>
      <param name="y">The y pixel coordinate (indexed from 1).</param>
      <param name="colour">The colour to set the pixel to.</param>
    </member>
    <member name="M:LitDev.LDImage.MetaData(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of image metadata.
            </summary>
      <param name="imageFile">The image file (not an ImageList image).</param>
      <returns>An array of metadata values indexed by hex id (Use quotes for indices with a to f in the hex values).
            See https://msdn.microsoft.com/en-us/library/System.Drawing.Imaging.propertyitem.id%28v=vs.110%29.aspx for a list of ids.</returns>
    </member>
    <member name="M:LitDev.LDImage.AddText(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Annotate an image with text, using current GraphicsWindow font.
            </summary>
      <param name="imageName">
            An existing ImageList image.
            </param>
      <param name="text">The text to add</param>
      <param name="x">The left position of the text.</param>
      <param name="y">The Top position of the text.</param>
      <param name="colour">
            The text colour.
            </param>
    </member>
    <member name="M:LitDev.LDImage.NormalMap(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Modify an image to show a gray scale (or modified image if texture is set) shadow effect based on a normal map image.
            </summary>
      <param name="shapeName">An image shape normal map (R,G,B colours represent normal vecors of a 3D image).
            This is an image shape created using Shapes.AddImage containing the normal map image.</param>
      <param name="sourceX">The x position of a light source relative to the image.</param>
      <param name="sourceY">The y position of a light source relative to the image.</param>
      <param name="sourceZ">The z position of a light source relative to the image, this is the height abouve the image.
            This can be used to alter the effective contrast of the shadow effect.</param>
      <param name="texture">An optional ImageList image or "" with texture (colour) to modify, it should be the same dimensions as the normal map image.
            The texture image may be changed on subsequent calls.</param>
      <param name="ambient">Optional ambient light intensity if texture is set (default 0.3).</param>
      <param name="intensity">Optional light intensity if texture is set (default 2).</param>
    </member>
    <member name="M:LitDev.LDImage.HeightMap2NormalMap(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a normal map image from a height map.  The height is given by the brightness of each pixel.
            </summary>
      <param name="image">The height map ImageList image.</param>
      <param name="scale">A scale factor for the elevation (default 1).</param>
      <returns>A new ImageList image with the resulting normal map.</returns>
    </member>
    <member name="M:LitDev.LDImage.MakeTransparent(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Modify an ImageList image to make a selected colour transparent.
            </summary>
      <param name="image">The ImageList image.</param>
      <param name="colour">The colour to make transparent.</param>
    </member>
    <member name="M:LitDev.LDImage.ReplaceColour(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Replace one colour in an ImageList image with another.
            </summary>
      <param name="image">The ImageList image.</param>
      <param name="colourFrom">The colour to replace.</param>
      <param name="colourTo">The replacement colour to apply.</param>
      <param name="tolerance">A tolerance for the colour to match (default 0 - exact match).
            ARGB pixel values all within the tolerance will be replaced.</param>
    </member>
    <member name="M:LitDev.LDImage.To32bitARGB(Microsoft.SmallBasic.Library.Primitive)">
      <summary>Converts an ImageList image to Format ARGB (Alphachannel with 32bit/Pxl) if needed.</summary>
      <param name="image">The ImageList image.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="P:LitDev.LDImage.EffectDefaults">
      <summary>
            Get or set an array of default effect parameters.
            </summary>
    </member>
    <member name="P:LitDev.LDImage.UseFastPixelMethods">
      <summary>
            Use a fast pixel manipulation method (default "True").
            This method can be turned off using this property.
            </summary>
    </member>
    <member name="T:LitDev.LDWeather">
      <summary>
            Get local weather conditions.
            </summary>
    </member>
    <member name="M:LitDev.LDWeather.Forecast(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get weather conditions for a location.
            This must be called before current condition details can be obtained.
            </summary>
      <param name="location">A location, could be a town/city or zip/postcode.</param>
      <returns>An array containing a 4 day forecast or "FAILED".</returns>
    </member>
    <member name="P:LitDev.LDWeather.Location">
      <summary>
            Current location.
            </summary>
    </member>
    <member name="P:LitDev.LDWeather.Conditions">
      <summary>
            Current conditions.
            </summary>
    </member>
    <member name="P:LitDev.LDWeather.TempC">
      <summary>
            Current temperature (Celcius).
            </summary>
    </member>
    <member name="P:LitDev.LDWeather.TempF">
      <summary>
            Current temperature (Farenheight).
            </summary>
    </member>
    <member name="P:LitDev.LDWeather.Humidity">
      <summary>
            Current humidity (%)
            </summary>
    </member>
    <member name="P:LitDev.LDWeather.WindDirection">
      <summary>
            Current wind direction.
            </summary>
    </member>
    <member name="P:LitDev.LDWeather.WindSpeed">
      <summary>
            Current wind speed (mph).
            </summary>
    </member>
    <member name="F:LitDev.FormMatrix.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:LitDev.FormMatrix.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:LitDev.FormMatrix.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="T:LitDev.LDMatrix">
      <summary>
            A 2-Dimensional matrix structure that can be used to solve linear equations or other methods.
            An error will result in a return value "FAILED";
            </summary>
    </member>
    <member name="M:LitDev.LDMatrix.Create(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a matrix object.
            Row and column matrices can be defined with rows = 1 or cols = 1 respectively.
            </summary>
      <param name="rows">The number of rows.</param>
      <param name="cols">The number of columns.</param>
      <returns>The matrix or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDMatrix.Delete(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Delete an existing matrix (not generally required, but can save memory if lots of matrices are created).
            </summary>
      <param name="matrix">
            The matrix name.
            </param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDMatrix.SetValue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set value in matrix.
            </summary>
      <param name="matrix">
            The matrix name.
            </param>
      <param name="row">
            The row at which to add the value (indexed starting from 1).
            </param>
      <param name="col">
            The column at which to add the value (indexed starting from 1).
            </param>
      <param name="value">
            The value.
            </param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDMatrix.GetValue(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get value in matrix.
            </summary>
      <param name="matrix">
            The matrix name.
            </param>
      <param name="row">
            The row at which to get the value (indexed starting from 1).
            </param>
      <param name="col">
            The column at which to get the value (indexed starting from 1).
            </param>
      <returns>
            The value or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDMatrix.CopyNew(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy one matrix to a new matrix.
            </summary>
      <param name="matrix">
            The matrix to copy.
            </param>
      <returns>
            A copy of the matrix or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDMatrix.Copy(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy one matrix to an existing matrix.
            The dimensions of the 2 matrices must be the same.
            </summary>
      <param name="matrix1">
            The matrix to copy from.
            </param>
      <param name="matrix2">
            The matrix to copy to.
            </param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDMatrix.Add(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add two matrices, the number of rows and columns of the 3 matrices given must be the same.
            Alternatively, if the second matrix is a scalar number then it is added to each element of the first matrix.
            </summary>
      <param name="matrix1">The first matrix.</param>
      <param name="matrix2">The second matrix (or scalar value).</param>
      <param name="result">The result matrix.</param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDMatrix.Multiply(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Multiply two matrices, the number of columns of the first and rows of the second matrix must be the same.
            The number of rows and columns of the result matrix must be the rows of the first and columns of the second.
            Alternatively, if the second matrix is a scalar number then it is multiplied by each element of the first matrix and the dimensions of the first and result must be the same.
            </summary>
      <param name="matrix1">The first matrix.</param>
      <param name="matrix2">The second matrix (or scalar value).</param>
      <param name="result">The result matrix.</param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDMatrix.Inverse(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Calculate the inverse of a matrix (using Gaussian Elimination).
            The number of rows and columns of the matrix and inverse must be the same (square matrices).
            A singular matrix returns "SINGULAR" and the inverse matrix will be incorrect.
            </summary>
      <param name="matrix">The matrix to invert (unmodified by inversion).</param>
      <param name="inverse">The inverse matrix.</param>
      <returns>
            "FAILED" or "SINGULAR" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDMatrix.Transpose(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Calculate the transpose of a matrix.
            The number of rows and columns of the matrix and transpose must be reversed (cols = rows and vice versa).
            </summary>
      <param name="matrix">The matrix to transpose.</param>
      <param name="transpose">The resulting transposed matrix.</param>
      <returns>
            "FAILED" or "" for success.
            </returns>
    </member>
    <member name="M:LitDev.LDMatrix.View(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            View a matrix for dubugging purposes.
            </summary>
      <param name="matrix">The matrix to display.</param>
      <param name="modal">The matrix display will pause all other actions until it is closed. ("True" or "False").</param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDMatrix.CopyToSBArray(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Copy LDMatrix type to SmallBasic array type.
            
            The reverse operation (SmallBasic to LDMatrix) isn't possible becuase the SmallBasic indexes are not necessarily contiguous integers.
            </summary>
      <param name="matrix">
            The matrix name.
            </param>
      <returns>
            The SmallBasic array or "FAILED".
            </returns>
    </member>
    <member name="T:LitDev.LDMusic">
      <summary>
            Extends the Sound.PlayMusic method to include a variety of instrument sounds.
            Also, multi-channel music can be created.
            </summary>
    </member>
    <member name="M:LitDev.LDMusic.PlayMusic(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Plays musical notes.
            </summary>
      <param name="notes">
            A set of musical notes to play.  The format is a subset of the Music Markup Language supported by QBasic.
            </param>
      <example>
        <code>
            LDMusic.Instrument = LDMusic.Xylophone
            LDMusic.PlayMusic("O5 C8 C8 G8 G8 A8 A8 G4 F8 F8 E8 E8 D8 D8 C2")
            </code>
      </example>
    </member>
    <member name="M:LitDev.LDMusic.PlayMusic2(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Plays musical notes with specified instrument and MDI channel.
            Also set volume, pan (balance) and velocity (key hit speed).
            </summary>
      <param name="notes">
            A set of musical notes to play.  The format is a subset of the Music Markup Language supported by QBasic.
            </param>
      <param name="instrument"> The instrument number.</param>
      <param name="velocity"> The key velocity (1 to 128, default 100).</param>
      <param name="volume"> Volume (0 to 100, default 50).</param>
      <param name="pan"> Pan left (-100) or right (100) (default 0).</param>
      <param name="channel">The MIDI channel (1 to 16).</param>
    </member>
    <member name="M:LitDev.LDMusic.PlayNote(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Play an individual note (allows multi-channel instruments).
            </summary>
      <param name="octave">The octave (0 to 8).</param>
      <param name="note">The note ("A","F#","B-" etc).</param>
      <param name="channel">The MIDI channel (1 to 16).</param>
      <returns>The note value being played.</returns>
    </member>
    <member name="M:LitDev.LDMusic.EndNote(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Stop a note being played.
            </summary>
      <param name="value">The note to stop (this is the value returned by PlayNote when the note was started).</param>
    </member>
    <member name="M:LitDev.LDMusic.Reset">
      <summary>
            Reset (stop all music on all channels).
            </summary>
    </member>
    <member name="M:LitDev.LDMusic.InstrumentName(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an instrument name from its number.
            </summary>
      <param name="instrument">The instrument number.</param>
      <returns>
      </returns>
    </member>
    <member name="P:LitDev.LDMusic.Instrument">
      <summary>
            Set the musical instrument (1 to 128).
            1	Acoustic_Grand_Piano
            2	Bright_Acoustic_Piano
            3	Electric_Grand_Piano
            4	Honky_tonk_Piano
            5	Electric_Piano_1
            6	Electric_Piano_2
            7	Harpsichord
            8	Clavi
            9	Celesta
            10	Glockenspiel
            11	Music_Box
            12	Vibraphone
            13	Marimba
            14	Xylophone
            15	Tubular_Bells
            16	Dulcimer
            17	Drawbar_Organ
            18	Percussive_Organ
            19	Rock_Organ
            20	Church_Organ
            21	Reed_Organ
            22	Accordion
            23	Harmonica
            24	Tango_Accordion
            25	Acoustic_Guitar_nylon
            26	Acoustic_Guitar_steel
            27	Electric_Guitar_jazz
            28	Electric_Guitar_clean
            29	Electric_Guitar_muted
            30	Overdriven_Guitar
            31	Distortion_Guitar
            32	Guitar_harmonics
            33	Acoustic_Bass
            34	Electric_Bass_finger
            35	Electric_Bass_pick
            36	Fretless_Bass
            37	Slap_Bass_1
            38	Slap_Bass_2
            39	Synth_Bass_1
            40	Synth_Bass_2
            41	Violin
            42	Viola
            43	Cello
            44	Contrabass
            45	Tremolo_Strings
            46	Pizzicato_Strings
            47	Orchestral_Harp
            48	Timpani
            49	String_Ensemble_1
            50	String_Ensemble_2
            51	SynthStrings_1
            52	SynthStrings_2
            53	Choir_Aahs
            54	Voice_Oohs
            55	Synth_Voice
            56	Orchestra_Hit
            57	Trumpet
            58	Trombone
            59	Tuba
            60	Muted_Trumpet
            61	French_Horn
            62	Brass_Section
            63	SynthBrass_1
            64	SynthBrass_2
            65	Soprano_Sax
            66	Alto_Sax
            67	Tenor_Sax
            68	Baritone_Sax
            69	Oboe
            70	English_Horn
            71	Bassoon
            72	Clarinet
            73	Piccolo
            74	Flute
            75	Recorder
            76	Pan_Flute
            77	Blown_Bottle
            78	Shakuhachi
            79	Whistle
            80	Ocarina
            81	Lead_1_square
            82	Lead_2_sawtooth
            83	Lead_3_calliope
            84	Lead_4_chiff
            85	Lead_5_charang
            86	Lead_6_voice
            87	Lead_7_fifths
            88	Lead_8_bass_lead
            89	Pad_1_new_age
            90	Pad_2_warm
            91	Pad_3_polysynth
            92	Pad_4_choir
            93	Pad_5_bowed
            94	Pad_6_metallic
            95	Pad_7_halo
            96	Pad_8_sweep
            97	FX_1_rain
            98	FX_2_soundtrack
            99	FX_3_crystal
            100	FX_4_atmosphere
            101	FX_5_brightness
            102	FX_6_goblins
            103	FX_7_echoes
            104	FX_8_sci_fi
            105	Sitar
            106	Banjo
            107	Shamisen
            108	Koto
            109	Kalimba
            110	Bag_pipe
            111	Fiddle
            112	Shanai
            113	Tinkle_Bell
            114	Agogo
            115	Steel_Drums
            116	Woodblock
            117	Taiko_Drum
            118	Melodic_Tom
            119	Synth_Drum
            120	Reverse_Cymbal
            121	Guitar_Fret_Noise
            122	Breath_Noise
            123	Seashore
            124	Bird_Tweet
            125	Telephone_Ring
            126	Helicopter
            127	Applause
            128	Gunshot
            </summary>
    </member>
    <member name="P:LitDev.LDMusic.Velocity">
      <summary>
            Set the key velocity (1 to 128).
            This is how hard a key was pressed (default 100).
            </summary>
    </member>
    <member name="P:LitDev.LDMusic.Channel">
      <summary>
            Set the MIDI channel (1 to 16, default 1).
            Used by PlayMusic, Instrument and Velocity.
            </summary>
    </member>
    <member name="T:LitDev.LDWebCam">
      <summary>
            Provides access to a webcam.
            </summary>
    </member>
    <member name="M:LitDev.LDWebCam.Start(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Start a webcam display object (SmallBasic shape).  If this is called more than once, multiple copies af the same webcam image are be generated.
            
            This object can be moved, zommed, rotated etc using the standard Shapes methods.
            
            Maximum resolution usually at 640 x 480 pixels, smaller may be faster.
            </summary>
      <param name="width">The width of the webcam display object.</param>
      <param name="height">The height of the webcam display object.</param>
      <returns>The name of the webcam display object.</returns>
    </member>
    <member name="M:LitDev.LDWebCam.End">
      <summary>
            End the webcam display, call this before removing the webcam shape.
            </summary>
    </member>
    <member name="M:LitDev.LDWebCam.Snapshot">
      <summary>
            Take a snapshot and save it as a jpg with a SaveAs dialog.
            </summary>
    </member>
    <member name="M:LitDev.LDWebCam.SnapshotToFile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Take a snapshot and save it to a file.
            </summary>
      <param name="fileName">File to save jpg snapshot to.</param>
    </member>
    <member name="M:LitDev.LDWebCam.SnapshotToImageList">
      <summary>
            Take a snapshot and save it to the ImageList (memory loaded image).
            </summary>
      <returns>Returns the name of the image that was loaded.</returns>
    </member>
    <member name="M:LitDev.LDWebCam.Pause">
      <summary>
            Pause the webcam updates.
            </summary>
    </member>
    <member name="M:LitDev.LDWebCam.Resume">
      <summary>
            Resume the webcam updates.
            </summary>
    </member>
    <member name="P:LitDev.LDWebCam.PreWin8Mode">
      <summary>
            Use pre-Windows 8 method.
            "True" or "False" (default).
            </summary>
    </member>
    <member name="P:LitDev.LDWebCam.Interval">
      <summary>
            The webcam update minimim delay between updates in ms (default 20).
            It will in practice be larger in many cases, especialyy with effects set.
            </summary>
    </member>
    <member name="P:LitDev.LDWebCam.Effect">
      <summary>
            The current effect.
            Can be set using the Effect properties.
            (e.g. LDWebCam.Effect = LDWebCam.EffectGray).
            </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectNone">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectRed">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectGreen">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectBlue">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectGray">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectInverse">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectYellow">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectCyan">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectMagenta">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectSnow">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectFuzzy">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectContrast">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectBlocks">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectReflect">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectJagged">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectRotate">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectPixelate">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectGamma">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectFishEye">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectBulge">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectSwirl">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectPosterise">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectHue">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectSaturation">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectLightness">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectOilPaint">
      <summary>
      </summary>
    </member>
    <member name="P:LitDev.LDWebCam.EffectParameter">
      <summary>
            Effect parameter - see LDImage effects for the parameter values for effects.
            </summary>
    </member>
    <member name="T:LitDev.LDDebug">
      <summary>
            Debugging utilities.
            </summary>
    </member>
    <member name="M:LitDev.LDDebug.Start">
      <summary>
            Start a debugging session, usually do this as the first line of your program.
            
            Usually you would either set break points manually in your code before running (LDDebug.Break) or auto add breakpoints (LDDebug.Instrument).
            </summary>
    </member>
    <member name="M:LitDev.LDDebug.Instrument(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a SmallBasic file (_debug.sb) with break points auto added for each line.
            
            Just open and run the new instrumented file to debug it.  
            When a problem is found, correct it in your original and re-instrument to debug the corrected file.
            </summary>
      <param name="fileName">The Smallbasic file (*.sb) to instrument.</param>
    </member>
    <member name="M:LitDev.LDDebug.Break(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a break point, where the program will pause and variable values can be viewed.
            </summary>
      <param name="label">An identification label for the breakpoint.
            A unique label should be chosen for each breakpoint defined.
            There are some known limitations with breakpoints inside event subroutines.</param>
    </member>
    <member name="T:LitDev.LDDialogs">
      <summary>
            Dialogs and popups.
            </summary>
    </member>
    <member name="M:LitDev.LDDialogs.SetStartupPosition(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the startup coordinates (top left) for most dialoges.  This should be set before the dialog is called.
            </summary>
      <param name="x">The X coordinate.</param>
      <param name="y">The X coordinate.</param>
      <param name="mode">The mode which is one of the following
            0 : Off (default)
            1 : The coordinates are relative to the graphics window, equivalent to GraphicsWindow.MouseX/Y.
            2 : The coordinates are relative to the display window, equivalent to Desktop.MouseX/Y</param>
    </member>
    <member name="M:LitDev.LDDialogs.Wait(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a waiting popup window with a text message.
            </summary>
      <param name="text">The text to display in the popup window.</param>
      <param name="colour">The colour of the popup window border, may be "" for default.</param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDDialogs.EndWait">
      <summary>
            Close the waiting popup window.
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDDialogs.ToolTip(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a tooltip popup for common shapes and controls.
            </summary>
      <param name="shapeName">The shape or control.</param>
      <param name="tip">The text content of the tooltip.</param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDDialogs.Calendar(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            A popup calendar date chooser - double click a date or press return to select a date.
            </summary>
      <param name="start">The initial date in the control, may be "" for today.</param>
      <returns>The selected date.</returns>
    </member>
    <member name="M:LitDev.LDDialogs.OpenFile(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Open File Dialogue (get an existing file).
            </summary>
      <param name="extension">
            The file type extension, e.g. "sb".
            This may also be an array of extension types such as "1=png;2=jpg;".
            If the extension contains a "|" character then it will be used directly such as "Images|*.bmp;*.jpg;*.gif;*.png|All files (*.*)|*.*".
            </param>
      <param name="folder">
            The initial folder to open dialog with, can be "".
            </param>
      <returns>The full path of the file.</returns>
    </member>
    <member name="M:LitDev.LDDialogs.SaveFile(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save File Dialogue (get a new file).
            </summary>
      <param name="extension">
            The file type extension, e.g. "sb".
            This may also be an array of extension types such as "1=png;2=jpg;".
            If the extension contains a "|" character then it will be used directly such as "Images|*.bmp;*.jpg;*.gif;*.png|All files (*.*)|*.*".
            </param>
      <param name="folder">
            The initial folder to open dialog with, can be "".
            </param>
      <returns>The full path of the file.</returns>
    </member>
    <member name="M:LitDev.LDDialogs.GetFolder(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            A Dialog to get a folder (directory).
            </summary>
      <param name="InitialFolder">The initial folder or "" for the last folder selected.</param>
      <returns>The full path to the selected folder or "" if none is selected.</returns>
    </member>
    <member name="M:LitDev.LDDialogs.Font(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Use the font dialog to select a font.
            </summary>
      <param name="font">
            An array with the initial font selected.
            It has the same format as the return array, and can be an empty array "".
            </param>
      <returns>An array with the font properties.
            result[1] is Font name
            result[2] is Font size
            result[3] is Font bold ("True" or "False")
            result[4] is Font italic ("True" or "False")
            </returns>
    </member>
    <member name="M:LitDev.LDDialogs.Colour">
      <summary>
            Choose a colour from a dialog.
            </summary>
      <returns>
            The chosen colour.
            </returns>
    </member>
    <member name="M:LitDev.LDDialogs.AddRightClickMenu(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a right click context menu for the GraphicsWindow.
            </summary>
      <param name="items">An array of context menu item selection texts.</param>
      <param name="images">Optional array of image icons, any or all may be "".
            They may be the result of ImageList.LoadImage or local or network image file.</param>
    </member>
    <member name="M:LitDev.LDDialogs.Confirm(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            A message dialog with Yes, No and Cancel options.
            </summary>
      <param name="text">Text question for the dialog.</param>
      <param name="title">Title for the dialog.</param>
      <returns>"Yes", "No" or "Cancel"</returns>
    </member>
    <member name="P:LitDev.LDDialogs.LastRightClickMenuItem">
      <summary>
            The index of the last right click context menu item selected.
            </summary>
    </member>
    <member name="E:LitDev.LDDialogs.RightClickMenu">
      <summary>
            Event when a right click context menu item is selected.
            </summary>
    </member>
    <member name="F:LitDev.FormWait.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:LitDev.FormWait.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:LitDev.FormWait.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="T:LitDev.LDStatistics">
      <summary>
            Performs statistics on a 1D array of data.
            </summary>
    </member>
    <member name="M:LitDev.LDStatistics.SetArray(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a 1D array of numbers to perform some statistics on.
            
            This command must be called before any statistics are calculated.
            </summary>
      <param name="array">
            The array to perform statistics on.
            </param>
      <returns>
            An array of the data sorted.
            </returns>
    </member>
    <member name="M:LitDev.LDStatistics.DistNormal(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create an array with a Normal distribution.
            </summary>
      <param name="distMean">The mean of the distribution.</param>
      <param name="distSTD">The standard deviation of the distribution.</param>
      <param name="size">The number of points.</param>
      <returns>A 1D array of the Normal distribution (Array[x] = y).</returns>
    </member>
    <member name="M:LitDev.LDStatistics.DistBinomial(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create an array with a Binomial distribution.
            
            This is like the probablity of getting k heads from 20 (n) coin tosses, with a probablity for each toss getting a heads of 0.5 (p).
            </summary>
      <param name="n">The number of tries.</param>
      <param name="p">The probablity of success for each try.</param>
      <returns>A 1D array of the Binomial distribution, probablity of k successes (Array[k] = y).</returns>
    </member>
    <member name="M:LitDev.LDStatistics.DistUniform(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create an array with a Uniform distribution.
            </summary>
      <param name="rangeMin">The minimum value.</param>
      <param name="rangeMax">The maximum value.</param>
      <param name="size">The number of points.</param>
      <returns>A 1D array of the Uniform distribution (Array[x] = y).</returns>
    </member>
    <member name="M:LitDev.LDStatistics.DistTriangular(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create an array with a Triangular distribution.
            </summary>
      <param name="rangeMin">The minimum value.</param>
      <param name="rangeMax">The maximum value.</param>
      <param name="size">The number of points.</param>
      <returns>A 1D array of the Triangular distribution (Array[x] = y).</returns>
    </member>
    <member name="M:LitDev.LDStatistics.Integrate(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Calculate the integral of a 1D data array.
            </summary>
      <param name="array">The array to integrate (array[x]=y).</param>
      <returns>A 1D array of the Integral of the input array.</returns>
    </member>
    <member name="M:LitDev.LDStatistics.Differentiate(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Calculate the derivative of a 1D data array.
            </summary>
      <param name="array">The array to differentiate (array[x]=y).</param>
      <returns>A 1D array of the Derivative of the input array.</returns>
    </member>
    <member name="M:LitDev.LDStatistics.InterpolateY(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Interpolate a 1D data array to find the value of y(x).
            
            The values of x should be monotonically increasing.
            </summary>
      <param name="array">The array to interpolate (array[x]=y).</param>
      <param name="x">The value of x (may be an array of x values).</param>
      <returns>The interpolated value y or an array of y values.</returns>
    </member>
    <member name="M:LitDev.LDStatistics.InterpolateX(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Interpolate a 1D data array to find the value of x(y).
            
            The values of y should be monotonically increasing with x.
            </summary>
      <param name="array">The array to interpolate (array[x]=y).</param>
      <param name="y">The value of y (may be an array of y values).</param>
      <returns>The interpolated value x or an array of x values.</returns>
    </member>
    <member name="M:LitDev.LDStatistics.Frequency(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Calculate a frequency distribution from array of data.
            </summary>
      <param name="array">The array to create the frequency distribution from.</param>
      <param name="bins">The number of bins spanning the data.</param>
      <param name="normalised">Is the frequency normalised to integrate to 1 ("True" or "False").</param>
      <returns>Frequency distribution as an array (array[bin]=frequency).</returns>
    </member>
    <member name="P:LitDev.LDStatistics.Sum">
      <summary>
            The sum of data points.
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.Sum2">
      <summary>
            The sum of the squares of the data points.
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.Count">
      <summary>
            The number of data points.
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.Mean">
      <summary>
            The arithmetic mean of the data points.
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.HarmonicMean">
      <summary>
            The harmonic mean of the data points (all points &gt; 0).
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.GeometricMean">
      <summary>
            The geometric mean of the data points (all points &gt; 0).
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.SDev">
      <summary>
            The standard deviation of the data points.
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.PDev">
      <summary>
            The population deviation of the data points.
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.Median">
      <summary>
            The median of the data points.
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.Min">
      <summary>
            The minimum value of the data points.
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.Max">
      <summary>
            The maximum value of the data points.
            </summary>
    </member>
    <member name="P:LitDev.LDStatistics.Mode">
      <summary>
            The mode of the data points.
            </summary>
    </member>
    <member name="T:LitDev.LDSort">
      <summary>
            Sort arrays (the sorting of character strings may be case sensitive or insensitive).
            </summary>
    </member>
    <member name="M:LitDev.LDSort.ByIndex(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sort an array of any dimension by the index (key).
            </summary>
      <param name="array">
            The array to sort.
            </param>
      <returns>
            A sorted array.
            </returns>
    </member>
    <member name="M:LitDev.LDSort.ByValue(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sort a 1D array by the value (the indices are re-numbered from 1).
            </summary>
      <param name="array">
            The array to sort.
            </param>
      <returns>
            A sorted array.
            </returns>
    </member>
    <member name="M:LitDev.LDSort.ByValueWithIndex(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sort a 1D array by the value (the indices are unchanged, but sorted).
            </summary>
      <param name="array">
            The array to sort.
            </param>
      <returns>
            A sorted array.
            </returns>
    </member>
    <member name="P:LitDev.LDSort.CaseSensitive">
      <summary>
            String comparisons are case sensitive "True" or "False".
            </summary>
    </member>
    <member name="T:LitDev.LDFile">
      <summary>
            File utilities.
            </summary>
    </member>
    <member name="M:LitDev.LDFile.ReadToArray(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reads a text file into an array with one element for each line in the file.
            
            Blank lines are included as an element in the array with one blank space.
            </summary>
      <param name="fileName">
            The full path of the file.
            </param>
      <returns>
            An array with one element for each line in the file.
            </returns>
    </member>
    <member name="M:LitDev.LDFile.Length(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the number of lines in a text file.
            </summary>
      <param name="fileName">
            The full path of the file.
            </param>
      <returns>
            The number of lines in the file (-1 on failure).
            </returns>
    </member>
    <member name="M:LitDev.LDFile.CreationTime(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the creation time of a file.
            </summary>
      <param name="fileName">
            The full path of the file.
            </param>
      <returns>
            The creation time of the file or directory ("" on failure).
            </returns>
    </member>
    <member name="M:LitDev.LDFile.AccessTime(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the last time a file was accessed.
            </summary>
      <param name="fileName">
            The full path of the file.
            </param>
      <returns>
            The last access time of the file or directory ("" on failure).
            </returns>
    </member>
    <member name="M:LitDev.LDFile.ModifiedTime(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the last time a file was modified.
            </summary>
      <param name="fileName">
            The full path of the file.
            </param>
      <returns>
            The last modified time of the file or directory ("" on failure).
            </returns>
    </member>
    <member name="M:LitDev.LDFile.ReadCSV(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Read a CSV (comma separated values) file into an array.
            The deliminator may be changed from a comma using Utilities.CSVDeliminator
            </summary>
      <param name="fileName">
            The full path of the CSV file.
            </param>
      <returns>
            A 2D array with CSV file imported.
            </returns>
    </member>
    <member name="M:LitDev.LDFile.ReadCSVTransposed(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Read a CSV (comma separated values) file into an array. and transpose (swap rows and columns).
            The deliminator may be changed from a comma using Utilities.CSVDeliminator
            </summary>
      <param name="fileName">
            The full path of the CSV file.
            </param>
      <returns>
            2D array with transposed CSV file imported.
            </returns>
    </member>
    <member name="M:LitDev.LDFile.WriteCSV(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Write a 2D array to a CSV (comma separated values) file.
            The deliminator may be changed from a comma using Utilities.CSVDeliminator
            </summary>
      <param name="fileName">
            The full path of the CSV file.
            </param>
      <param name="array">
            The array to export.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDFile.PrintFile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Print a file.
            </summary>
      <param name="fileName">The full path of the file to print.</param>
    </member>
    <member name="M:LitDev.LDFile.GetFolder(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the folder for a full file path.
            </summary>
      <param name="fileName">The full path of a file.</param>
      <returns>The folder part of the file path.</returns>
    </member>
    <member name="M:LitDev.LDFile.GetFile(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the file for a full file path.
            </summary>
      <param name="fileName">The full path of a file.</param>
      <returns>The file name part of the file path (without the folder or the extension).</returns>
    </member>
    <member name="M:LitDev.LDFile.GetExtension(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the file extension for a file.
            </summary>
      <param name="fileName">The file name with extension (may include folder path or not).</param>
      <returns>The extension of the file (without the '.') or "" if no extension.</returns>
    </member>
    <member name="M:LitDev.LDFile.ANSItoUTF8(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert an ANSI encoded text file to UTF8.
            It should also work for any other encoding.
            UTF8 is the default text file encoding used by Small Basic.
            </summary>
      <param name="fileName">The file path to convert.</param>
      <param name="BOM">Include Byte Order Mark (BOM) in UTF8 file ("True" or "False", no BOM is usual).</param>
      <returns>The converted file path (-UTF8.txt) or "" for failure (the encoding may not have been detected correctly).</returns>
    </member>
    <member name="M:LitDev.LDFile.ReadANSI(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Read an ANSI encoded text file.
            It should also work for any other encoding including UTF8.
            UTF8 is the default text file encoding used by Small Basic.
            </summary>
      <param name="fileName">The file path to read.</param>
      <returns>The contents of the file or "" for failure (the encoding may not have been detected correctly).</returns>
    </member>
    <member name="M:LitDev.LDFile.ReadANSIToArray(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reads a text file with ANSI encoding into an array with one element for each line in the file.
            It should also work for any other encoding including UTF8.
            Blank lines are included as an element in the array with one blank space.
            </summary>
      <param name="fileName">
            The full path of the file.
            </param>
      <returns>
            An array with one element for each line in the file or "" for failure (the encoding may not have been detected correctly).
            </returns>
    </member>
    <member name="M:LitDev.LDFile.Exists(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Check if a file path is an existing file or directory.
            </summary>
      <param name="fileName">
            The full path of the file or directory.
            </param>
      <returns>"True" or "False".</returns>
    </member>
    <member name="M:LitDev.LDFile.SaveAllVariables(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Save all of the current variables to a file.
            This is the complete current state of your program.
            May be useful to store a game state, or for debugging.
            </summary>
      <param name="fileName">The full path to store the variables and their values.
            This file will be over-written.</param>
    </member>
    <member name="M:LitDev.LDFile.LoadAllVariables(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Restore the values of all variables that were previously stored using SaveAllVariables.
            </summary>
      <param name="fileName">The full path to a file with stored variable values.</param>
    </member>
    <member name="M:LitDev.LDFile.Size(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the size of a file in bytes.
            </summary>
      <param name="fileName">The full path to the file to get the size of.</param>
      <returns>The number of bytes in the file or -1 on error.</returns>
    </member>
    <member name="M:LitDev.LDFile.RenameFile(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rename or move a file.
            </summary>
      <param name="fileFrom">The full path to the file to rename.</param>
      <param name="fileTo">The full path to the new name for the file.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDFile.RenameDirectory(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rename or move a directory.
            </summary>
      <param name="directoryFrom">The full path to the directory to rename.</param>
      <param name="directoryTo">The full path to the new name for the directory.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDFile.CopyDirectory(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Recursively copy a directory and all contents including sub-directories.
            </summary>
      <param name="directoryFrom">The full path to the directory to copy from.</param>
      <param name="directoryTo">The full path to the directory to copy to.</param>
      <returns>"SUCCESS" or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDFile.GetAllDirectories(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Recursively get all sub-directories in directory.
            </summary>
      <param name="path">The full path to the root dircetory.</param>
      <returns>An array of all sub-directories or "FAILED".</returns>
    </member>
    <member name="P:LitDev.LDFile.CSVplaceholder">
      <summary>
            Character to use in place of empty values in the imported array when reading CSV files.
            A SmallBasic array cannot hold an empty value i.e. "".
            
            Default is the empty string "" (no array entries created for empty values in the CSV file).
            </summary>
    </member>
    <member name="P:LitDev.LDFile.TempFolder">
      <summary>
            Gets the Temp folder path.
            </summary>
    </member>
    <member name="P:LitDev.LDFile.UserName">
      <summary>
            Gets the current user name.
            </summary>
    </member>
    <member name="P:LitDev.LDFile.AppDataFolder">
      <summary>
            Gets the ApplicationData folder path.
            </summary>
    </member>
    <member name="P:LitDev.LDFile.PublicFolder">
      <summary>
            Gets the Public folder path.
            </summary>
    </member>
    <member name="P:LitDev.LDFile.DocumentsFolder">
      <summary>
            Gets the Documents folder path.
            </summary>
    </member>
    <member name="P:LitDev.LDFile.MusicFolder">
      <summary>
            Gets the Music folder path.
            </summary>
    </member>
    <member name="P:LitDev.LDFile.PicturesFolder">
      <summary>
            Gets the Pictures folder path.
            </summary>
    </member>
    <member name="T:LitDev.LDDateTime">
      <summary>
            Time and Date conversion.
            
            The date format is "25/01/2012 22:18:52", the time part is optional.
            The date part will be dependent on your locale, e.g. in US it will be "01/25/2012 22:18:52".
            
            An OADate is the number of days (and part days) since 30 December 1899, allowing dates to be added or subtracted.
            </summary>
    </member>
    <member name="M:LitDev.LDDateTime.Now">
      <summary>
            The current date and time.
            </summary>
      <returns>
            The current date and time.
            
            The format is "25/01/2012 22:18:52", the time part is optional.
            The date part will be dependent on your locale, e.g. in US it will be "01/25/2012 22:18:52".
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.NowOADate">
      <summary>
            The current OADate.
            </summary>
      <returns>
            The number of days (and part days) since 30 December 1899 (OADate).
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.Add(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Calculate a date from input date and an offset in days.
            </summary>
      <param name="date">The input date.</param>
      <param name="offset">An offset in days.</param>
      <returns>
            A date equivalent to the input date + offset.
            
            The format is "25/01/2012 22:18:52", the time part is optional.
            The date part will be dependent on your locale, e.g. in US it will be "01/25/2012 22:18:52".
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.Subtract(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Calculate a number of days between two dates.
            </summary>
      <param name="date1">The input date1.</param>
      <param name="date2">The input date2.</param>
      <returns>
            The number of days (and part days) between the dates (date1-date2).
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.ToOADate(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert date string to OADate.
            </summary>
      <param name="date">
            The date string to convert.
            
            The format is "25/01/2012 22:18:52", the time part is optional.
            The date part will be dependent on your locale, e.g. in US it will be "01/25/2012 22:18:52".
            </param>
      <returns>
            The number of days (and part days) since 30 December 1899 (OADate).
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.FromOADate(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert OADate to date string.
            </summary>
      <param name="OAdate">
            The OADate to convert.
            
            The number of days since 30 December 1899 (OADate).
            </param>
      <returns>
            The date string.
            
            The format is "25/01/2012 22:18:52", the time part is optional.
            The date part will be dependent on your locale, e.g. in US it will be "01/25/2012 22:18:52".
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.OADate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create OADate from date and time values.
            </summary>
      <param name="year">
            The year.
            </param>
      <param name="month">
            The month.
            </param>
      <param name="day">
            The day.
            </param>
      <param name="hour">
            The hour.
            </param>
      <param name="minute">
            The minute.
            </param>
      <param name="second">
            The second.
            </param>
      <returns>
            The number of days (and part days) since 30 December 1899 (OADate).
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.GetYear(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get year from OADate.
            </summary>
      <param name="OAdate">
            The OADate.
            
            The number of days since 30 December 1899 (OADate).
            </param>
      <returns>
            The year.
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.GetMonth(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get month from OADate.
            </summary>
      <param name="OAdate">
            The OADate.
            
            The number of days since 30 December 1899 (OADate).
            </param>
      <returns>
            The month.
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.GetDay(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get day of the month from OADate.
            </summary>
      <param name="OAdate">
            The OADate.
            
            The number of days since 30 December 1899 (OADate).
            </param>
      <returns>
            The month.
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.GetHour(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get hour from OADate.
            </summary>
      <param name="OAdate">
            The OADate.
            
            The number of days since 30 December 1899 (OADate).
            </param>
      <returns>
            The hour.
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.GetMinute(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get minute from OADate.
            </summary>
      <param name="OAdate">
            The OADate.
            
            The number of days since 30 December 1899 (OADate).
            </param>
      <returns>
            The minute.
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.GetSecond(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get second from OADate.
            </summary>
      <param name="OAdate">
            The OADate.
            
            The number of days since 30 December 1899 (OADate).
            </param>
      <returns>
            The second.
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.GetDayName(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get day of the week from OADate.
            </summary>
      <param name="OAdate">
            The OADate.
            
            The number of days since 30 December 1899 (OADate).
            </param>
      <returns>
            The day name.
            </returns>
    </member>
    <member name="M:LitDev.LDDateTime.GetMonthName(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get month name from OADate.
            </summary>
      <param name="OAdate">
            The OADate.
            
            The number of days since 30 December 1899 (OADate).
            </param>
      <returns>
            The month name.
            </returns>
    </member>
    <member name="T:LitDev.LDUtilities">
      <summary>
            General 
            </summary>
    </member>
    <member name="M:LitDev.LDUtilities.Version">
      <summary>
            Gets the current version of the extension and displays a window with this information and a changelog.
            </summary>
      <returns>
            The current version.
            </returns>
    </member>
    <member name="M:LitDev.LDUtilities.KeyDown(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get if a key is down.
            Useful for simplified keyboard game control.
            </summary>
      <param name="key">The key to get down state, eg "Space".</param>
      <returns>The key down state ("True" or "False")</returns>
    </member>
    <member name="M:LitDev.LDUtilities.FontList">
      <summary>
            Get an array of available font names.
            </summary>
      <returns>An array of font names.</returns>
    </member>
    <member name="M:LitDev.LDUtilities.ColourList">
      <summary>
            Get an array of available colour names.
            </summary>
      <returns>An array of colour names.</returns>
    </member>
    <member name="M:LitDev.LDUtilities.IsNumber(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Test if the input will be treated by SmallBasic as a number.
            This is a culture invariant number, e.g. "3.14", but not "3,14" or "24x".
            </summary>
      <param name="input">The input to test.</param>
      <returns>"True" or "False"</returns>
    </member>
    <member name="M:LitDev.LDUtilities.GetCurrentCultureNumber(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a number expressed in the current culture.
            A number must be culture invariant in order to be treated as a number in calculations.
            A current culture number is how it is input or output.
            For example "3.14" is culture invariant, while "3,14" is French culture.
            </summary>
      <param name="input">A culture invariant number.</param>
      <returns>The number expressed in the current culture or input on failure.</returns>
    </member>
    <member name="M:LitDev.LDUtilities.GetCultureInvariantNumber(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a number expressed in the culture invariant form.
            A number must be culture invariant in order to be treated as a number in calculations.
            A current culture number is how it is input or output.
            For example "3.14" is culture invariant, while "3,14" is French culture.
            </summary>
      <param name="input">A number expressed in the current culture.</param>
      <returns>The number expressed in culture invariant form or input on failure.</returns>
    </member>
    <member name="M:LitDev.LDUtilities.CleanTemp">
      <summary>
            Delete all Small Basic related files from the temp folder.
            These are files with extensions tmp, pdb and dll.
            Other applications may also use these, so best to use with no other apps running.
            </summary>
      <returns>The number of files deleted.</returns>
    </member>
    <member name="M:LitDev.LDUtilities.GetNextMapIndex(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the next integer for object names.
            For example Buttons are labeled "Button1", "Button2" etc.
            This method returns the integer index that would be used for the next object added.
            </summary>
      <param name="listName">
            The map (list) type, valid listNames (Case sensitive) are:
            "Button"
            "TextBox"
            "ImageList"
            "Ellipse"
            "Image"
            "Line"
            "Rectangle"
            "Text"
            "Triangle"
            "Polygon"
            "Control"
            </param>
      <returns>The next object index to be used (0 on failure).</returns>
    </member>
    <member name="M:LitDev.LDUtilities.FixFlickr">
      <summary>
            Fix the Flickr object (Version 1.0).
            </summary>
    </member>
    <member name="M:LitDev.LDUtilities.SendClick(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Send a mouse click at the specified screen location.  Note this is Mouse.MouseX/Y, not GraphicsWindow.MouseX/Y.
            </summary>
      <param name="x">The screen x position to click, -1 uses current mouse position.</param>
      <param name="y">The screen y position to click, -1 uses current mouse position.</param>
      <param name="button">The button to press ("Left", "Right" or "Middle")</param>
    </member>
    <member name="P:LitDev.LDUtilities.ShowPrintPreview">
      <summary>
            Show the print preview window when printing with LDGraphicsWindow.Print and LDTextWindow.Print ("True" or "False")
            Default "True"
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.ShowErrors">
      <summary>
            Report any detected errors to TextWindow "True" (default) or "False"
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.ShowFileErrors">
      <summary>
            Report any detected file not found errors to TextWindow "True" (default) or "False"
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.ShowNoShapeErrors">
      <summary>
            Report any detected shapeName not found in method "True" (default) or "False"
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.CSVDeliminator">
      <summary>
            A single character deliminator for reading and writing CSV files
            Default ","
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.NetworkURL">
      <summary>
            Set the web address for use with LDNetwork if gamedata and highscore methods are handled on another server.
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.DPIX">
      <summary>
            Get the display device X DPI (dots per inch) resolution.
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.DPIY">
      <summary>
            Get the display device Y DPI (dots per inch) resolution.
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.CurrentCulture">
      <summary>
            Get or set the current culture.
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.UseExpression">
      <summary>
            Experimental option to speed some interactions with SmallBasicLibrary objects.
            "True" (default) or "False"
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.UseDispatcher">
      <summary>
            Experimental option to speed some interactions with SmallBasicLibrary objects.
            "True" (default) or "False"
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.ForceInvoke">
      <summary>
            Experimental option to speed some interactions with SmallBasicLibrary objects.
            0 no force (default), 1 force Invoke (serial), 2 force BeginInvoke (async)
            </summary>
    </member>
    <member name="P:LitDev.LDUtilities.Priority">
      <summary>
            Experimental option to speed some dispatcher interactions with SmallBasicLibrary objects.
            1 to 10, (default 7, Render)
            </summary>
    </member>
    <member name="T:LitDev.LDCursors">
      <summary>
            Sets the GraphicsWindow Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.CreateCursor(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a cursor that can be set using SetUserCursor or SetShapeCursor.
            An ImageList image can be resized with LDImage.Resize.
            </summary>
      <param name="imageName">The file path or ImageList image.</param>
      <param name="xHotSpot">The x pixel to use as the hot spot.</param>
      <param name="yHotSpot">The y pixel to use as the hot spot.</param>
      <returns>A cursor.</returns>
    </member>
    <member name="M:LitDev.LDCursors.SetUserCursor(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sets a custom cursor as a pointer in the Graphics Window.
            </summary>
      <param name="cursor">A cursor created with CreateCursor or
            a standard cursor in this object (e.g. "ArrowCD") or 
            the full path to a *.cur or *.ani file to use as a cursor.</param>
    </member>
    <member name="M:LitDev.LDCursors.SetShapeCursor(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the cursor for a shape or control when the mouse is over the shape.
            </summary>
      <param name="shapeName">The shape or control name.</param>
      <param name="cursor">A cursor created with CreateCursor or
            a standard cursor in this object (e.g. "ArrowCD") or 
            the full path to a *.cur or *.ani file to use as a cursor.</param>
    </member>
    <member name="M:LitDev.LDCursors.None">
      <summary>
            No Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.Arrow">
      <summary>
            Arrow Cursor (default).
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.Cross">
      <summary>
            Cross Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.Hand">
      <summary>
            Hand Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.Help">
      <summary>
            Help Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.IBeam">
      <summary>
            IBeam Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.Wait">
      <summary>
            Wait Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.Pen">
      <summary>
            Pen Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.Invalid">
      <summary>
            Invalid Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.Starting">
      <summary>
            Starting Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.Scroll">
      <summary>
            Scroll Cursor.
            </summary>
    </member>
    <member name="M:LitDev.LDCursors.ArrowCD">
      <summary>Arrow with CD Cursor.</summary>
    </member>
    <member name="M:LitDev.LDCursors.UpArrow">
      <summary>Up Arrow Cursor (Insertion).</summary>
    </member>
    <member name="M:LitDev.LDCursors.SizeAll">
      <summary>Size All Cursor (Resizing).</summary>
    </member>
    <member name="M:LitDev.LDCursors.SizeNESW">
      <summary>NESW DoubleArrow Cursor (Resizing).</summary>
    </member>
    <member name="M:LitDev.LDCursors.SizeNWSE">
      <summary>NWSE DoubleArrow Cursor (Resizing).</summary>
    </member>
    <member name="M:LitDev.LDCursors.SizeNS">
      <summary>NS DoubleArrow (Resizing).</summary>
    </member>
    <member name="M:LitDev.LDCursors.SizeWE">
      <summary>WE DoubleArrow (Resizing).</summary>
    </member>
    <member name="T:LitDev.LDGraph">
      <summary>
            Graphing utility.
            </summary>
    </member>
    <member name="M:LitDev.LDGraph.AddGraph(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a graph.
            </summary>
      <param name="xpos">
            The graph left position.
            </param>
      <param name="ypos">
            The graph right position.
            </param>
      <param name="width">
            The graph width.
            </param>
      <param name="height">
            The graph height.
            </param>
      <param name="title">
            The graph title.
            </param>
      <param name="labelX">
            The X axis label.
            </param>
      <param name="labelY">
            The Y axis label.
            </param>
      <returns>
            The graph name.
            </returns>
    </member>
    <member name="M:LitDev.LDGraph.AddSeriesLine(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a new data series to an existing graph as a line graph.
            </summary>
      <param name="graphName">
            The graph name.
            </param>
      <param name="seriesLabel">
            The series label.
            If a series with this label already exists then it is replaced with this series.
            </param>
      <param name="data">
            An array holding the X and Y coordinate data.
            
            For example, a line with points (0,1) and (2,3) would have
            data[0] = 1
            data[2] = 3
            
            More generally data[x] = y.
            </param>
      <param name="colour">
            The colour of the series data.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraph.AddSeriesHistogram(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a new data series to an existing graph as a histogram.
            </summary>
      <param name="graphName">
            The graph name.
            </param>
      <param name="seriesLabel">
            The series label.
            If a series with this label already exists then it is replaced with this series.
            </param>
      <param name="data">
            An array holding the X and Y coordinate data.
            
            For example, a line with points (0,1) and (2,3) would have
            data[0] = 1
            data[2] = 3
            
            More generally data[x] = y.
            </param>
      <param name="colour">
            The colour of the series data.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraph.AddSeriesPoints(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a new data series to an existing graph as points.
            </summary>
      <param name="graphName">
            The graph name.
            </param>
      <param name="seriesLabel">
            The series label.
            If a series with this label already exists then it is replaced with this series.
            </param>
      <param name="data">
            An array holding the X and Y coordinate data.
            
            For example, a line with points (0,1) and (2,3) would have
            data[0] = 1
            data[2] = 3
            
            More generally data[x] = y.
            </param>
      <param name="colour">
            The colour of the series data.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraph.DeleteSeries(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Delete an existing series on existing graph.
            </summary>
      <param name="graphName">
            The graph name.
            </param>
      <param name="seriesLabel">
            The series label name to delete.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraph.StopEvents">
      <summary>
            Stop all the graph left click mouse events.
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraph.RestartEvents">
      <summary>
            Restart all the graph left click mouse events.
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraph.ExportCSV(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Export data series directly to CSV file (no graphing).
            </summary>
      <param name="data">
            An array holding the X and Y coordinate data.
            </param>
      <param name="fileName">
            The CSV output file name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraph.ScaleAxisX(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the X axis scaling.
            This over-rides any automatic methods.
            </summary>
      <param name="graphName">The graph name.</param>
      <param name="min">The X axis minimum value.</param>
      <param name="interval">The grid spacing interval.
            If this value is 0 then the interval is calculated from the data.</param>
      <param name="max">The X axis maximum value.
            If this value is equal to min, then the maximum is calculated from the data.
            If this value is less than min, then both the minimum and maximum are calculated from the data.</param>
    </member>
    <member name="M:LitDev.LDGraph.ScaleAxisY(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the Y axis scaling.
            This over-rides any automatic methods.
            </summary>
      <param name="graphName">The graph name.</param>
      <param name="min">The Y axis minimum value.</param>
      <param name="interval">The grid spacing interval.
            If this value is 0 then the interval is calculated from the data.</param>
      <param name="max">The Y axis maximum value.
            If this value is equal to min, then the maximum is calculated from the data.
            If this value is less than min, then both the minimum and maximum are calculated from the data.</param>
    </member>
    <member name="M:LitDev.LDGraph.Help">
      <summary>
            This function is just to display this help.
            
            Graphs of data can be plotted as lines, points or histograms.
            
            Each series of data is a SmallBasic array with the array index reprenting the (unique) X value and the array value representing the Y value.
            
            For example:
            data[1] = 5
            data[2] = 8
            data[3] = 3
            
            First create a graph object with AddGraph, then add series with AddSeriesLine, AddSeriesHistogram or AddSeriesPoints.
            
            Once a graph is created and plotted, the axes can be grabbed and scrolled where the hand cursor appears.  The legend can also be moved.
            
            The graph can be rescaled by using the left mouse button to select a region to zoom, or the mouse wheel can be used to zoom the display.  A double click will reset the scaling to the original default.
            
            A right click will bring up a menu with other features like export of image or data, displaying the cursor coordinates, hiding the legend etc.
            
            Finally the various parmeters for this method give further control of the plotting colours and behaviour.
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDGraph.CreateTrend(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a trend from data.
            </summary>
      <param name="data">
            An array holding the X and Y coordinate data.
            
            For example, a line with points (0,1) and (2,3) would have
            data[0] = 1
            data[2] = 3
            
            More generally data[x] = y.
            </param>
      <param name="order">The polynomial order for the trend line.
            1 is linear.
            2 is quadratic.
            </param>
      <returns>A data array holding a trend that may be plotted.</returns>
    </member>
    <member name="M:LitDev.LDGraph.TrendCoef">
      <summary>
            Get the polynomial trend line coefficients for the last calculated trend using CreateTrend.
            </summary>
      <returns>An array 'coef' of the polynomial coefficients for the trend line.
            The number of coefficients in the array is one larger than the order used to create the trend (order+1) and is indexed from 0.
            y = coef[0] + coef[1]x + coef[2]x^2 ...
            </returns>
    </member>
    <member name="P:LitDev.LDGraph.BorderColour">
      <summary>
            The border colour.
            </summary>
    </member>
    <member name="P:LitDev.LDGraph.InteriorColour">
      <summary>
            The interior colour.
            </summary>
    </member>
    <member name="P:LitDev.LDGraph.TextColour">
      <summary>
            The text colour.
            </summary>
    </member>
    <member name="P:LitDev.LDGraph.AxesColour">
      <summary>
            The boundary axes and tick mark colour.
            </summary>
    </member>
    <member name="P:LitDev.LDGraph.GridColour">
      <summary>
            The internal scale grid lines colour.
            </summary>
    </member>
    <member name="P:LitDev.LDGraph.GridLinesX">
      <summary>
            The number of X axes tick marks and grid lines (default 10)
            </summary>
    </member>
    <member name="P:LitDev.LDGraph.GridLinesY">
      <summary>
            The number of Y axes tick marks and grid lines (default 10)
            </summary>
    </member>
    <member name="P:LitDev.LDGraph.AutoScale">
      <summary>
            AutoScale axes "True" (default) or "False".
            When set to "False" early version scaling is used.
            </summary>
    </member>
    <member name="P:LitDev.LDGraph.AxesResolution">
      <summary>
            The axes (min and max value) significant figures (default 2).
            </summary>
    </member>
    <member name="P:LitDev.LDGraph.TrendPointCount">
      <summary>
            Set or get the number of points created for a trend line using CreateTrend.
            Default 50.
            </summary>
    </member>
    <member name="T:LitDev.LDEvents">
      <summary>
            Additional Events.
            </summary>
    </member>
    <member name="P:LitDev.LDEvents.LastMouseWheelDelta">
      <summary>
            The last mouse wheel Delta (rotation direction).
            </summary>
    </member>
    <member name="P:LitDev.LDEvents.FilePath">
      <summary>
            The root path to watch for FileSystem file change event (default is "C:").
            </summary>
    </member>
    <member name="P:LitDev.LDEvents.FileFilter">
      <summary>
            A file filter for FileSystem file change event (default is "*.*").
            </summary>
    </member>
    <member name="P:LitDev.LDEvents.LastFileChanged">
      <summary>
            The full path to the last file changed.
            </summary>
    </member>
    <member name="P:LitDev.LDEvents.LastFileChangeType">
      <summary>
            The last file change type ("Created", "Changed" or "Deleted").
            </summary>
    </member>
    <member name="P:LitDev.LDEvents.LastError">
      <summary>
            The last error message.
            </summary>
    </member>
    <member name="E:LitDev.LDEvents.MouseWheel">
      <summary>
            Event when the mouse wheel is rotated.
            </summary>
    </member>
    <member name="E:LitDev.LDEvents.MouseDoubleClick">
      <summary>
            Event when the mouse is double clicked.
            </summary>
    </member>
    <member name="E:LitDev.LDEvents.Resized">
      <summary>
            Event when the GraphicsWindow is resized.
            </summary>
    </member>
    <member name="E:LitDev.LDEvents.FileChange">
      <summary>
            Event when a file is created, changed or deleted.
            
            The FilePath and FileFilter should be set before registering this event.
            </summary>
    </member>
    <member name="E:LitDev.LDEvents.Error">
      <summary>
            Event when a LitDev extension error occurs.
            This is in addition to TextWindow warnings, which can be turned off using LDUtilties.ShowErrors, LDUtilties.ShowFileErrors and LDUtilties.ShowNoShapeErrors.
            </summary>
    </member>
    <member name="T:LitDev.LDPhysics">
      <summary>
            Physics extension using Box2D engine.
            </summary>
    </member>
    <member name="M:LitDev.LDPhysics.AddChain(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a chain between two existing shapes.
            </summary>
      <param name="shape1">
            First shape.
            </param>
      <param name="shape2">
            Second shape.
            </param>
      <returns>
            The chain name.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.AddFixedAnchor(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a new small, transparent shape to be used as a fixed anchor point.
            </summary>
      <param name="posX">
            The X coordinate of the anchor.
            </param>
      <param name="posY">
            The Y coordinate of the anchor.
            </param>
      <returns>
            The anchor shape name.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.AddFixedShape(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add an existing SmallBasic shape to the physics engine as a fixed (non-dynamic) shape with friction and restitution that affects shapes that hit it.
            </summary>
      <param name="shapeName">
            The name of the shape.
            </param>
      <param name="friction">
            The shape friction (usually 0 to 1).
            </param>
      <param name="restitution">
            The shape restitution or bounciness (usually 0 to 1).
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.AddInactiveShape(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add an existing SmallBasic shape to the physics engine as an inactive (non-dynamic and non-interacting) shape which only moves with the PanView method.
            </summary>
      <param name="shapeName">
            The name of the shape.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.AddMovingAnchor(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a new small, transparent and high density shape to be used as a moving anchor point.
            </summary>
      <param name="posX">
            The X coordinate of the anchor.
            </param>
      <param name="posY">
            The Y coordinate of the anchor.
            </param>
      <returns>
            The anchor shape name.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.AddMovingShape(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add an existing SmallBasic shape to the physics engine as a moving (dynamic) shape.
            </summary>
      <param name="shapeName">
            The name of the shape.
            </param>
      <param name="friction">
            The shape friction (usually 0 to 1).
            </param>
      <param name="restitution">
            The shape restitution or bounciness (usually 0 to 1).
            If a negative value is set for restitution, then the shape will be added with a very small size which may be used to add an inactive image that can be grouped within an irregular compound shape that matches the image boundary.
            </param>
      <param name="density">
            The shape density (default 1).
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.AddRope(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Add a rope between two existing shapes.
            </summary>
      <param name="shape1">
            First shape.
            </param>
      <param name="shape2">
            Second shape.
            </param>
      <returns>
            The rope name.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.AttachShapes(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Connect two shapes to move together as one.  The shapes are connected with a distance joint and may wobble a bit if they are hit.
            </summary>
      <param name="shape1">
            The first shape name.
            </param>
      <param name="shape2">
            The second shape name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.AttachShapesWithRotation(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Connect two shapes to move together as one, but allow the shapes to rotate about each other.
            </summary>
      <param name="shape1">
            The first shape name.
            </param>
      <param name="shape2">
            The second shape name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.DetachShapes(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Disconnect two shapes that were previously attached.
            </summary>
      <param name="shape1">
            The first shape name.
            </param>
      <param name="shape2">
            The second shape name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.DisconnectShape(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Disconnect shape from the physics engine without deleting the shape.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.DoTimestep">
      <summary>
            Perform a time-step update.
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetAngle(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the angle of rotation for the shape.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <returns>
            The angle of rotation in degrees.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetAngle(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reset the angle of rotation for a shape.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <param name="angle">
            The angle of rotation in degrees.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetCollisions(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of all the shapes that the specified shape collided with during the last DoTimestep().
            </summary>
      <param name="shapeName">
            The shape to check for collisions.
            </param>
      <returns>
            An array of all the shapes collided with (may be empty "" or "Wall" for a static obstacle).
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetInertia(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the moment of inertia of a shape.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <returns>
            The inertia of the shape.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetMass(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the mass of a shape.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <returns>
            The mass of the shape.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetPosition(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the centre of the shape coordinates.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <returns>
            A 2 element array with the shape centre position.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetContacts(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a list of shapes that collided within a distance of a specified contact point.
            </summary>
      <param name="posX">
            The X coordinate of a contact position to check.
            </param>
      <param name="posY">
            The Y coordinate of a contact position to check.
            </param>
      <param name="distance">
            A maximum distance from the contact point for the contact.
            </param>
      <returns>
            An array of contacts, with each contact being an array of 2 shape names.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetAllShapesAt(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of all the physics engine shapes (if any) at the input coordinates.
            The coordinates for this method are the physics engine coordinates if panning is present.
            </summary>
      <param name="posX">
            The X coordinate.
            </param>
      <param name="posY">
            The Y coordinate.
            </param>
      <returns>
            An array of shape names or "".
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetRotation(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the shape rotation speed.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <returns>
            The angular rotation speed degrees/s.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetShapeAt(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the shape (if any) at the input coordinates.
            The coordinates for this method are the screen coordinates if panning is present.
            </summary>
      <param name="posX">
            The X coordinate.
            </param>
      <param name="posY">
            The Y coordinate.
            </param>
      <returns>
            The shape name at the input position or "".
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetVelocity(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the velocity of the shape.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <returns>
            A 2 element array with the shape velocity.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GroupShapes(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Solidly group two shapes to move together as one.  Shape1 is added to shape2 to act as one shape.
            </summary>
      <param name="shape1">
            The first shape name.
            </param>
      <param name="shape2">
            The second shape name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.Help">
      <summary>
            This function is just to display this help.
            
            The extension uses Box2D (http://box2d.org) as an engine and provides an interface between it and the graphics capabilities of SmallBasic.
            
            Only shapes that are connected to the physics engine take part in the motion physics, for example you may add normal shapes (e.g. a gun and not connect it to the physics engine).  Once a shape is connected to the engine, it is best to only interact with it through the methods provided by the extension.  All positions are in the SmallBasic GraphicsWindow pixels and refer to shape centres.
            
            Image and text shapes are treated as rectangles, and ellipses as circles; there is also triangle and convex polygon support, but not lines.  Images may be treated as circles by setting the property LoadImagesAsCircles to "True".
            
            One issue that Box2D has difficulty with is small fast moving objects that can 'tunnel' through other shapes without being deflected (see the SetBullet option).
            
            Another problem is shapes of very different size and hence mass, especially large shapes when they are connected together.  It may be necessary to modify the density for these (the Anchor options are an attempt to automate this a bit), otherwise the default density of 1 is good.  Resist the temptation to connect too many shapes together.
            
            It may be possible to improve the stability of some 'difficult' models using the TimestepControl settings, but the defaults look good for most cases.
            
            Do not call the physics methods inside SmallBasic event subroutines directly, rather set flags that can be processed in a main game loop.
            
            There are sample SmallBasic programs and a Getting Started Guide that comes with the extension dll - this is the best place to start.
            
            Report bugs and problems to the SmallBasic forum (http://social.msdn.microsoft.com/Forums/en-US/smallbasic/threads), but first simplify your SmallBasic code to isolate the issue before providing a short 'runnable' code sample.
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.PanView(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Pan the camera view, including window boundaries.
            </summary>
      <param name="panHorizontal">
            Pan in the horizontal direction (negative is left).
            </param>
      <param name="panVertical">
            Pan in the vertical direction (negative is up).
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.GetPan">
      <summary>
            Get the current pan offset, see PanView, FollowShapeX(Y) and BoxShape.
            World coordinates = screen coordinates + pan offset.
            </summary>
      <returns>
            A 2 element array with the current pan offset.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.FollowShapeX(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a shape to remain stationary at X position in the view.
            This is similar to PanView, except that the view pans automatically to keep the specified shape at a constant visual X location.
            Only one shape can be followed in X direction.  To unset shape following, set the shapeName to "".
            </summary>
      <param name="shapeName">
            The shape to follow or "".
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.FollowShapeY(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a shape to remain stationary at Y position in the view.
            This is similar to PanView, except that the view pans automatically to keep the specified shape at a constant visual Y location.
            Only one shape can be followed in Y direction.  To unset shape following, set the shapeName to "".
            </summary>
      <param name="shapeName">
            The shape to follow or "".
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.BoxShape(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a shape to remain within a box within the view.
            This is similar to PanView, except that the view pans automatically to keep the specified shape within a box region of the GraphicsWindow.
            Only one shape can be boxed.  To unset shape box, set the shapeName to "".
            </summary>
      <param name="shapeName">The shape to box or "".</param>
      <param name="x1">The left x coordinate of the box.</param>
      <param name="y1">The top y coordinate of the box.</param>
      <param name="x2">The right x coordinate of the box.</param>
      <param name="y2">The bottom y coordinate of the box.</param>
    </member>
    <member name="M:LitDev.LDPhysics.RemoveChain(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove a chain.
            </summary>
      <param name="shapeName">
            The chain name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.RemoveFrozen">
      <summary>
            Removes all frozen shapes - outside the AABB for the engine.
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.RemoveRope(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove a rope.
            </summary>
      <param name="shapeName">
            The rope name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.RemoveShape(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove a shape.
            </summary>
      <param name="shapeName">
            The name of the shape.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.Reset">
      <summary>
            Reset (delete all physics engine attached shapes).
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetAABB(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            The physics engine AABB (axis-aligned bounding box). The units are the engine units of m.  A Reset is required after setting.  It is not recommended to change this.
            </summary>
      <param name="minX">
            The left coordinate of the universe (default -100).
            </param>
      <param name="maxX">
            The right coordinate of the universe (default 200).
            </param>
      <param name="minY">
            The top coordinate of the universe (default -100).
            </param>
      <param name="maxY">
            The bottom coordinate of the universe (default 200).
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetBoundaries(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set solid boundaries (positioning a boundary outside the GraphicsWindow removes it).
            </summary>
      <param name="left">
            The left boundary X value.
            </param>
      <param name="right">
            The right boundary X value.
            </param>
      <param name="top">
            The top boundary Y value.
            </param>
      <param name="bottom">
            The bottom (ground) boundary Y value.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetBullet(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a shape as a bullet.  This prevents 'tunnelling' of fast moving small objects at the expense of performance.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetDamping(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a damping factor for a shape (default 0).
            </summary>
      <param name="shapeName">
            The shape to modify.
            </param>
      <param name="linear">
            Linear damping factor.
            </param>
      <param name="angular">
            Angular damping factor.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetForce(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a force to apply to a shape (Remember F = ma).
            </summary>
      <param name="shapeName">
            The shape to modify.
            </param>
      <param name="forceX">
            X component of the force.
            </param>
      <param name="forceY">
            Y component of the force.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetGroup(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Control which sprites interact (collide) with other shapes.
            </summary>
      <param name="shapeName">
            The shape to modify.
            </param>
      <param name="group">
            The group that the current shape belongs to (default 0).  This should be an integer between 0 and 15.
            </param>
      <param name="mask">
            An array of groups that this shape will collide with (default all groups 0,1,2,..,14,15).
            To allow the shape to only interact with groups 0, 1 and 4 would be "1=0;2=1;3=4;".
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetGravity(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the gravity direction and magnitude (default 0,100).
            </summary>
      <param name="gravX">
            The X component of gravity.
            </param>
      <param name="gravY">
            The Y component of gravity.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetShapeGravity(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the gravity direction and magnitude for an individual shape (default 0,100).
            </summary>
      <param name="shapeName">
            The shape to modify.
            </param>
      <param name="gravX">
            The X component of gravity.
            </param>
      <param name="gravY">
            The Y component of gravity.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetImpulse(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set an impulse to a shape (a kick).
            </summary>
      <param name="shapeName">
            The shape to modify.
            </param>
      <param name="impulseX">
            X component of the impulse.
            </param>
      <param name="impulseY">
            Y component of the impulse.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetPosition(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reset shape position.
            </summary>
      <param name="shapeName">
            The shape to modify.
            </param>
      <param name="posX">
            X component shape centre.
            </param>
      <param name="posY">
            Y component shape centre.
            </param>
      <param name="angle">
            The angle of rotation in degrees.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetRotation(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set shape rotation speed.
            </summary>
      <param name="shapeName">
            The shape to modify.
            </param>
      <param name="rotation">
            The angular rotation speed degrees/s.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetTorque(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a torque to a shape (a rotational kick).
            </summary>
      <param name="shapeName">
            The shape to modify.
            </param>
      <param name="torque">
            The torque to apply.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetVelocity(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the velocity of a shape.
            </summary>
      <param name="shapeName">
            The shape to modify.
            </param>
      <param name="velX">
            X component of the velocity.
            </param>
      <param name="velY">
            Y component of the velocity.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.TimestepControl(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Modify default timestep control parameters - also can be set using individual parameters.
            </summary>
      <param name="timestep">
            Time-step (default 0.025).
            </param>
      <param name="velocityIterations">
            Velocity iterations (default 6).
            </param>
      <param name="positionIterations">
            Position iterations (default 2).
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.UngroupShapes(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Remove shape group pairing.
            </summary>
      <param name="shape1">
            The first shape name.
            </param>
      <param name="shape2">
            The second shape name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.UnsetBullet(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Unset a shape as a bullet.  This reverts the shape to normal collision detection.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetTire(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set an object to act as a drivable tire for a top down game.
            Usually gravity will be 0 and the shape should already be added to the engine.
            The object should be initially positioned facing forward up on the display.
            </summary>
      <param name="shapeName">The shape to make a tire.</param>
    </member>
    <member name="M:LitDev.LDPhysics.MoveTire(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Move a tire shape, apply a forward or backward force.
            </summary>
      <param name="shapeName">The tire shape to move.</param>
      <param name="force">The force to apply, positive is forward, negative is backward.</param>
    </member>
    <member name="M:LitDev.LDPhysics.BrakeTire(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Apply a brake to a tire shape.
            </summary>
      <param name="shapeName">The tire shape to brake.</param>
    </member>
    <member name="M:LitDev.LDPhysics.TurnTire(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Turn a tire shape, steer left or right.
            </summary>
      <param name="shapeName">The tire shape to turn.</param>
      <param name="torque">The torque, rotation force to apply, positive is turn right, negative is turn left.</param>
    </member>
    <member name="M:LitDev.LDPhysics.GetTireProperties(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get tire properties, they include:
            
            AntiSkid (higher value reduces skid)
            Drag (higher value increases forward/backward drag)
            Brake (higher value increases braking power)
            Straighten (higher value restores steering more quickly)
            BrakeStraighten (higher value restores steering more quickly while braking)
            </summary>
      <param name="shapeName">The tire shape.</param>
      <returns>An array of properties, indexed by the property name, e.g. "AntiSkid".</returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetTireProperties(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set tire properties, they include:
            
            AntiSkid (higher value reduces skid)
            Drag (higher value increases forward/backward drag)
            Brake (higher value increases braking power)
            Straighten (higher value restores stearing more quickly)
            BrakeStraighten (higher value restores stearing more quickly while braking)
            </summary>
      <param name="shapeName">The tire shape.</param>
      <param name="properties">An array of one or more properties to set.
            The index is one of the properties (case sensitive) and the value is the property value.</param>
    </member>
    <member name="M:LitDev.LDPhysics.GetTireInformation(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get tire information, it includes:
            
            Skid (if this value exceeds the property AntiSkid, then the tire is skidding)
            Crash (the value is the speed of the impact)
            </summary>
      <param name="shapeName">The tire shape.</param>
      <returns>An array of information, indexed by the information name, e.g. "Skid".</returns>
    </member>
    <member name="M:LitDev.LDPhysics.AddExplosion(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Make an explosion, which consists of 50x20kg particles blast apart over 500ms.
            </summary>
      <param name="posX">The X coordinate of the explosion.</param>
      <param name="posY">The Y coordinate of the explosion.</param>
      <param name="power">The explosion force, this is the initial velocity of the blast particles.</param>
      <param name="damping">A damping for the blast, the smaller this value the larger the blast range (default 10).</param>
      <param name="colour">An optional colour of the explosion particles ("" for none).</param>
    </member>
    <member name="M:LitDev.LDPhysics.ToggleMoving(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Toggle a moving shape to be fixed and vice-versa.
            This method also sets the rotation to be on or off to match if it is moving or fixed.
            </summary>
      <param name="shapeName">The shape name.</param>
    </member>
    <member name="M:LitDev.LDPhysics.ToggleRotation(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Toggle a shape to not rotate and vice-versa.
            This method toggles the rotation property for fixed and moving shapes.
            </summary>
      <param name="shapeName">The shape name.</param>
    </member>
    <member name="M:LitDev.LDPhysics.ToggleSensor(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Toggle a shape to act as a sensor and vice-versa.
            A sensor shape does not interact with other shapes, but still provides collision data.
            </summary>
      <param name="shapeName">The shape name.</param>
    </member>
    <member name="M:LitDev.LDPhysics.AttachShapesWithJoint(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
             Connect two shapes to move together as one with one of several joint types.
             These can be advanced and require reference to Box2D manual.
             In many cases it is best to prevent shape rotation for the joints to behave as desired.
             Multiple joints may also be applied to shapes.
             The methods use the initial shape positions, so set these first.
             </summary>
      <param name="shape1">The first shape name.</param>
      <param name="shape2">The second shape name.</param>
      <param name="type">One of the following joint types.
             
             "Distance" - maintain a fixed distance between the shapes.
             "Gear" - link Prismatic or Revolute joints (previously created) of 2 shapes.
             "Line" - move the shapes along a line initially connecting the shapes.
             "Mouse" - move the shape to follow the mouse (both shape names should be the same).
             "Prismatic_H" - move shapes vertically along a line between the two shapes.
             "Prismatic_V" - move shapes horizontally along a line between the two shapes.
             "Pulley" - a pulley system, one shape moves up as the other moves down - position the shapes initially at the extreme points of the pulley motion.
             "Revolute" - the shapes can rotate about each other.
             </param>
      <param name="collide">The connected shapes can interact with each other "True" or "False" (default).
             </param>
      <param name="parameters">Optional parameters (default ""), multiple parameters are in an array.
            
             "Distance" - damping ratio (default 0)
             "Gear" - gear ratio, first joint, second joint (default 1, auto detect joints)
             "Line" - X direction, Y direction, lower translation, upper translation (default line connecting shapes, no limits)
             "Mouse" - max acceleration, damping ratio (default 10000, 0.7)
             "Prismatic_H" - X direction, Y direction, lower translation, upper translation (default 1,0, no limits)
             "Prismatic_V" - X direction, Y direction, lower translation, upper translation  (default 0,1, no limits)
             "Pulley" - pulley ratio (block and tackle) (default 1)
             "Revolute" - lower angle, upper angle (default no limits)
             </param>
      <returns>
             The joint name.
             </returns>
    </member>
    <member name="M:LitDev.LDPhysics.DetachJoint(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Disconnect two shapes that were previously joined with a joint.
            </summary>
      <param name="jointName">
            The joint name.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.SetJointMotor(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a motor for selected joints (Line, Prismatic_H, Prismatic_V and Revolute).
            </summary>
      <param name="jointName">
            The joint name.
            </param>
      <param name="speed">The desired motor speed.</param>
      <param name="maxForce">The maximum motor force (torque for Revolute).
            A zero value turns motor off.</param>
    </member>
    <member name="M:LitDev.LDPhysics.WakeAll">
      <summary>
            Wake all sleeping shapes - shapes sleep due to no applied forces or contacts.  They wake automatically on any contact or applied force, so this action is rarely required.
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDPhysics.RayCast(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Cast an invisible ray to detect the proximity of shapes.
            </summary>
      <param name="shapeName">The shape to cast the ray from.</param>
      <param name="angle">The angle in degrees to check, this can also be an array of angles.</param>
      <param name="distance">A maximum distance to check.</param>
      <returns>An array of results, indexed by the shape name ("Wall" for a static obstacle) with a value equal to its distance.
            The shapes are sorted to list them nearest first.
            If an array of input angles is used, then only the nearest shape for each angle is returned and the value is the angle, not the distance.</returns>
    </member>
    <member name="M:LitDev.LDPhysics.WriteJson(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Write out a json script compatible with R.U.B.E. from current LDPhysics model.
            See https://www.iforce2d.net/rube for more details.
            </summary>
      <param name="fileName">The full path to the json file to create.</param>
    </member>
    <member name="M:LitDev.LDPhysics.ReadJson(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Read in a json script compatible with R.U.B.E. and create a LDPhysics model.
            See https://www.iforce2d.net/rube for more details.
            </summary>
      <param name="fileName">The full path to the json file to read.</param>
      <param name="scale">Scale all shapes, default 1 (no scaling).</param>
      <param name="reverseY">Reverse the Y direction up to down ("True" or "False").</param>
      <param name="stationary">Set all shapes to be initially at rest, joint motors are still enabled ("True" or "False").</param>
      <param name="offsetX">Add an x coordinate offset to all shapes.</param>
      <param name="offsetY">Add a y coordinate offset to all shapes, especially useful when reverseY is set.</param>
      <returns>A text array containing the LDPhysics commands used to create the model.</returns>
    </member>
    <member name="P:LitDev.LDPhysics.ChainColour">
      <summary>
            The colour to be used for chains.
            </summary>
    </member>
    <member name="P:LitDev.LDPhysics.LoadImagesAsCircles">
      <summary>
            Toggle whether image shapes will be loaded as circles - "True" or "False" (default is "False").
            </summary>
    </member>
    <member name="P:LitDev.LDPhysics.PositionIterations">
      <summary>
            The physics engine position iterations (default 2).
            </summary>
    </member>
    <member name="P:LitDev.LDPhysics.RopeColour">
      <summary>
            The colour to be used for ropes.
            </summary>
    </member>
    <member name="P:LitDev.LDPhysics.Scaling">
      <summary>
            The physics engine scaling (pixel/m, default 10).  It is not recommended to change this.
            </summary>
    </member>
    <member name="P:LitDev.LDPhysics.TimeStep">
      <summary>
            The physics engine timestep size (default 0.025).
            </summary>
    </member>
    <member name="P:LitDev.LDPhysics.VelocityIterations">
      <summary>
            The physics engine velocity iterations (default 6).
            </summary>
    </member>
    <member name="P:LitDev.LDPhysics.VelocityThreshold">
      <summary>
            The physics engine velocity threshold for inelastic collisions 'sticky walls' (default 1).
            </summary>
    </member>
    <member name="P:LitDev.LDPhysics.MaxPolygonVertices">
      <summary>
            The physics engine maximum number of vertices on convex polygons (default 8).
            </summary>
    </member>
    <member name="P:LitDev.LDPhysics.MaxProxies">
      <summary>
            The physics engine maximum number of objects 'proxies' (default 1024).
            </summary>
    </member>
    <member name="T:LitDev.LDCommPort">
      <summary>
            Sends and receives data over the serial port
            Original Code by Nino Carrillo
            </summary>
    </member>
    <member name="M:LitDev.LDCommPort.OpenPort(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Opens a serial port for use.  Assumes 8 databits, no parity.
            </summary>
      <param name="portName">
            String identifying which port to open in the form of "COM8".
            </param>
      <param name="baudRate">
            Integer baud rate, for example 9600.
            </param>
      <returns>Error message, "SUCCESS", "NOSERIALPORTS", "PORTNOTFOUND" or "CONNECTIONFAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.SwapPort(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Switch the current active port to a previously opened port.
            </summary>
      <param name="portName">String identifying a port that is already opened.</param>
      <returns>Error message, "SUCCESS" or "PORTNOTFOUND".</returns>
    </member>
    <member name="M:LitDev.LDCommPort.RXByte">
      <summary>
            Reads one byte from the open serial port and returns that byte as an integer.
            </summary>
      <returns>
            One integer value between 0 and 255 ("NOCONNECTION" or "FAILED" on failure).
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.RXChar">
      <summary>
            Reads one byte from the open serial port and returns that byte as a unicode character.
            </summary>
      <returns>
            One unicode character ("NOCONNECTION" or "FAILED" on failure).
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.RXAll">
      <summary>
            Reads all available bytes in the open comm port input buffer.
            </summary>
      <returns>
            Returns a string of bytes ("NOCONNECTION" or "FAILED" on failure).
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.ClosePort">
      <summary>
            Closes the open serial port.
            </summary>
      <returns>
            "SUCCESS", "NOCONNECTION" or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.AvailablePorts">
      <summary>
            Returns a list of available serial ports.
            </summary>
      <returns>
            An array containing the names of available serial ports.
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.TXByte(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sends one byte to the serial port.
            </summary>
      <param name="dataByte">
            The byte to be written to the port.
            </param>
      <returns>
            "SUCCESS", "NOCONNECTION" or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.TXString(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sends a string to the serial port.
            </summary>
      <param name="dataString">
            String value to be sent.
            </param>
      <returns>
            "SUCCESS", "NOCONNECTION" or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.SetHandshake(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sets or clears hardware flow control for the current port.
            </summary>
      <param name="handshake">
            "H" to select hardware flow control, "HX" for hardware and software flow control, "X" for software fow control, any other character to clear.
            </param>
      <returns>
            "SUCCESS", "NOCONNECTION" or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.SetEncoding(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sets current port encoding for send and receive text conversion.
            </summary>
      <param name="encoding">The encoding:
            "Ascii" (default), "Unicode", "UTF7", "UTF8", "UTF32" or "BigEndianUnicode".
            </param>
      <returns>
            "SUCCESS", "NOCONNECTION" or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.SetParity(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sets current port parity. 
            </summary>
      <param name="parity">The parity:
            "None" (default), "Even", "Mark", "Odd" or "Space".
            </param>
      <returns>
            "SUCCESS", "NOCONNECTION" or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.SetDataBits(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sets current port data bits. 
            5 to 8 (default).
            </summary>
      <param name="dataBits">The data bits:
            5 to 8 (default).
            </param>
      <returns>
            "SUCCESS", "NOCONNECTION" or "FAILED".
            </returns>
    </member>
    <member name="M:LitDev.LDCommPort.SetStopBits(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Current port stop bits. 
            </summary>
      <param name="stopBits">The stop bits:
            "One" (default), "None", "OnePointFive" or "Two".
            </param>
      <returns>
            "SUCCESS", "NOCONNECTION" or "FAILED".
            </returns>
    </member>
    <member name="P:LitDev.LDCommPort.LastPort">
      <summary>
            The last port name for which an event was raised.
            </summary>
    </member>
    <member name="P:LitDev.LDCommPort.LastError">
      <summary>
            The last error for which an error event was raised.
            </summary>
    </member>
    <member name="E:LitDev.LDCommPort.DataReceived">
      <summary>
            Event when the serial port receives data.
            </summary>
    </member>
    <member name="E:LitDev.LDCommPort.ErrorReceived">
      <summary>
            Event when the serial port receives an error.
            </summary>
    </member>
    <member name="T:LitDev.LDShapes">
      <summary>
            Shapes extension utilities.
            </summary>
    </member>
    <member name="M:LitDev.LDShapes.GetProperty(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a shape property.  This is a .Net UIElement property.
            </summary>
      <param name="shapeName">The shape or control name.</param>
      <param name="property">The property name to get.</param>
      <returns>The value of the property.</returns>
    </member>
    <member name="M:LitDev.LDShapes.GetProperties(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get a list of shape properties.  These are .Net UIElement properties.
            </summary>
      <param name="shapeName">The shape or control name.</param>
      <returns>An array of properties and their values.</returns>
    </member>
    <member name="M:LitDev.LDShapes.SetProperty(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a shape property.  This is a .Net UIElement property.
            </summary>
      <param name="shapeName">The shape or control name.</param>
      <param name="property">The property name to set.</param>
      <param name="value">The value to set the property to.</param>
    </member>
    <member name="M:LitDev.LDShapes.ResetTurtle">
      <summary>
            Reset the Turtle after a GraphicsWindow.Clear().
            </summary>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.SetTurtleImage(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set the turtle to an image.
            </summary>
      <param name="imageName">
            The image to load for the turtle.
            Value returned from ImageList.LoadImage or local or network image file.
            </param>
      <param name="size">
            The size to scale the turtle to (default turtle is 16).
            </param>
    </member>
    <member name="M:LitDev.LDShapes.RemoveTurtleLines">
      <summary>
            Remove all turtle trail lines.
            </summary>
    </member>
    <member name="M:LitDev.LDShapes.RasteriseTurtleLines">
      <summary>
            Rasterise all turtle trail lines.
            When the number of turtle trails is large the program may slow due to the number of line shapes (trails) present.
            This converts the turtle trails from line shapes to background drawings. 
            </summary>
    </member>
    <member name="M:LitDev.LDShapes.MoveLine(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Moves a line shape.
            </summary>
      <param name="shapeName">
            The shape name (a line created with Shapes.AddLine).
            </param>
      <param name="x1">
            The first X coordinate to move the line to.
            </param>
      <param name="y1">
            The first Y coordinate to move the line to.
            </param>
      <param name="x2">
            The second X coordinate to move the line to.
            </param>
      <param name="y2">
            The second Y coordinate to move the line to.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.MoveTriangle(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Moves a triangle shape.
            </summary>
      <param name="shapeName">
            The shape name (a triangle created with Shapes.AddTriangle).
            </param>
      <param name="x1">
            The first X coordinate to move the triangle to.
            </param>
      <param name="y1">
            The first Y coordinate to move the triangle to.
            </param>
      <param name="x2">
            The second X coordinate to move the triangle to.
            </param>
      <param name="y2">
            The second Y coordinate to move the triangle to.
            </param>
      <param name="x3">
            The third X coordinate to move the triangle to.
            </param>
      <param name="y3">
            The third Y coordinate to move the triangle to.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.Move(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Moves a triangle or polygon top-left position.
            This method also works for lines (Shapes.AddLine).
            </summary>
      <param name="shapeName">
            The shape name (a triangle, polygon or line shape).
            </param>
      <param name="x">
            The X (left) coordinate for the triangle, polygon or line.
            </param>
      <param name="y">
            The Y (top) coordinate for the triangle, polygon or line.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.RotateAbout(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rotate a shape about a point.
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <param name="x">
            The X coordinate to rotate the shape about.
            </param>
      <param name="y">
            The Y coordinate to rotate the shape about.
            </param>
      <param name="angle">
            The angle in degrees to rotate the shape.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.MovePolygon(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Moves a polygon shape.
            </summary>
      <param name="shapeName">
            The shape name (a polygon created with LDShapes.AddPolygon).
            </param>
      <param name="points">
            An array of new coordinates for the polygon corners with the form points[i][1] = x, points[i][2] = y.
            
            The number of points must be 3 or more and can change with each call.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.AddPolygon(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Creates a polygon shape.
            </summary>
      <param name="points">
            An array of coordinates for the polygon corners with the form points[i][1] = x, points[i][2] = y.
            
            The number of points must be 3 or more.
            </param>
      <returns>
            The polygon shape name.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.AddStar(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Creates a star shape.
            Fun effects can be created with negative distances.
            </summary>
      <param name="numPoint">The number of star points.</param>
      <param name="innerRadius">The centre to inner points' distance.</param>
      <param name="outerRadius">The centre to outer points' distance.</param>
      <returns>
            The star shape name.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.AddRegularPolygon(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Creates a regular polygon shape.
            </summary>
      <param name="numPoint">The number of polygon sides.</param>
      <param name="radius">The centre to corner distance.</param>
      <returns>
            The regular polygon shape name.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.OverlapBox(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Checks for shape overlap of bounding boxes (collision detection).
            </summary>
      <param name="shape1">
            The first shape name.
            </param>
      <param name="shape2">
            The second shape name.
            </param>
      <returns>
            "True" or "False".
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.OverlapCircle(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Checks for shape overlap of bounding circles (collision detection).
            </summary>
      <param name="shape1">
            The first shape name.
            </param>
      <param name="shape2">
            The second shape name.
            </param>
      <returns>
            "True" or "False".
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.Overlap(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Checks for shape overlap (collision detection for any ellipse or rectangle shape types).
            The first shape should be unZoomed and unRotated.
            </summary>
      <param name="shape1">
            The first shape name.
            </param>
      <param name="shape2">
            The second shape name.
            </param>
      <returns>
            "True" or "False".
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.BrushColour(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set shape Brush colour.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <param name="colour">
            The new brush colour.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.GetColour(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get shape Brush and Pen colours.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <returns>
            A 3 element array
            1) shape brush (or background) colour in hex format
            2) shape opacity (0 to 100)
            3) shape pen (or foreground) colour in hex format
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.BrushGradient(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a linear or radial gradient brush.
            </summary>
      <param name="colours">
            An array of colours to apply to the shape in a gradient.
            </param>
      <param name="orientation">
            The orientation for the gradient.
            "H" horizontal.
            "V" vertical.
            "DU" diagonally up.
            "DD" diagonally down.
            "R"  radial (default if "")
            </param>
      <returns>The gradient brush name.</returns>
    </member>
    <member name="M:LitDev.LDShapes.BrushImage(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create an image brush.
            These brushes should work anywhere that BrushGradient can be used.
            </summary>
      <param name="imageName">
            The image to load to the brush.
            Value returned from ImageList.LoadImage or local or network image file.
            </param>
      <returns>The image brush name.</returns>
    </member>
    <member name="M:LitDev.LDShapes.BrushText(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Create a text brush.
            These brushes should work anywhere that BrushGradient can be used.
            </summary>
      <param name="text">
            The text to add to the brush.
            The current GraphicsWindow font is used.
            </param>
      <param name="background">
            The background colour.
            </param>
      <param name="foreground">
            The foreground (pen) colour.
            </param>
      <returns>The text brush name.</returns>
    </member>
    <member name="M:LitDev.LDShapes.BrushShape(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a shape Brush style as a gradient of colours.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <param name="brush">
            A previously created gradient or image brush (LDShapes.BrushGradient LDShapes.BrushImage).
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.BrushRectangle(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Draw a rectangle filled with a gradient of colours.
            </summary>
      <param name="brush">
            A previously created gradient or image brush (LDShapes.BrushGradient LDShapes.BrushImage).
            </param>
      <param name="x">
            The x co-ordinate of the rectangle.
            </param>
      <param name="y">
            The y co-ordinate of the rectangle.
            </param>
      <param name="width">
            The width of the rectangle.
            </param>
      <param name="height">
            The height of the rectangle.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.BrushEllipse(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Draw an ellipse filled with a gradient of colours.
            </summary>
      <param name="brush">
            A previously created gradient or image brush (LDShapes.BrushGradient LDShapes.BrushImage).
            </param>
      <param name="x">
            The x co-ordinate of the ellipse.
            </param>
      <param name="y">
            The y co-ordinate of the ellipse.
            </param>
      <param name="width">
            The width of the ellipse.
            </param>
      <param name="height">
            The height of the ellipse.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.BrushRoundedRectangle(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Draw a rounded rectangle filled with a gradient of colours.
            </summary>
      <param name="brush">
            A previously created gradient or image brush (LDShapes.BrushGradient LDShapes.BrushImage).
            </param>
      <param name="x">
            The x co-ordinate of the rectangle.
            </param>
      <param name="y">
            The y co-ordinate of the rectangle.
            </param>
      <param name="width">
            The width of the rectangle.
            </param>
      <param name="height">
            The height of the rectangle.
            </param>
      <param name="radius">
            The radius of the rounded corners.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.BrushPolygon(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Draw a polygon filled with a gradient of colours.
            </summary>
      <param name="brush">
            A previously created gradient or image brush (LDShapes.BrushGradient LDShapes.BrushImage).
            </param>
      <param name="points">
            An array of coordinates for the polygon corners with the form points[i][1] = x, points[i][2] = y.
            
            The number of points must be 3 or more.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.PenColour(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set shape Pen colour.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <param name="colour">
            The new pen colour.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.Font(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set shape Font.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <param name="family">The new font family name
            See LDUtilities.FontList() for available font families.</param>
      <param name="size">The new font size.</param>
      <param name="bold">The new font bold state ("True" or "False").</param>
      <param name="italic">The new font italic state ("True" or "False").</param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.PenWidth(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set shape Pen width.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <param name="width">
            The new pen width.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.PenStyle(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set shape Pen style (dash, dot etc).
            </summary>
      <param name="shapeName">
            The shape name.
            </param>
      <param name="dash">
            The dash length.
            </param>
      <param name="space">
            The space length.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.ZIndex(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set shape z index (layer position negative are background and positive are foreground - default 0).
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <param name="z_index">
            The z-index (zero, positive or negative interger).
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.ReSize(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Resize shape width and height (an absolute version of zoom).
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <param name="width">
            The shape width.
            </param>
      <param name="height">
            The shape height.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.SetSize(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reset the size of a shape as if it was created with the new size.
            The position (top left point) is unchanged.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <param name="width">
            The shape width.
            </param>
      <param name="height">
            The shape height.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.Centre(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Centre the shape on a point, also works for zoomed shapes.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <param name="x">
            The x coordinate of the centre.
            </param>
      <param name="y">
            The y coordinate of the centre.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.GetLeft(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the left position of a shape (works for triangles, polygons and lines).
            Also works for shapes while animating.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <returns>
            The x coordinate of the left edge of the shape.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.GetTop(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the top position of a shape (works for triangles, polygons and lines).
            Also works for shapes while animating.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <returns>
            The y coordinate of the top edge of the shape.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.Width(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the shape's visible (including zoom) width.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <returns>
            The shape visible width.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.Height(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the shape's visible (including zoom) height.
            </summary>
      <param name="shapeName">
            The shape or control name.
            </param>
      <returns>
            The shape visible height.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.SetImage(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set or change an image in a button or image shape.
            </summary>
      <param name="shapeName">
            The image or button name.
            </param>
      <param name="imageName">
            The image to load.
            Value returned from ImageList.LoadImage or local or network image file.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.AddAnimatedGif(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Creates an animated gif shape.  
            Do not add a very large number of these or performance may be degraded.
            </summary>
      <param name="imageName">
            The animated gif file (local or network) to load.
            </param>
      <param name="repeat">
            Continuously repeat the animation "True" or "False".
            </param>
      <returns>
            The animated gif shape name.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.AddAnimatedImage(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Creates an animation from a single image with multiple images on one layer.  
            Do not add a very large number of these or performance may be degraded.
            </summary>
      <param name="imageName">
            The image file (local or network) to load.
            Can also be an ImageList image.
            </param>
      <param name="repeat">
            Continuously repeat the animation "True" or "False".
            </param>
      <param name="countX">
            The number of sub-images in the X direction.
            </param>
      <param name="countY">
            The number of sub-images in the Y direction.
            </param>
      <returns>
            The animated shape name.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.AnimationSet(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Reset animated image to a selected image.
            </summary>
      <param name="shapeName">
            The animated image shape name.
            </param>
      <param name="image">
            The selected animated image number (indexed from 1).
            </param>
    </member>
    <member name="M:LitDev.LDShapes.AnimationCount(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the number of images in an animated image.
            </summary>
      <param name="shapeName">
            The animated image shape name.
            </param>
      <returns>The number of images in the animated image.</returns>
    </member>
    <member name="M:LitDev.LDShapes.AnimationPause(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Pause an animated image.
            Paused images can still be updated using AnimationSet
            </summary>
      <param name="shapeName">
            The animated image shape name.
            </param>
    </member>
    <member name="M:LitDev.LDShapes.AnimationResume(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Resume a previously paused animated image.
            </summary>
      <param name="shapeName">
            The animated image shape name.
            </param>
    </member>
    <member name="M:LitDev.LDShapes.GetAllShapesAt(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get an array of all of the shapes (if any) at the specified coordinates.
            The coordinates could be the mouse coordinates for example.
            </summary>
      <param name="x">The X coordinate</param>
      <param name="y">The Y coordinate</param>
      <returns>
            An array of shape names or "False".
            For multiple shapes, the returned array is ordered from top visual layer to bottom.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.AnimateOpacity(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a shape to animate opacity, flash (fade out and in).
            </summary>
      <param name="shapeName">The shape or control to flash.</param>
      <param name="interval">The interval in ms for a complete flash cycle.
            A value of 0 will stop the flashing.</param>
      <param name="count">The number of flashes.
            A value of 0 will flash continuously.</param>
    </member>
    <member name="M:LitDev.LDShapes.AnimateRotation(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a shape to animate rotation (rotate continuously).
            </summary>
      <param name="shapeName">The shape or control to rotate.</param>
      <param name="interval">The interval in ms for a complete 360 degree rotation.
            A value of 0 will stop the rotation.
            A value less than 0 will rotate anti-clockwise.</param>
      <param name="count">The number of rotations.
            A value of 0 will rotate continuously.</param>
    </member>
    <member name="M:LitDev.LDShapes.AnimateZoom(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a shape to animate zooming (in and out).
            </summary>
      <param name="shapeName">The shape or control to zoom.</param>
      <param name="interval">The interval in ms for a complete zoom cycle.
            A value of 0 will stop the zooming.</param>
      <param name="count">The number of zoom cycles.
            A value of 0 will zoom continuously.</param>
      <param name="scaleX">The X zoom scale factor.</param>
      <param name="scaleY">The Y zoom scale factor.</param>
    </member>
    <member name="M:LitDev.LDShapes.SetShapeEvent(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Register a shape to record mouse events: MouseDown, MouseUp, MouseEnter, MouseLeave, GotFocus and LostFocus.
            </summary>
      <param name="shapeName">The shape or control to add.</param>
    </member>
    <member name="M:LitDev.LDShapes.GetAllShapes">
      <summary>
            Get an array of all currently created shapes.
            </summary>
      <returns>An array of shape names.</returns>
    </member>
    <member name="M:LitDev.LDShapes.GetOpacity(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Gets the opacity of a shape.
            </summary>
      <param name="shapeName">
            The name of the shape.
            </param>
      <returns>
            The opacity of the object as a value between 0 and 100.  0 is completely transparent and 100 is completely opaque.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.ZoomAll(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Zoom all shapes.
            </summary>
      <param name="scaleX">The x-axis zoom level.</param>
      <param name="scaleY">The y-axis zoom level.</param>
    </member>
    <member name="M:LitDev.LDShapes.Skew(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Skews the shape with the specified name by the specified angles.
            </summary>
      <param name="shapeName">
            The name of the shape to skew.
            </param>
      <param name="angleX">
            The angle to skew the shape in the X direction.
            </param>
      <param name="angleY">
            The angle to skew the shape in the Y direction.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDShapes.FastMove(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Moves the shape with the specified name to a new position.
            This method is maximally optimised for speed.
            </summary>
      <param name="shapeName">
            The name of the shape to move.
            </param>
      <param name="x">
            The x co-ordinate of the new position.
            </param>
      <param name="y">
            The y co-ordinate of the new position.
            </param>
    </member>
    <member name="P:LitDev.LDShapes.OverlapDetail">
      <summary>
            Following a call to an Overlap method, this property provides additional detail abut the intersection.
            Result may be one of:
            "Empty" - no intersection
            "FullyContains" - shape1 is completely inside shape2
            "Intersects" - overlap but neither is fully contained
            "FullyInside" - shape2 is completely inside shape1
            </summary>
    </member>
    <member name="P:LitDev.LDShapes.AnimationInterval">
      <summary>
            The update interval for animated images in ms (default 100).
            A value of zero will pause all animated image updates, for example allowing AnimationSet to set images as required.
            This is an internal timer that applies to all animated images that are not paused or completed a non-repeating cycle.
            </summary>
    </member>
    <member name="P:LitDev.LDShapes.LastEventShape">
      <summary>
            The last shape for which an event occured (ShapeEvent).
            </summary>
    </member>
    <member name="P:LitDev.LDShapes.LastEventType">
      <summary>
            The last shape event type which an event occured (ShapeEvent).  May be one of the following.
            "MouseDown"
            "MouseUp"
            "MouseEnter"
            "MouseLeave"
            "GotFocus"
            "LostFocus"
            </summary>
    </member>
    <member name="E:LitDev.LDShapes.ShapeEvent">
      <summary>
            Event when a shape event occurs to a registered shape (SetShapeEvent)
            </summary>
    </member>
    <member name="T:LitDev.LDProcess">
      <summary>
            Control an external application.
            </summary>
    </member>
    <member name="M:LitDev.LDProcess.Start(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Start an external application.
            </summary>
      <param name="application">
            The full path of the application to start e.g. "C:\Program Files (x86)\Microsoft\Small Basic\SB.exe".
            </param>
      <param name="arguments">
            Arguments to give to the command or "" if none.
            </param>
      <returns>
            Process ID of started application, -1 if failed or -2 if attached to existing process.
            </returns>
    </member>
    <member name="M:LitDev.LDProcess.Stop(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Stop an external process.
            </summary>
      <param name="ID">
            The process ID to stop.
            </param>
      <returns>
            "True" or "False" for success or failure.
            </returns>
    </member>
    <member name="M:LitDev.LDProcess.GetProcesses">
      <summary>
            Get a list of system processes.
            </summary>
      <returns>
            An array of all the system process names, indexed by the process ID.
            </returns>
    </member>
    <member name="T:LitDev.LDSpeech">
      <summary>
            The Speech library allows text to be spoken and speech recognition.
            </summary>
    </member>
    <member name="M:LitDev.LDSpeech.Voices">
      <summary>
            Returns an array of available voices.
            </summary>
      <returns>
            An array of available voices.
            </returns>
    </member>
    <member name="M:LitDev.LDSpeech.Speak(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Speak some text.
            </summary>
      <param name="text">
            Text to be spoken.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="M:LitDev.LDSpeech.Vocabulary(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Set a vocabulary of words and phrases for the speech regonition to use.
            If this is unset, then a large language vocabulary is used and the results will generally be less good (unusable).
            Also distinct phrases can have a better recognition than single words.
            </summary>
      <param name="dictionary">
            An array of words or phrases to be recognised.
            If it is empty, then the default language vocabulary is used.
            </param>
      <returns>
            None.
            </returns>
    </member>
    <member name="P:LitDev.LDSpeech.Speed">
      <summary>
            Speed of speech (-10 to 10).
            </summary>
    </member>
    <member name="P:LitDev.LDSpeech.Volume">
      <summary>
            Volume of speech (0 to 100).
            </summary>
    </member>
    <member name="P:LitDev.LDSpeech.Voice">
      <summary>
            The current voice.
            </summary>
    </member>
    <member name="P:LitDev.LDSpeech.LastSpoken">
      <summary>
            Text of the last speech spoken (and recognised) by the computer.
            </summary>
    </member>
    <member name="P:LitDev.LDSpeech.LastSpokenConfidence">
      <summary>
            The last speech spoken detection confidence of correctness (0 to 1).
            </summary>
    </member>
    <member name="E:LitDev.LDSpeech.Listen">
      <summary>
            Event when speech is spoken (and recognised) by the computer.
            A good microphone, lots of training or consise dictionary are needed to get decent results.
            </summary>
    </member>
    <member name="T:LitDev.LDFocus">
      <summary>
            TextBoxFocus utility to control focus (textbox currently active for input).
            </summary>
    </member>
    <member name="M:LitDev.LDFocus.IsFocus(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Checks if the named shape has the focus.
            </summary>
      <param name="shapeName">
            The shape name (usually a textbox).
            </param>
      <returns>
            "True" or "False".
            </returns>
    </member>
    <member name="M:LitDev.LDFocus.SetFocus(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sets the named shape to have focus.
            </summary>
      <param name="shapeName">
            The shape name (usually a textbox).
            </param>
      <returns>
            "True" or "False" depending on success or failure.
            </returns>
    </member>
    <member name="M:LitDev.LDFocus.GetFocus">
      <summary>
            Gets the shape that has current focus.
            </summary>
      <returns>
            The shape name (usually a textbox) or "False".
            </returns>
    </member>
    <member name="T:LitDev.LDMath">
      <summary>
            Trig functions with degrees.
            Other assorted maths functions and calculations.
            </summary>
    </member>
    <member name="M:LitDev.LDMath.Sin(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Sin of an angle in degrees.
            </summary>
      <param name="angle">
            The angle in degrees.
            </param>
      <returns>
            The Sin of the angle.
            </returns>
    </member>
    <member name="M:LitDev.LDMath.Cos(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Cos of an angle in degrees.
            </summary>
      <param name="angle">
            The angle in degrees.
            </param>
      <returns>
            The Cos of the angle.
            </returns>
    </member>
    <member name="M:LitDev.LDMath.Tan(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Tan of an angle in degrees.
            </summary>
      <param name="angle">
            The angle in degrees.
            </param>
      <returns>
            The Tan of the angle.
            </returns>
    </member>
    <member name="M:LitDev.LDMath.ArcSin(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            ArcSin in degrees.
            </summary>
      <param name="sin">
            The Sin of the angle.
            </param>
      <returns>
            The angle in degrees.
            </returns>
    </member>
    <member name="M:LitDev.LDMath.ArcCos(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            ArcCos in degrees.
            </summary>
      <param name="cos">
            The Cos of the angle.
            </param>
      <returns>
            The angle in degrees.
            </returns>
    </member>
    <member name="M:LitDev.LDMath.ArcTan(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            ArcTan in degrees.
            </summary>
      <param name="tan">
            The Tan of the angle.
            </param>
      <returns>
            The angle in degrees.
            </returns>
    </member>
    <member name="M:LitDev.LDMath.Convert2Radial(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Calculate the distance and angle between two points.
            </summary>
      <param name="x1">
            The X coordinate of point 1.
            </param>
      <param name="y1">
            The Y coordinate of point 1.
            </param>
      <param name="x2">
            The X coordinate of point 2.
            </param>
      <param name="y2">
            The Y coordinate of point 2.
            </param>
      <returns>
            A 2 element array with the distance and the angle in degrees from point 1 to point 2.
            </returns>
    </member>
    <member name="M:LitDev.LDMath.Convert2Cartesian(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Calculate the coordinates of a point 2, from point 1 and the distance and angle to point 2.
            </summary>
      <param name="x1">
            The X coordinate of point 1.
            </param>
      <param name="y1">
            The Y coordinate of point 1.
            </param>
      <param name="dist">
            The distance to point 2.
            </param>
      <param name="angle">
            The angle to point 2 in degrees.
            </param>
      <returns>
            A 2 element array with the coordinates of point 2.
            </returns>
    </member>
    <member name="M:LitDev.LDMath.Rotate(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Rotate point 2 clockwise about point 1.
            </summary>
      <param name="x1">
            The X coordinate of point 1.
            </param>
      <param name="y1">
            The Y coordinate of point 1.
            </param>
      <param name="x2">
            The X coordinate of point 2.
            </param>
      <param name="y2">
            The Y coordinate of point 2.
            </param>
      <param name="angle">
            The angle to rotate point 2 around point 1 in degrees.
            </param>
      <returns>
            A 2 element array with the coordinates of the rotated point 2.
            </returns>
    </member>
    <member name="M:LitDev.LDMath.Exp(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Exponential of a number e^x.
            </summary>
      <param name="value">The value to raise e to the power of.</param>
      <returns>e^x</returns>
    </member>
    <member name="M:LitDev.LDMath.Truncate(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Get the integral part of a number.
            </summary>
      <param name="value">The number to truncate.</param>
      <returns>The integral part of the number (removing decimal fraction).</returns>
    </member>
    <member name="M:LitDev.LDMath.Decimal2Base(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert a decimal integer to another base.
            </summary>
      <param name="number">The decimal integer to convert (non negative).</param>
      <param name="Base">The base to convert to (2 binary) (8 octal) (16 hex) or other bases to 36.</param>
      <returns>The number in the requested base or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDMath.Base2Decimal(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Convert a base number to a decimal integer.
            </summary>
      <param name="number">The base number to convert (non negative).</param>
      <param name="Base">The base to convert from (2 binary) (8 octal) (16 hex) or other bases up to 36.</param>
      <returns>The number as a decimal integer or "FAILED".</returns>
    </member>
    <member name="M:LitDev.LDMath.Sinh(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Hyperbolic sine.
            </summary>
      <param name="angle">Angle in radians.</param>
      <returns>Hyperbolic sine.</returns>
    </member>
    <member name="M:LitDev.LDMath.Cosh(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Hyperbolic cosine.
            </summary>
      <param name="angle">Angle in radians.</param>
      <returns>Hyperbolic cosine.</returns>
    </member>
    <member name="M:LitDev.LDMath.Tanh(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Hyperbolic tangent.
            </summary>
      <param name="angle">Angle in radians.</param>
      <returns>Hyperbolic tangent.</returns>
    </member>
    <member name="M:LitDev.LDMath.Evaluate(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Evaluate a string expression to a number or boolean (if possible).
            The JScript command 'eval' is used and may therefore allow more complex JScript manipulations (also see LDInline).
            The TextWindow should be visible prior to using this method if later use of the TextWindow is required.
            </summary>
      <param name="expression">The expression to evaluate, e.g. "(9/6) + 3" or "2.1 &gt; 1.5".</param>
      <returns>The evaluated result.</returns>
    </member>
    <member name="M:LitDev.LDMath.Evaluate2(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Evaluate a string expression to a number (if possible).
            An alternative to Evaluate that behaves nicely with the TextWindow.
            </summary>
      <param name="expression">The expression to evaluate, e.g. "1e6 + 6/4".</param>
      <returns>The evaluated result.</returns>
    </member>
    <member name="M:LitDev.LDMath.Evaluate3(Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Evaluate a string expression to a boolean "True" or "False" (if possible).
            An alternative to Evaluate that behaves nicely with the TextWindow.
            </summary>
      <param name="expression">The expression to evaluate to a boolean, e.g. "21.3 &gt; 16".</param>
      <returns>The evaluated result ("True" or "False").</returns>
    </member>
    <member name="M:LitDev.LDMath.FixSigFig(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Round a number to a fixed number of significant figures.
            </summary>
      <param name="number">The number to change.</param>
      <param name="digits">The number of significant figures.</param>
      <returns>The modified number.</returns>
    </member>
    <member name="M:LitDev.LDMath.FixDecimal(Microsoft.SmallBasic.Library.Primitive,Microsoft.SmallBasic.Library.Primitive)">
      <summary>
            Round a number to a fixed number of decimal places.  Additional training decimal 0s are added if required.
            </summary>
      <param name="number">The number to change.</param>
      <param name="digits">The number of decimal places.</param>
      <returns>The modified number.</returns>
    </member>
    <member name="P:LitDev.LDMath.E">
      <summary>
            Natural logarithm base.
            </summary>
    </member>
    <member name="P:LitDev.LDMath.RandomNumberSeed">
      <summary>
            Set the seed for random numbers.  The seed should be an integer number and be set before Math.GetRandomNumber is called.
            The random number sequence will be initialised by the seed and can be used for testing when a repeatable sequence of random numbers is required.
            </summary>
    </member>
    <member name="P:LitDev.LDMath.MinNumber">
      <summary>
            The minimum number that Small Basic can handle.
            </summary>
    </member>
    <member name="P:LitDev.LDMath.MaxNumber">
      <summary>
            The maximum number that Small Basic can handle.
            </summary>
    </member>
    <member name="T:LitDev.Properties.Resources">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.allBP">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.array">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.bug">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.csv">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.DebugHelp">
      <summary>
               Looks up a localized string similar to {\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch31506\stshfhich31506\stshfbi31506\deflang2057\deflangfe2057\themelang2057\themelangfe0\themelangcs0{\fonttbl{\f0\fbidi \froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f34\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria Math;}
            {\f36\fbidi \froman\fcharset0\fprq2{\*\panose 02040503050406030204}Cambria;}{\f37\fbidi \fswiss\fcharset0\fprq2{\*\panose 020f0502020204030204}Calibri;}{\f38\fbidi  [rest of string was truncated]";.
             </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.excel">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.exit">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.help">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.info">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.iowkit32">
      <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.iowkit64">
      <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.legend">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.Microsoft_Expression_Drawing">
      <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.Microsoft_Expression_Effects">
      <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.noBP">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.pause">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.play">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.quit">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.save">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.SBIcon">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.SQLite_Interop32">
      <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.SQLite_Interop64">
      <summary>
              Looks up a localized resource of type System.Byte[].
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.stepout">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.transparency">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="P:LitDev.Properties.Resources.zoom">
      <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
    </member>
    <member name="M:LitDev.Engines.FIP.LPF1">
      <summary>
            Low pass filter
            </summary>
      <returns>Low pass filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.LPF2">
      <summary>
            Low pass filter
            </summary>
      <returns>Low pass filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.LPF3">
      <summary>
            Low pass filter
            </summary>
      <returns>Low pass filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.LPF4">
      <summary>
            Low pass filter
            </summary>
      <returns>Low pass filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.HPF1">
      <summary>
            High pass filter
            </summary>
      <returns>High pass filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.HPF2">
      <summary>
            High pass filter
            </summary>
      <returns>High pass filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.HPF3">
      <summary>
            High pass filter
            </summary>
      <returns>High pass filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.HPF4">
      <summary>
            High pass filter
            </summary>
      <returns>High pass filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.LaplaceF1">
      <summary>
            Laplace filter
            </summary>
      <returns>Laplace filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.LaplaceF2">
      <summary>
            Laplace filter
            </summary>
      <returns>Laplace filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.LaplaceF3">
      <summary>
            Laplace filter
            </summary>
      <returns>Laplace filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.LaplaceF4">
      <summary>
            Laplace filter
            </summary>
      <returns>Laplace filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.GF1">
      <summary>
            Gausian filter
            </summary>
      <returns>Gausian filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.GF2">
      <summary>
            Gausian filter
            </summary>
      <returns>Gausian filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.GF3">
      <summary>
            Gausian filter
            </summary>
      <returns>Gausian filter</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.Resize(System.Drawing.Bitmap,System.Int32,System.Int32)">
      <summary>
            Image resize using nearest neighbour method
            </summary>
      <param name="OriginalImage">Original image</param>
      <param name="Width">Output width</param>
      <param name="Height">Output height</param>
      <returns>Resized image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.Resize2(System.Drawing.Bitmap,System.Int32,System.Int32)">
      <summary>
            Image resize using bilinear interpolation method
            </summary>
      <param name="OriginalImage">Original image</param>
      <param name="Width">Output width</param>
      <param name="Height">Output height</param>
      <returns>Resized image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.Rotate(System.Drawing.Bitmap,System.Double)">
      <summary>
            Image rotation
            </summary>
      <param name="OriginalImage">Original image</param>
      <param name="Angle">Rotate angle in degrees</param>
      <returns>Rotated image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.Rotate(System.Drawing.Bitmap,System.Double,System.Int32,System.Int32)">
      <summary>
            Image rotation
            </summary>
      <param name="OriginalImage">Original image</param>
      <param name="Angle">Rotate angle in degrees</param>
      <param name="xCenter">X Center</param>
      <param name="yCenter">Y Center</param>
      <returns>Rotated image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.rgb2hsv(System.Drawing.Color)">
      <summary>
            Transforms RGB color model to HSV
            </summary>
      <param name="pixel">RGB color</param>
      <returns>HSV values [H, S, V]</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.hsv2rgb(System.Double[])">
      <summary>
            Transforms HSV color model to RGB
            </summary>
      <param name="hsv">HSV values [H, S, V]</param>
      <returns>RGB color</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.rgb2cmyk(System.Drawing.Color)">
      <summary>
            Transforms RGB color model to CMYK
            </summary>
      <param name="pixel">RGB color</param>
      <returns>CMYK values [C, M, Y, K]</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.cmyk2rgb(System.Double[])">
      <summary>
            Transforms CMYK color model to RGB
            </summary>
      <param name="cmyk">CMYK values [C, M, Y, K]</param>
      <returns>RGB color</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.color2greyscale(System.Drawing.Color)">
      <summary>
            Converts RGB pixel to greyscale using luminance method
            </summary>
      <param name="pixel">RGB pixel</param>
      <returns>Greyscale pixel</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.CMYKLayers(System.Drawing.Bitmap)">
      <summary>
            Creates CMYK layesr from RGB image
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>CMYK layers as RGB bitmaps</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.Shift(System.Drawing.Bitmap)">
      <summary>
            Transforms image into to shifted array of doubles 
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Shifted array</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.DFT(System.Drawing.Bitmap)">
      <summary>
            Discrete Fourier Transform of image
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Image spectrum</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.SDFT(System.Drawing.Bitmap)">
      <summary>
            Shifted Discrete Fourier Transform of image.
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Shifted image spectrum</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.RGBMatrix(System.Drawing.Bitmap)">
      <summary>
            Seperates values of each RGB layer
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>[Red, Green, Blue] image layers</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.RMatrix(System.Drawing.Bitmap)">
      <summary>
            Separates red color layer
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Red color layer</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.GMatrix(System.Drawing.Bitmap)">
      <summary>
            Separates green color layer
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Green color layer</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.BMatrix(System.Drawing.Bitmap)">
      <summary>
            Separates blue color layer
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Blue color layer</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.RGBLayers(System.Drawing.Bitmap)">
      <summary>
            Seperates values of each RGB layer
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>[Red, Green, Blue] image layers as Bitmaps</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.LogaritmicScaling(System.Drawing.Bitmap)">
      <summary>
            Image histogram normalization using 10-base logarithm scaling
            </summary>
      <param name="OriginalImage">Original AGB image</param>
      <returns>Normalized image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ToGreyscale(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB image to greyscale using luminance method
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Greyscaled image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ToGreyscaleAVG(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB image to greyscale using average method
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Greyscaled image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ToGreyscaleLightness(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB image to greyscale using lightness method
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Greyscaled image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.InverseImage(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Converts ARGB image to greyscale using luminance method and inverses it with respect to given threshold
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="threshold">Inverse threshold</param>
      <returns>Inversed image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.NegativeImageGS(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB image to greyscale using luminance method and calculates its negative
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Negative</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.NegativeImageColor(System.Drawing.Bitmap)">
      <summary>
            Calculate image negative
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Negative</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.AddImages(System.Drawing.Bitmap,System.Drawing.Bitmap)">
      <summary>
            Converts ARGB images to greyscale using luminance method and adds
            </summary>
      <param name="Left">Image</param>
      <param name="Right">Image</param>
      <returns>Product of addition</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.SubtractImages(System.Drawing.Bitmap,System.Drawing.Bitmap)">
      <summary>
            Converts ARGB images to greyscale using luminance method and subtracts
            </summary>
      <param name="Left">Minuend image</param>
      <param name="Right">Subtrahend image</param>
      <returns>Product of subtraction</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ToBlackwhite(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Converts ARGB image to black and white and inverses it with respect to given threshold
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="threshold">Threshold</param>
      <returns>Balck and white image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ToBlackwhiteInverse(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Converts ARGB image to black and white and inverses it with respect to given threshold
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="threshold">Threshold</param>
      <returns>Balck and white image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.Histogram(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB images to greyscale using luminance method and returns histogram
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Image histogram (each list position corresponds to brightness level)</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.RGBHistogram(System.Drawing.Bitmap)">
      <summary>
            Returns color image histogram
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Image histogram (dimension 0 corresponds to color code (0 -&gt;Red, 1 -&gt; Green, 2 -&gt; Blue), dimension 1 - each position corresponds to brightness level)</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.MinBrightness(System.Drawing.Bitmap)">
      <summary>
            Returns image minimum brightness level
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Minimum brightness level in given image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.MaxBrightness(System.Drawing.Bitmap)">
      <summary>
            Returns image maximum brightness level
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Maximum brightness level in given image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ContrastStretching(System.Drawing.Bitmap)">
      <summary>
            onverts ARGB images to greyscale using luminance method and brighten using contrast stretching method.
            Brightness minimum and maximum available values are by default 0 and 255.
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Brigthen greyscaled image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ContrastStretching(System.Drawing.Bitmap,System.Int32,System.Int32)">
      <summary>
            Converts ARGB images to greyscale using luminance method and brighten using contrast stretching method.
            Brightness minimum and maximum available values are by default 0 and 255.
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="RMinSet">Minimum available brightness value</param>
      <param name="RMaxSet">Maximum available brightness value</param>
      <returns>Brigthen greyscaled image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.HistogramShift(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Converts ARGB images to greyscale using luminance method and shifts its histogram with respect to given offset.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <param name="offset">Shift offset</param>
      <returns>Shifted greyscaled image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.HistoramEqualization(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB images to greyscale using luminance method and enhances contrast using equalization method.
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Greyscaled contrast-enhances image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageSobelFilterGS(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB images to greyscale using luminance method and calculates module of image convolution with Sobel operators (horizontal and vertical axis)
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Filtered image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageSobelFilterColor(System.Drawing.Bitmap)">
      <summary>
            Calculates module of image convolution with Sobel operators (horizontal and vertical axis)
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Filtered image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImagePrewittFilterGS(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB images to greyscale using luminance method and calculates module of image convolution with Prewitt operators (horizontal and vertical axis)
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Filtered image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImagePrewittFilterColor(System.Drawing.Bitmap)">
      <summary>
            Calculates module of image convolution with Prewitt operators (horizontal and vertical axis)
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Filtered image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageMedianFilterGS(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Converts ARGB images to greyscale using luminance method and calculates image filtartion with median mask of given size.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <param name="size">Median mask dimension</param>
      <returns>Filtered image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageMedianFilterColor(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Calculates image filtartion with median mask of given size.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <param name="size">Median mask dimension</param>
      <returns>Filtered image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageErosionFilterGS(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB images to greyscale using luminance method and calculates image filtartion with erosion mask of 3 x 3 dimension.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <returns>Filtered image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageErosionFilterGS(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Converts ARGB images to greyscale using luminance method and calculates image filtartion with erosion mask of given size.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <param name="size">Erosion mask dimension</param>
      <returns>Filtered image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageDilatationFilterGS(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB images to greyscale using luminance method and calculates image filtartion with dilatation mask of 3 x 3 dimension.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <returns>Filtered image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageDilatationFilterGS(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Converts ARGB images to greyscale using luminance method and calculates image filtartion with dilatation mask of given size.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <param name="size">Dilatation mask dimension</param>
      <returns>Filtered image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageSDROMFilterGS(System.Drawing.Bitmap)">
      <summary>
            Converts ARGB images to greyscale using luminance method and calculates image filtartion with SD-ROM mask of size 3.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <returns>Filtred image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageSDROMFilterGS(System.Drawing.Bitmap,System.Int32,System.Int32[])">
      <summary>
            Converts ARGB images to greyscale using luminance method and calculates image filtartion with SD-ROM mask of given size.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <param name="size">SD-ROM mask size</param>
      <param name="thresholds">Array of thresholds</param>
      <returns>Filtred image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageSDROMFilterColor(System.Drawing.Bitmap)">
      <summary>
            Ccalculates image filtartion with SD-ROM mask of size 3.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <returns>Filtred image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageSDROMFilterColor(System.Drawing.Bitmap,System.Int32,System.Int32[])">
      <summary>
            Calculates image filtartion with SD-ROM mask of given size.
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <param name="size">SD-ROM mask size</param>
      <param name="thresholds">Array of thresholds</param>
      <returns>Filtred image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageOpenGS(System.Drawing.Bitmap)">
      <summary>
            Image to greyscale convertion and opening with 3x3 element
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <returns>Result of opening operation</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageOpenGS(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Image to greyscale convertion and opening with element of given size
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <param name="size">Opening element size</param>
      <returns>Result of opening operation</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageCloseGS(System.Drawing.Bitmap)">
      <summary>
            Image to greyscale convertion and closing with 3x3 element
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <returns>Result of closing operation</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageCloseGS(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Image to greyscale convertion and opening with element of given size
            </summary>
      <param name="OriginalImage">Orignal ARGB image</param>
      <param name="size">Opening element size</param>
      <returns>Result of opening operation</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ColorFiltration(System.Drawing.Bitmap,System.String)">
      <summary>
            Image color filtration with defined color filter
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="color">Color filter. Available color filters are: Magenta, Yellow, Cyan, Magenta-Yellow, Cyan-Magenta, Yellow-Cyan</param>
      <returns>Result of color filtration</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.GammaCorrection(System.Drawing.Bitmap,System.Double)">
      <summary>
            Converts image to greyscale and perform gamma correction
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="Gamma">Gamma correction coefficient</param>
      <returns>Gamma corrected image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.GammaCorrectionGS(System.Drawing.Bitmap,System.Double)">
      <summary>
            Gamma correction
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="Gamma">Gamma correction coefficient</param>
      <returns>Gamma corrected image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.Sepia(System.Drawing.Bitmap,System.Double)">
      <summary>
            Sepia filtration
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="Coef">Sepia level</param>
      <returns>Sepia image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ColorAccent(System.Drawing.Bitmap,System.Double,System.Double)">
      <summary>
            Color accent filtration
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="h">Hue of accented color</param>
      <param name="range">Range of acceptance</param>
      <returns>Color accent filtration</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageKuwaharaFilterGS(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Image to greyscale convertion and kuwahara filtration
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="FilterSize">Kuwahara filter size</param>
      <returns>Filtred image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.ImageKuwaharaFilterColor(System.Drawing.Bitmap,System.Int32)">
      <summary>
            Kuwahara filtration
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="FilterSize">Kuwahara filter size</param>
      <returns>Filtred image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.TiltShift(System.Drawing.Bitmap)">
      <summary>
            Tilt shift filtration
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Tilt shifted image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.Blurring(System.Drawing.Bitmap,System.Int32,System.Int32,System.Double)">
      <summary>
            Image bluring
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="X">Horizontal coordinate</param>
      <param name="Y">Vertical coordinate</param>
      <param name="r">Sharp region radius</param>
      <returns>Blurred image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.OilPaint(System.Drawing.Bitmap,System.Int32,System.Int32)">
      <summary>
            Oil paint filtration
            </summary>
      <param name="OriginalImage">original ARGB image</param>
      <param name="R">Radius of oil paint algorithm</param>
      <param name="Level">Available levels of intensity</param>
      <returns>Oil paint filtred image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.Cartoon(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32)">
      <summary>
            Cartoon effect received by combining oil paint algorithm and Sobel edge detecting
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <param name="R">Radius of oil paint algorithm</param>
      <param name="Level">Available levels of intensity</param>
      <param name="InverseThreshold">Inverse threshold</param>
      <returns>Cartoon effect result</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.SketchCharcoal(System.Drawing.Bitmap)">
      <summary>
            Charcoal sketch effect received by combining median filtration with mask size of 5, Sobel edge detecting, image inversion on point 80
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Sketch effect image</returns>
    </member>
    <member name="M:LitDev.Engines.FIP.Sketch(System.Drawing.Bitmap)">
      <summary>
            Pen sketch effect received by combining laplace edge detecting, black and white transformation with inversion on point 35 and SDROM filter to eliminate smaller artefacts
            </summary>
      <param name="OriginalImage">Original ARGB image</param>
      <returns>Sketch effect image</returns>
    </member>
    <member name="T:LitDev.Engines.Capture">
      <summary> Summary description for MainForm. </summary>
    </member>
    <member name="F:LitDev.Engines.Capture.m_FilterGraph">
      <summary> graph builder interface. </summary>
    </member>
    <member name="F:LitDev.Engines.Capture.m_PictureReady">
      <summary> so we can wait for the async job to finish </summary>
    </member>
    <member name="F:LitDev.Engines.Capture.m_bGotOne">
      <summary> Set by async routine when it captures an image </summary>
    </member>
    <member name="F:LitDev.Engines.Capture.m_bRunning">
      <summary> Indicates the status of the graph </summary>
    </member>
    <member name="F:LitDev.Engines.Capture.m_handle">
      <summary> Dimensions of the image, calculated once in constructor. </summary>
    </member>
    <member name="M:LitDev.Engines.Capture.#ctor">
      <summary> Use capture device zero, default frame rate and size</summary>
    </member>
    <member name="M:LitDev.Engines.Capture.#ctor(System.Int32)">
      <summary> Use specified capture device, default frame rate and size</summary>
    </member>
    <member name="M:LitDev.Engines.Capture.#ctor(System.Int32,System.Int32)">
      <summary> Use specified capture device, specified frame rate and default size</summary>
    </member>
    <member name="M:LitDev.Engines.Capture.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary> Use specified capture device, specified frame rate and size</summary>
    </member>
    <member name="M:LitDev.Engines.Capture.Dispose">
      <summary> release everything. </summary>
    </member>
    <member name="M:LitDev.Engines.Capture.GetBitMap">
      <summary> capture the next image </summary>
    </member>
    <member name="M:LitDev.Engines.Capture.SetupGraph(DirectShowLib.DsDevice,System.Int32,System.Int32,System.Int32)">
      <summary> build the capture graph for grabber. </summary>
    </member>
    <member name="M:LitDev.Engines.Capture.CloseInterfaces">
      <summary> Shut down capture </summary>
    </member>
    <member name="T:LitDev.Engines.Defines">
      <summary>
             Die Klasse IowKitFunctions kapselt die Funktionen der IowKit.dll. 
             Die Klasse IowKitDefines kapeslt die Konstanten der Iowkit.dll
             </summary>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitOpenDevice">
      <summary>
            Die Metode IowKitOpenDevice öffnet alle am USB erkannten IO-Warrior-Bausteine
            und liefert ein Handle für den zuerst gefundenen IO-Warrior zurück.
            </summary>
      <returns>Handle für IO-Warrior oder null bei Misserfolg.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitCloseDevice(System.IntPtr)">
      <summary>
            Die Methode IowKitCloseDevice schließt den IO-Warrior der durch das
            gegebene Handle kontrolliert wird.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitGetProductId(System.IntPtr)">
      <summary>
            Fordert die Produkt-Identität (PID) des IO-Warrior Bausteines ab,
            der durch das gegebene Handle kontrolliert wird.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitGetNumDevs">
      <summary>
            Zählt und nummeriert die am USB angeschlossenen IO-Warrior Bausteine.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitGetDeviceHandle(System.UInt32)">
      <summary>
            Die Methode IowKitGetDeviceHandle arbeitet liefert zu dem Gerät mit
            der angegebenen Nummer ein gültiges Handle. Vorrausgesetzt, das Gerät
            mit der Nummer existiert.
            IowKitGetDeviceHandle funktioniert nur nach einem erfolgreichen Aufruf
            von IowKitDeviceOpen. Erst dann sind alle Bausteine nummeriert.
            </summary>
      <param name="numDevice">Nummer des zu öffnenden Gerätes.</param>
      <returns>Ein gültiges Handle für das Gerät oder 0 bei Misserfolg.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitGetRevision(System.IntPtr)">
      <summary>
            Liefert die Version der IoWarrior-Firmaware zurück. Die oberen 2 Byte sind immer 0.
            Es sind 4 Hex-Stellen gültig. Wäre die gegenwärtige Softwareversion 1.0.2.1 so wird
            0x1021 zurückgegeben. Ältere IO-Warrior, die keine eigene Seriennummer haben, liefern
            eine Versionsnummer kleiner 1.0.1.0 zurück.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
      <returns>Die Softwareversion des IO-Warriors oder 0, wenn kein gültiges
            Handle übergeben wurde.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitGetSerialNumber(System.IntPtr,System.Text.StringBuilder)">
      <summary>
            Liest die Seriennummer aus dem durch ein gültiges Handle gesteuerten IO-Warrior
            heraus.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
      <param name="SnTarget">Verweis auf ein Datenfeld, dass die Seriennummer speichert.
            Der Stringbuilder muss zuvor instanziert worden sein.</param>
      <returns>True, wenn die Seriennummer erfolgreich im angegebenen Datenfeld abgelegt
            werden konnte. False, wenn das Handle ungültig war, der IO-Warrior keine Seriennummer
            hat oder das Abspeichern der Nummer im übergebenen Ziel fehlgeschlagen ist.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitRead(System.IntPtr,System.UInt32,System.Byte[],System.UInt32)">
      <summary>
            Liest Daten vom IO-Warrior. Die Funktion blockiert den aufrufenden Thread bis
            eine Änderung an den Eingängen des IO-Warriors durch den Baustein regisriert wird.
            Ein nicht blockierendes Lesen kann über den Aufruf von IowKitReadNonBlocking()
            erfolgen.
            Die Daten kommen in Form eines Reports an. Nähere Beschreibung der Reports ist
            im Datenblatt des jeweiligen IO-Warriors zu finden.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
      <param name="numPipe">Datenkanal, aus dem gelesen werden soll. Reicht von 0
            bis IOWKIT_MAX_PIPES-1</param>
      <param name="buffer">Ziel für Ablage der Daten.</param>
      <param name="Length">Anzahl der einzulesenden Bytes.</param>
      <returns>Anzahl tatsächlich eingelesener Bytes oder 0 bei Misserfolg.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitReadNonBlocking(System.IntPtr,System.UInt32,System.Byte[],System.UInt32)">
      <summary>
            Liest Daten vom IO-Warrior. Der aufrufende Thread wird nicht blockiert, wenn
            keine Daten zur Verfügung stehen, also keine Änderung an den Eingängen des
            IO-Warriors stattgefunden hat.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
      <param name="numPipe">Datenkanal, aus dem gelesen werden soll. Reicht von 0
            bis IOWKIT_MAX_PIPES-1</param>
      <param name="buffer">Ziel für Ablage der Daten.</param>
      <param name="Length">Anzahl der einzulesenden Bytes.</param>
      <returns>Anzahl tatsächlich eingelesener Bytes oder 0 bei Misserfolg.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitReadImmediate(System.IntPtr,System.Byte[])">
      <summary>
            Liest den Pinstatus der Eingänge des angeschlossenen IO-Warriors direkt aus.
            Die Funktion gibt True zurück, wenn zuvor eine Änderung an den Pins durch den
            Baustein registriert wurde. Gleichzeitig is im Ziel-Datenfeld ein Abbild der
            Eingänge als Wert verfügbar.
            Achtung!!: Diese Funktion arbeitet nicht mit dem IO-Warrior 56 zusammen. Der
            Baustein gibt mehr als 32-Bit zurück.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
      <param name="IoPinStatus">Ziel-Datenfeld für das Abspeichern der Pin-Zustände.</param>
      <returns>True bei Erfolg, False wenn keine neuen Daten erfasst wurden oder
            das übergebene Handle nicht funktioniert.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitSetTimeout(System.IntPtr,System.UInt32)">
      <summary>
            Legt die Grenze für eine Zeitüberschreitung beim Lesezugriff auf den IO-Warrior fest.
            Ein Timeout während einer laufenden, noch nicht beendeten Leseaktion führt zu
            Datenverlust (Reports gehen verloren). IowKitRead() schlägt fehl, wenn nicht innerhalb
            der gegebenen Grenze Daten vom IO-Warrior eingelesen werden können.
            Bei Zeitüberschreitung müssen alle vor bis zu dem Zeitpunkt bereits gesendeten
            aber noch nicht ausgeführten Aktionen erneut übermittelt werden (z.B. I2C-Bus schreiben
            oder lesen).
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
      <param name="Timeout">Grenze für Zeitüberschreitung in Millisekunden. Empfohlen in
            der iowkit.dll-Beschreibung sind 1000ms oder mehr.</param>
      <returns>True bei Erfolg oder False bei Fehlschlag.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitSetWriteTimeout(System.IntPtr,System.UInt32)">
      <summary>
            Legt die Grenze für eine Zeitüberschreitung beim Schreibzugriff auf den IO-Warrior fest.
            IowKitWrite() schlägt fehl, wenn Daten nicht innerhalb der vorgegebenen Grenze geschrieben
            werden können. Schreibfehler sind untypisch. Verbindungen und Hardware näher prüfen,
            wenn Fehler auftreten.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
      <param name="Timeout">Grenze für Zeitüberschreitung in Millisekunden. Empfohlen in
            der iowkit.dll-Beschreibung sind 1000ms oder mehr.</param>
      <returns>True bei Erfolg oder False bei Fehlschlag.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitCancelIo(System.IntPtr,System.UInt32)">
      <summary>
            Beendet alle laufenden Datentransferaktionen auf dem angegebenen Datenkanal(Pipe).
            Der Einsatz dieser Methode erfordert im Regelfall einen eigenen Thread, da eine
            beipsielsweise laufende IowKitRead()-Funktion den aufrufenden Thread blockiert,
            bis eine Rückgabe empfangen werden konnte.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
      <param name="numPipe">Nummer des Datenkanals.</param>
      <returns>True bei Erfolg, sonst false.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitWrite(System.IntPtr,System.UInt32,System.Byte[],System.UInt32)">
      <summary>
            Schreibt "length" Bytes in den durch "numPipe" angegebenen Datenkanal des IO-Warriors.
            Wird etwas anderes als ein gültiger Report, bestehend aus einer korrekten Anzahl von
            Bytes und einer vom gewählten Datenkanal akzeptierten Report-ID, gesendet, schlägt
            die Funktion fehl.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
      <param name="numPipe">Datenkanal, der beschickt werden soll.</param>
      <param name="buffer">Puffer, der die zu schreibenden Daten bereistellt.</param>
      <param name="length">Anzahl zu schreibender Bytes.</param>
      <returns>Bei erfolgreicher Durchführung ist die Anzahl geschriebener =
            Anazahl zu schreibender Bytes.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitGetThreadHandle(System.IntPtr)">
      <summary>
            Gibt den Handle des Threads zurück, der zum Lesen der I/O-Pins des
            IO-Warriors genutzt wird. Linux nutzt keie Threads um die Funktionen
            des IO-Warriors einzubinden und gibt daher immer 0 zurück.
            </summary>
      <param name="IowHandle">Gültiges Handle zum IO-Warrior.</param>
      <returns>Handle für den laufenden Thread oder 0 bei Misserfolg.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitVersion">
      <summary>
            Gibt die Version der iowkit.dll als string zurück.
            </summary>
      <returns>String mit der Versionsangabe.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.IowKitSetLegacyOpenMode(System.UInt32)">
      <summary>
            Öffnet einen IOWarrior40 dessen Firmware Revision älter 1.0.1.0 ist. Diese
            Bausteine haben keine Seriennummer die ausgelesen werden kann.
            </summary>
      <param name="legacyOpenMode">Simple oder Complex-Mode.</param>
      <returns>True bei Erfolg sonst false.</returns>
    </member>
    <member name="M:LitDev.Engines.Functions.GetLastError">
      <summary>
            Liefert den zuletzt aufgetretenen Fehler zurück, der vom Kernel
            registriert worden ist.
            </summary>
      <returns>Bei Fehlerfall eine Zahl ungleich 0.</returns>
    </member>
    <member name="F:LitDev.Engines.HIDDevice.m_oFile">
      <summary>Filestream we can use to read/write from</summary>
    </member>
    <member name="F:LitDev.Engines.HIDDevice.m_nInputReportLength">
      <summary>Length of input report : device gives us this</summary>
    </member>
    <member name="F:LitDev.Engines.HIDDevice.m_nOutputReportLength">
      <summary>Length if output report : device gives us this</summary>
    </member>
    <member name="F:LitDev.Engines.HIDDevice.m_hHandle">
      <summary>Handle to the device</summary>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.Dispose">
      <summary>
            Dispose method
            </summary>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.Dispose(System.Boolean)">
      <summary>
            Disposer called by both dispose and finalise
            </summary>
      <param name="bDisposing">True if disposing</param>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.Initialise(System.String)">
      <summary>
            Initialises the device
            </summary>
      <param name="strPath">Path to the device</param>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.BeginAsyncRead">
      <summary>
            Kicks off an asynchronous read which completes when data is read or when the device
            is disconnected. Uses a callback.
            </summary>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.ReadCompleted(System.IAsyncResult)">
      <summary>
            Callback for above. Care with this as it will be called on the background thread from the async read
            </summary>
      <param name="iResult">Async result parameter</param>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.Write(LitDev.Engines.OutputReport)">
      <summary>
            Write an output report to the device.
            </summary>
      <param name="oOutRep">Output report to write</param>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.HandleDataReceived(LitDev.Engines.InputReport)">
      <summary>
            virtual handler for any action to be taken when data is received. Override to use.
            </summary>
      <param name="oInRep">The input report that was received</param>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.HandleDeviceRemoved">
      <summary>
            Virtual handler for any action to be taken when a device is removed. Override to use.
            </summary>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.GetDevicePath(System.IntPtr,LitDev.Engines.Win32Usb.DeviceInterfaceData@)">
      <summary>
            Helper method to return the device path given a DeviceInterfaceData structure and an InfoSet handle.
            Used in 'FindDevice' so check that method out to see how to get an InfoSet handle and a DeviceInterfaceData.
            </summary>
      <param name="hInfoSet">Handle to the InfoSet</param>
      <param name="oInterface">DeviceInterfaceData structure</param>
      <returns>The device path or null if there was some problem</returns>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.FindDevice(System.Int32,System.Int32,System.Type)">
      <summary>
            Finds a device given its PID and VID
            </summary>
      <param name="nVid">Vendor id for device (VID)</param>
      <param name="nPid">Product id for device (PID)</param>
      <param name="oType">Type of device class to create</param>
      <returns>A new device class of the given type or null</returns>
    </member>
    <member name="M:LitDev.Engines.HIDDevice.CreateInputReport">
      <summary>
            Virtual method to create an input report for this device. Override to use.
            </summary>
      <returns>A shiny new input report</returns>
    </member>
    <member name="P:LitDev.Engines.HIDDevice.OutputReportLength">
      <summary>
            Accessor for output report length
            </summary>
    </member>
    <member name="P:LitDev.Engines.HIDDevice.InputReportLength">
      <summary>
            Accessor for input report length
            </summary>
    </member>
    <member name="E:LitDev.Engines.HIDDevice.OnDeviceRemoved">
      <summary>
            Event handler called when device has been removed
            </summary>
    </member>
    <member name="F:LitDev.Engines.Report.m_arrBuffer">
      <summary>Buffer for raw report bytes</summary>
    </member>
    <member name="F:LitDev.Engines.Report.m_nLength">
      <summary>Length of the report</summary>
    </member>
    <member name="M:LitDev.Engines.Report.#ctor(LitDev.Engines.HIDDevice)">
      <summary>
            Constructor
            </summary>
      <param name="oDev">Constructing device</param>
    </member>
    <member name="M:LitDev.Engines.Report.SetBuffer(System.Byte[])">
      <summary>
            Sets the raw byte array.
            </summary>
      <param name="arrBytes">Raw report bytes</param>
    </member>
    <member name="P:LitDev.Engines.Report.Buffer">
      <summary>
            Accessor for the raw byte buffer
            </summary>
    </member>
    <member name="P:LitDev.Engines.Report.BufferLength">
      <summary>
            Accessor for the buffer length
            </summary>
    </member>
    <member name="M:LitDev.Engines.OutputReport.#ctor(LitDev.Engines.HIDDevice)">
      <summary>
            Construction. Setup the buffer with the correct output report length dictated by the device
            </summary>
      <param name="oDev">Creating device</param>
    </member>
    <member name="M:LitDev.Engines.InputReport.#ctor(LitDev.Engines.HIDDevice)">
      <summary>
            Construction. Do nothing
            </summary>
      <param name="oDev">Creating device</param>
    </member>
    <member name="M:LitDev.Engines.InputReport.SetData(System.Byte[])">
      <summary>
            Call this to set the buffer given a raw input report. Calls an overridable method to
            should automatically parse the bytes into meaningul structures.
            </summary>
      <param name="arrData">Raw input report.</param>
    </member>
    <member name="M:LitDev.Engines.InputReport.ProcessData">
      <summary>
            Override this to process the input report into something useful
            </summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.WM_DEVICECHANGE">
      <summary>Windows message sent when a device is inserted or removed</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.DEVICE_ARRIVAL">
      <summary>WParam for above : A device was inserted</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.DEVICE_REMOVECOMPLETE">
      <summary>WParam for above : A device was removed</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.DIGCF_PRESENT">
      <summary>Used in SetupDiClassDevs to get devices present in the system</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.DIGCF_DEVICEINTERFACE">
      <summary>Used in SetupDiClassDevs to get device interface details</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.DEVTYP_DEVICEINTERFACE">
      <summary>Used when registering for device insert/remove messages : specifies the type of device</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.DEVICE_NOTIFY_WINDOW_HANDLE">
      <summary>Used when registering for device insert/remove messages : we're giving the API call a window handle</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.PURGE_TXABORT">
      <summary>Purges Win32 transmit buffer by aborting the current transmission.</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.PURGE_RXABORT">
      <summary>Purges Win32 receive buffer by aborting the current receive.</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.PURGE_TXCLEAR">
      <summary>Purges Win32 transmit buffer by clearing it.</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.PURGE_RXCLEAR">
      <summary>Purges Win32 receive buffer by clearing it.</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.GENERIC_READ">
      <summary>CreateFile : Open file for read</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.GENERIC_WRITE">
      <summary>CreateFile : Open file for write</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.FILE_FLAG_OVERLAPPED">
      <summary>CreateFile : Open handle for overlapped operations</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.OPEN_EXISTING">
      <summary>CreateFile : Resource to be "created" must exist</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.ERROR_IO_PENDING">
      <summary>ReadFile/WriteFile : Overlapped operation is incomplete.</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.INFINITE">
      <summary>Infinite timeout</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.NullHandle">
      <summary>Simple representation of a null handle : a closed stream will get this handle. Note it is public for comparison by higher level classes.</summary>
    </member>
    <member name="F:LitDev.Engines.Win32Usb.InvalidHandleValue">
      <summary>Simple representation of the handle returned when CreateFile fails.</summary>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.HidD_GetHidGuid(System.Guid@)">
      <summary>
            Gets the GUID that Windows uses to represent HID class devices
            </summary>
      <param name="gHid">An out parameter to take the Guid</param>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.SetupDiGetClassDevs(System.Guid@,System.String,System.IntPtr,System.UInt32)">
      <summary>
            Allocates an InfoSet memory block within Windows that contains details of devices.
            </summary>
      <param name="gClass">Class guid (e.g. HID guid)</param>
      <param name="strEnumerator">Not used</param>
      <param name="hParent">Not used</param>
      <param name="nFlags">Type of device details required (DIGCF_ constants)</param>
      <returns>A reference to the InfoSet</returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.SetupDiDestroyDeviceInfoList(System.IntPtr)">
      <summary>
            Frees InfoSet allocated in call to above.
            </summary>
      <param name="lpInfoSet">Reference to InfoSet</param>
      <returns>true if successful</returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.SetupDiEnumDeviceInterfaces(System.IntPtr,System.IntPtr,System.Guid@,System.UInt32,LitDev.Engines.Win32Usb.DeviceInterfaceData@)">
      <summary>
            Gets the DeviceInterfaceData for a device from an InfoSet.
            </summary>
      <param name="lpDeviceInfoSet">InfoSet to access</param>
      <param name="pDeviceInfoData">Not used</param>
      <param name="gClass">Device class guid</param>
      <param name="nIndex">Index into InfoSet for device</param>
      <param name="oInterfaceData">DeviceInterfaceData to fill with data</param>
      <returns>True if successful, false if not (e.g. when index is passed end of InfoSet)</returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.SetupDiGetDeviceInterfaceDetail(System.IntPtr,LitDev.Engines.Win32Usb.DeviceInterfaceData@,System.IntPtr,System.UInt32,System.UInt32@,LitDev.Engines.Win32Usb.DeviceInfoData@)">
      <summary>
            SetupDiGetDeviceInterfaceDetail - two of these, overloaded because they are used together in slightly different
            ways and the parameters have different meanings.
            Gets the interface detail from a DeviceInterfaceData. This is pretty much the device path.
            You call this twice, once to get the size of the struct you need to send (nDeviceInterfaceDetailDataSize=0)
            and once again when you've allocated the required space.
            </summary>
      <param name="lpDeviceInfoSet">InfoSet to access</param>
      <param name="oInterfaceData">DeviceInterfaceData to use</param>
      <param name="lpDeviceInterfaceDetailData">DeviceInterfaceDetailData to fill with data</param>
      <param name="nDeviceInterfaceDetailDataSize">The size of the above</param>
      <param name="nRequiredSize">The required size of the above when above is set as zero</param>
      <param name="lpDeviceInfoData">Not used</param>
      <returns>
      </returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.RegisterDeviceNotification(System.IntPtr,LitDev.Engines.Win32Usb.DeviceBroadcastInterface,System.UInt32)">
      <summary>
            Registers a window for device insert/remove messages
            </summary>
      <param name="hwnd">Handle to the window that will receive the messages</param>
      <param name="oInterface">DeviceBroadcastInterrface structure</param>
      <param name="nFlags">set to DEVICE_NOTIFY_WINDOW_HANDLE</param>
      <returns>A handle used when unregistering</returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.UnregisterDeviceNotification(System.IntPtr)">
      <summary>
            Unregister from above.
            </summary>
      <param name="hHandle">Handle returned in call to RegisterDeviceNotification</param>
      <returns>True if success</returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.HidD_GetPreparsedData(System.IntPtr,System.IntPtr@)">
      <summary>
            Gets details from an open device. Reserves a block of memory which must be freed.
            </summary>
      <param name="hFile">Device file handle</param>
      <param name="lpData">Reference to the preparsed data block</param>
      <returns>
      </returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.HidD_FreePreparsedData(System.IntPtr@)">
      <summary>
            Frees the memory block reserved above.
            </summary>
      <param name="pData">Reference to preparsed data returned in call to GetPreparsedData</param>
      <returns>
      </returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.HidP_GetCaps(System.IntPtr,LitDev.Engines.Win32Usb.HidCaps@)">
      <summary>
            Gets a device's capabilities from the preparsed data.
            </summary>
      <param name="lpData">Preparsed data reference</param>
      <param name="oCaps">HidCaps structure to receive the capabilities</param>
      <returns>True if successful</returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.CreateFile(System.String,System.UInt32,System.UInt32,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)">
      <summary>
            Creates/opens a file, serial port, USB device... etc
            </summary>
      <param name="strName">Path to object to open</param>
      <param name="nAccess">Access mode. e.g. Read, write</param>
      <param name="nShareMode">Sharing mode</param>
      <param name="lpSecurity">Security details (can be null)</param>
      <param name="nCreationFlags">Specifies if the file is created or opened</param>
      <param name="nAttributes">Any extra attributes? e.g. open overlapped</param>
      <param name="lpTemplate">Not used</param>
      <returns>
      </returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.CloseHandle(System.IntPtr)">
      <summary>
            Closes a window handle. File handles, event handles, mutex handles... etc
            </summary>
      <param name="hFile">Handle to close</param>
      <returns>True if successful.</returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.RegisterForUsbEvents(System.IntPtr,System.Guid)">
      <summary>
            Registers a window to receive windows messages when a device is inserted/removed. Need to call this
            from a form when its handle has been created, not in the form constructor. Use form's OnHandleCreated override.
            </summary>
      <param name="hWnd">Handle to window that will receive messages</param>
      <param name="gClass">Class of devices to get messages for</param>
      <returns>A handle used when unregistering</returns>
    </member>
    <member name="M:LitDev.Engines.Win32Usb.UnregisterForUsbEvents(System.IntPtr)">
      <summary>
            Unregisters notifications. Can be used in form dispose
            </summary>
      <param name="hHandle">Handle returned from RegisterForUSBEvents</param>
      <returns>True if successful</returns>
    </member>
    <member name="P:LitDev.Engines.Win32Usb.HIDGuid">
      <summary>
            Helper to get the HID guid.
            </summary>
    </member>
  </members>
</doc>